<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Syncfusion.HtmlConverter.Base</name>
    </assembly>
    <members>
        <member name="P:Syncfusion.HtmlConverter.BlinkConverter.EnableForm">
            <summary>
            Gets or sets the value is indicating EnableForm is enable or not
            </summary>
        </member>
        <member name="P:Syncfusion.HtmlConverter.BlinkConverter.EnableBookmarks">
            <summary>
            Gets or sets the value is indicating EnableBookmarks is enable or not
            </summary>
        </member>
        <member name="P:Syncfusion.HtmlConverter.BlinkConverter.HtmlElementID">
            <summary>
            Gets or sets the HtmlElementID 
            </summary>
        </member>
        <member name="P:Syncfusion.HtmlConverter.BlinkConverter.BlinkLayoutResult">
            <summary>
            Gets or sets the PdfLayoutResult value
            </summary>
        </member>
        <member name="P:Syncfusion.HtmlConverter.BlinkConverter.IsLayoutResult">
            <summary>
            Gets or sets the value is indicating PdfLayoutResult is enable or not
            </summary>
        </member>
        <member name="P:Syncfusion.HtmlConverter.BlinkConverter.CommandLineArguments">
            <summary>
            Gets or sets the Blink command line arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.HtmlConverter.BlinkConverter.EnableToc">
            <summary>
            Gets or sets the value is indicating EnableToc is enable or not
            </summary>
        </member>
        <member name="P:Syncfusion.HtmlConverter.BlinkConverter.Toc">
            <summary>
            Gets or sets TOC styles
            /// <para>This property is used internally and should not be used directly.</para>
            </summary>
        </member>
        <member name="M:Syncfusion.HtmlConverter.BlinkConverter.DeleteFile(System.String)">
            <summary>
            Delete the file
            </summary>
        </member>
        <member name="T:Syncfusion.HtmlConverter.BlinkProxyType">
            <summary>
            Type of proxy server
            </summary>
            /// <example>
            <code lang = "C#">
            //Initialize HTML converter
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.Blink);
            //Initialize Blink converter settings
            BlinkConverterSettings BlinkSettings = new BlinkConverterSettings();
            //Assign the Blink path
            BlinkSettings.BlinkPath = @"/BlinkBinaries/";
            //Set manual proxy with proxy server host and port number.
            BlinkSettings.ProxySettings.HostName = "127.0.0.1";
            BlinkSettings.ProxySettings.PortNumber = 8080;
            //Set proxy server type
            BlinkSettings.ProxySettings.Type = BlinkProxyType.Http;
            //Assign Blink settings to HTML converter
            htmlConverter.ConverterSettings = BlinkSettings;
            //Convert url to pdf
            PdfDocument document = htmlConverter.Convert("https://www.google.com");
            //Save and close the PDF document
            document.Save("Output.pdf");
            document.Close(true);
            </code>
            <code lang= "VB">
            'Initialize HTML converter
            Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.Blink)
            'Initialize Blink converter settings
            Dim BlinkSettings As New BlinkConverterSettings()
            'Assign the Blink path
            BlinkSettings.BlinkPath = "/BlinkBinaries/"
            'Set manual proxy with proxy server host and port number.
            BlinkSettings.ProxySettings.HostName = "127.0.0.1"
            BlinkSettings.ProxySettings.PortNumber = 8080
            'Set proxy server type
            BlinkSettings.ProxySettings.Type = BlinkProxyType.Http
            'Assign Blink settings to HTML converter
            htmlConverter.ConverterSettings = BlinkSettings
            'Convert url to pdf
            Dim document As PdfDocument = htmlConverter.Convert("https://www.google.com")
            'Save and close the PDF document
            document.Save("Output.pdf")
            document.Close(True)
            </code>
            </example>
            <seealso cref="T:Syncfusion.HtmlConverter.BlinkProxySettings"/>
            <seealso cref="T:Syncfusion.HtmlConverter.BlinkConverterSettings"/>
        </member>
        <member name="F:Syncfusion.HtmlConverter.BlinkProxyType.None">
            <summary>
            No proxy
            </summary>
        </member>
        <member name="F:Syncfusion.HtmlConverter.BlinkProxyType.Http">
            <summary>
            Http proxy type
            </summary>
        </member>
        <member name="F:Syncfusion.HtmlConverter.BlinkProxyType.Socks5">
            <summary>
            Socks5 proxy type
            </summary>
        </member>
        <member name="M:Syncfusion.HtmlConverter.Blink.Browser.Targets">
            <summary>
            Returns An Array of all active targets
            </summary>
        </member>
        <member name="M:Syncfusion.HtmlConverter.Blink.Browser.PagesAsync">
            <summary>
            Returns a Task which resolves to an array of all open pages.
            </summary>
        </member>
        <member name="M:Syncfusion.HtmlConverter.Blink.Launcher.LaunchAsync(Syncfusion.HtmlConverter.Blink.LaunchOptions)">
            <summary>
            The method launches a browser instance with given arguments.
            </summary>
        </member>
        <member name="M:Syncfusion.HtmlConverter.Blink.Launcher.ConnectAsync(Syncfusion.HtmlConverter.Blink.ConnectOptions)">
            <summary>
            Attaches converter to an existing Chromium instance. 
            </summary>
        </member>
        <member name="P:Syncfusion.HtmlConverter.Blink.Page.Target">
            <summary>
            Gets that target this page was created from.
            </summary>
        </member>
        <member name="M:Syncfusion.HtmlConverter.Blink.Page.QuerySelectorAsync(System.String)">
            <summary>
            The method runs QuerySelector within the page. If no element matches the selector, the return value resolve to null.
            </summary>
        </member>
        <member name="M:Syncfusion.HtmlConverter.Blink.Page.QuerySelectorAllAsync(System.String)">
            <summary>
            Runs QuerySelectorAll within the page. If no elements match the selector.
            </summary>
        </member>
        <member name="M:Syncfusion.HtmlConverter.Blink.Page.EvaluateExpressionHandleAsync(System.String)">
            <summary>
            Executes a script in browser context
            </summary>
        </member>
        <member name="M:Syncfusion.HtmlConverter.Blink.Page.EvaluateFunctionHandleAsync(System.String,System.Object[])">
            <summary>
            Executes a script in browser context
            </summary>
        </member>
        <member name="M:Syncfusion.HtmlConverter.Blink.Page.SetOfflineModeAsync(System.Boolean)">
            <summary>
            Set offline mode for the page.
            </summary>
        </member>
        <member name="M:Syncfusion.HtmlConverter.Blink.Page.ScreenshotAsync(System.String)">
            <summary>
            Takes a screenshot of the page
            </summary>
        </member>
        <member name="M:Syncfusion.HtmlConverter.Blink.Page.ScreenshotAsync(System.String,Syncfusion.HtmlConverter.Blink.ScreenshotOptions)">
            <summary>
            Takes a screenshot of the page
            </summary>
        </member>
        <member name="M:Syncfusion.HtmlConverter.Blink.Page.ScreenshotStreamAsync">
            <summary>
            Takes a screenshot of the page
            </summary>
        </member>
        <member name="M:Syncfusion.HtmlConverter.Blink.Page.ScreenshotStreamAsync(Syncfusion.HtmlConverter.Blink.ScreenshotOptions)">
            <summary>
            Takes a screenshot of the page
            </summary>
        </member>
        <member name="M:Syncfusion.HtmlConverter.Blink.Page.GetTitleAsync">
            <summary>
            Returns page's title
            </summary>
        </member>
        <member name="M:Syncfusion.HtmlConverter.Blink.Page.HoverAsync(System.String)">
            <summary>
            Fetches an element with selector and scrolls it into view if needed, and then uses mouse to hover over the center of the element.
            </summary>
        </member>
        <member name="M:Syncfusion.HtmlConverter.Blink.Page.FocusAsync(System.String)">
            <summary>
            Fetches an element with selector and focuses it
            </summary>
        </member>
        <member name="M:Syncfusion.HtmlConverter.Blink.Page.WaitForTimeoutAsync(System.Int32)">
            <summary>
            Waits for a timeout
            </summary>
        </member>
        <member name="M:Syncfusion.HtmlConverter.Blink.Page.WaitForFunctionAsync(System.String,Syncfusion.HtmlConverter.Blink.WaitForFunctionOptions,System.Object[])">
            <summary>
            Waits for a script to be evaluated
            </summary>
        </member>
        <member name="M:Syncfusion.HtmlConverter.Blink.Page.WaitForFunctionAsync(System.String,System.Object[])">
            <summary>
            Waits for a script to be evaluated
            </summary>
        </member>
        <member name="M:Syncfusion.HtmlConverter.Blink.Page.WaitForSelectorAsync(System.String,Syncfusion.HtmlConverter.Blink.WaitForSelectorOptions)">
            <summary>
            Waits for a selector to be added to the DOM
            </summary>
        </member>
        <member name="M:Syncfusion.HtmlConverter.Blink.Page.WaitForNavigationAsync(Syncfusion.HtmlConverter.Blink.NavigationOptions)">
            <summary>
            Waits for navigation
            </summary>
        </member>
        <member name="P:Syncfusion.HtmlConverter.Blink.IBrowserOptions.IgnoreHTTPSErrors">
            <summary>
            Whether to ignore HTTPS errors during navigation.
            </summary>
        </member>
        <member name="P:Syncfusion.HtmlConverter.Blink.IBrowserOptions.AppMode">
            <summary>
            Gets or sets App mode for the conversion.
            </summary>
        </member>
        <member name="T:Syncfusion.HtmlConverter.Blink.LaunchOptions">
            <summary>
            Options for launching the Chromium browser.
            </summary>
        </member>
        <member name="P:Syncfusion.HtmlConverter.Blink.BoundingBox.X">
            <summary>
            The x coordinate of the element in pixels.
            </summary>
        </member>
        <member name="P:Syncfusion.HtmlConverter.Blink.BoundingBox.Y">
            <summary>
            The y coordinate of the element in pixels.
            </summary>
        </member>
        <member name="P:Syncfusion.HtmlConverter.Blink.BoundingBox.Width">
            <summary>
            The width of the element in pixels.
            </summary>
        </member>
        <member name="P:Syncfusion.HtmlConverter.Blink.BoundingBox.Height">
            <summary>
            The height of the element in pixels.
            </summary>
        </member>
        <member name="P:Syncfusion.HtmlConverter.Blink.Clip.X">
            <summary>
            x-coordinate of top-left corner of clip area.
            </summary>
        </member>
        <member name="P:Syncfusion.HtmlConverter.Blink.Clip.Y">
            <summary>
            y-coordinate of top-left corner of clip area.
            </summary>
        </member>
        <member name="P:Syncfusion.HtmlConverter.Blink.Clip.Width">
            <summary>
            Width of clipping area.
            </summary>
        </member>
        <member name="P:Syncfusion.HtmlConverter.Blink.Clip.Height">
            <summary>
            Height of clipping area.
            </summary>
        </member>
        <member name="P:Syncfusion.HtmlConverter.Blink.Clip.Scale">
            <summary>
            Scale of the webpage rendering. Defaults to 1.
            </summary>
        </member>
        <member name="P:Syncfusion.HtmlConverter.Blink.ScreenshotOptions.Clip">
            <summary>
            Specifies clipping region of the page.
            </summary>
        </member>
        <member name="P:Syncfusion.HtmlConverter.Blink.ScreenshotOptions.FullPage">
            <summary>
            When true, takes a screenshot of the full scrollable page. Defaults value is false
            </summary>
        </member>
        <member name="P:Syncfusion.HtmlConverter.Blink.ScreenshotOptions.OmitBackground">
            <summary>
            Hides default white background and allows capturing screenshots with transparency. Defaults value is false.
            </summary>
        </member>
        <member name="P:Syncfusion.HtmlConverter.Blink.ScreenshotOptions.Type">
            <summary>
            Specify screenshot type, can be either jpeg or png. Defaults to 'png'.
            </summary>
        </member>
        <member name="P:Syncfusion.HtmlConverter.Blink.ScreenshotOptions.Quality">
            <summary>
            The quality of the image, between 0-100. Not applicable to png images.
            </summary>
        </member>
        <member name="P:Syncfusion.HtmlConverter.Blink.ViewPortOptions.Width">
            <summary>
            Gets or sets the width
            </summary>
        </member>
        <member name="P:Syncfusion.HtmlConverter.Blink.ViewPortOptions.Height">
            <summary>
            Gets or sets the height.
            </summary>
        </member>
        <member name="P:Syncfusion.HtmlConverter.Blink.ViewPortOptions.IsMobile">
            <summary>
            Gets or sets whether the meta viewport tag is taken into account.
            </summary>
        </member>
        <member name="P:Syncfusion.HtmlConverter.Blink.ViewPortOptions.DeviceScaleFactor">
            <summary>
            Gets or sets the device scale factor.
            </summary>
        </member>
        <member name="P:Syncfusion.HtmlConverter.Blink.ViewPortOptions.IsLandscape">
            <summary>
            Gets or sets if viewport is in landscape mode.
            </summary>
        </member>
        <member name="P:Syncfusion.HtmlConverter.Blink.ViewPortOptions.HasTouch">
            <summary>
            Gets or sets if viewport supports touch events.
            </summary>
        </member>
        <member name="T:Syncfusion.HtmlConverter.Blink.WaitForFunctionOptions">
            <summary>
            Optional waiting parameters.
            </summary>
        </member>
        <member name="P:Syncfusion.HtmlConverter.Blink.WaitForFunctionOptions.Timeout">
            <summary>
            Maximum time to wait for in milliseconds. Defaults to 30000 (30 seconds).
            </summary>
        </member>
        <member name="F:Syncfusion.HtmlConverter.Blink.WaitForFunctionPollingOption.Raf">
            <summary>
            To constantly execute <c>pageFunction</c> in <c>requestAnimationFrame</c> callback.
            This is the tightest polling mode which is suitable to observe styling changes.
            </summary>
        </member>
        <member name="F:Syncfusion.HtmlConverter.Blink.WaitForFunctionPollingOption.Mutation">
            <summary>
            To execute <c>pageFunction</c> on every DOM mutation.
            </summary>
        </member>
        <member name="T:Syncfusion.HtmlConverter.Blink.WaitForSelectorOptions">
            <summary>
            Optional waiting parameters.
            </summary>
        </member>
        <member name="P:Syncfusion.HtmlConverter.Blink.WaitForSelectorOptions.Timeout">
            <summary>
            Maximum time to wait for in milliseconds. Defaults to 30000 (30 seconds).
            </summary>
        </member>
        <member name="P:Syncfusion.HtmlConverter.Blink.WaitForSelectorOptions.Visible">
            <summary>
            Wait for selector to become visible.
            </summary>
        </member>
        <member name="P:Syncfusion.HtmlConverter.Blink.WaitForSelectorOptions.Hidden">
            <summary>
            Wait for selector to become hidden.
            </summary>
        </member>
        <member name="F:Syncfusion.HtmlConverter.Blink.WaitUntilNavigation.Load">
            <summary>
            Consider navigation to be finished when the <c>load</c> event is fired
            </summary>
        </member>
        <member name="F:Syncfusion.HtmlConverter.Blink.WaitUntilNavigation.DOMContentLoaded">
            <summary>
            Consider navigation to be finished when the <c>DOMContentLoaded</c> event is fired
            </summary>
        </member>
        <member name="F:Syncfusion.HtmlConverter.Blink.WaitUntilNavigation.Networkidle0">
            <summary>
            Consider navigation to be finished when there are no more than 0 network connections for at least <c>500</c> ms
            </summary>
        </member>
        <member name="F:Syncfusion.HtmlConverter.Blink.WaitUntilNavigation.Networkidle2">
            <summary>
            Consider navigation to be finished when there are no more than 2 network connections for at least <c>500</c> ms
            </summary>
        </member>
        <member name="M:Syncfusion.HtmlConverter.Blink.Target.PageAsync">
            <summary>
            Creates a new page, if the target is not page returns null
            </summary>
        </member>
        <member name="M:Syncfusion.HtmlConverter.Blink.Target.CreateCDPSession">
            <summary>
            Creates a Chrome Devtools Protocol session attached to the target.
            </summary>
        </member>
        <member name="M:Syncfusion.HtmlConverter.Blink.Tracing.StartAsync(Syncfusion.HtmlConverter.Blink.TracingOptions)">
            <summary>
            Starts tracing.
            </summary>
        </member>
        <member name="P:Syncfusion.HtmlConverter.Blink.TracingOptions.Screenshots">
            <summary>
            Gets or sets a value indicating whether Tracing should captures screenshots in the trace
            </summary>
        </member>
        <member name="P:Syncfusion.HtmlConverter.Blink.TracingOptions.Path">
            <summary>
            A path to write the trace file to
            </summary>
        </member>
        <member name="P:Syncfusion.HtmlConverter.Blink.TracingOptions.Categories">
            <summary>
            Specify custom categories to use instead of default.
            </summary>
        </member>
        <member name="T:Syncfusion.HtmlConverter.Blink.Coverage">
            <summary>
            gathers information about parts of JavaScript and CSS that were used by the page.
            </summary>
        </member>
        <member name="M:Syncfusion.HtmlConverter.Blink.Coverage.StartJSCoverageAsync(Syncfusion.HtmlConverter.Blink.JSCoverageStartOptions)">
            <summary>
            Starts JS coverage
            </summary>
        </member>
        <member name="M:Syncfusion.HtmlConverter.Blink.Coverage.StopJSCoverageAsync">
            <summary>
            Stops JS coverage and returns coverage reports for all non-anonymous scripts
            </summary>
        </member>
        <member name="M:Syncfusion.HtmlConverter.Blink.JSHandle.GetPropertyAsync(System.String)">
            <summary>
            Fetches a single property from the referenced object
            </summary>
        </member>
        <member name="M:Syncfusion.HtmlConverter.Blink.JSHandle.GetPropertiesAsync">
            <summary>
            Returns a  dictionary with property names as keys and JSHandle instances for the property values.
            </summary>
        </member>
        <member name="M:Syncfusion.HtmlConverter.Blink.JSHandle.JsonValueAsync">
            <summary>
            Returns a JSON representation of the object
            </summary>
        </member>
        <member name="M:Syncfusion.HtmlConverter.Blink.JSHandle.JsonValueAsync``1">
            <summary>
            Returns a JSON representation of the object
            </summary>
        </member>
        <member name="T:Syncfusion.HtmlConverter.Blink.JSCoverageStartOptions">
            <summary>
            Set of configurable options for coverage
            </summary>
        </member>
        <member name="P:Syncfusion.HtmlConverter.Blink.JSCoverageStartOptions.ResetOnNavigation">
            <summary>
            Whether to reset coverage on every navigation.
            </summary>
        </member>
        <member name="M:Syncfusion.HtmlConverter.Blink.ElementHandle.ScreenshotAsync(System.String)">
            <summary>
            This method scrolls element into view if needed, and then uses ScreenshotAsync to take a screenshot of the element. 
            </summary>
        </member>
        <member name="M:Syncfusion.HtmlConverter.Blink.ElementHandle.ScreenshotAsync(System.String,Syncfusion.HtmlConverter.Blink.ScreenshotOptions)">
            <summary>
            This method scrolls element into view if needed, and then uses ScreenshotStreamAsync to take a screenshot of the element. 
            </summary>
        </member>
        <member name="M:Syncfusion.HtmlConverter.Blink.ElementHandle.ScreenshotStreamAsync">
            <summary>
            This method scrolls element into view if needed, and then uses ScreenshotAsync to take a screenshot of the element. 
            </summary>
        </member>
        <member name="M:Syncfusion.HtmlConverter.Blink.ElementHandle.ScreenshotStreamAsync(Syncfusion.HtmlConverter.Blink.ScreenshotOptions)">
            <summary>
            This method scrolls element into view if needed, and then uses ScreenshotAsync to take a screenshot of the element. 
            </summary>
        </member>
        <member name="M:Syncfusion.HtmlConverter.Blink.ElementHandle.XPathAsync(System.String)">
            <summary>
            Evaluates the XPath expression relative to the elementHandle. If there's no such element, the method will resolve to null.
            </summary>
        </member>
        <member name="M:Syncfusion.HtmlConverter.Blink.ElementHandle.BoundingBoxAsync">
            <summary>
            This method returns the bounding box of the element
            </summary>
        </member>
        <member name="M:Syncfusion.HtmlConverter.Blink.ExecutionContext.EvaluateExpressionAsync(System.String)">
            <summary>
            Executes a script in browser context
            </summary>
        </member>
        <member name="M:Syncfusion.HtmlConverter.Blink.ExecutionContext.EvaluateExpressionAsync``1(System.String)">
            <summary>
            Executes a script in browser context
            </summary>
        </member>
        <member name="M:Syncfusion.HtmlConverter.Blink.ExecutionContext.EvaluateFunctionAsync(System.String,System.Object[])">
            <summary>
            Executes a function in browser context
            </summary>
        </member>
        <member name="M:Syncfusion.HtmlConverter.Blink.ExecutionContext.EvaluateFunctionAsync``1(System.String,System.Object[])">
            <summary>
            Executes a function in browser context
            </summary>
        </member>
        <member name="M:Syncfusion.HtmlConverter.Blink.Frame.EvaluateExpressionAsync(System.String)">
            <summary>
            Executes a script in browser context
            </summary>
        </member>
        <member name="M:Syncfusion.HtmlConverter.Blink.Frame.EvaluateExpressionAsync``1(System.String)">
            <summary>
            Executes a script in browser context
            </summary>
        </member>
        <member name="M:Syncfusion.HtmlConverter.Blink.Frame.EvaluateFunctionAsync(System.String,System.Object[])">
            <summary>
            Executes a function in browser context
            </summary>
        </member>
        <member name="M:Syncfusion.HtmlConverter.Blink.Frame.EvaluateFunctionAsync``1(System.String,System.Object[])">
            <summary>
            Executes a function in browser context
            </summary>
        </member>
        <member name="M:Syncfusion.HtmlConverter.Blink.Frame.GetExecutionContextAsync">
            <summary>
            Gets the <see cref="T:Syncfusion.HtmlConverter.Blink.ExecutionContext"/> associated with the frame.
            </summary>
        </member>
        <member name="M:Syncfusion.HtmlConverter.Blink.Frame.QuerySelectorAsync(System.String)">
            <summary>
            Queries frame for the selector. If there's no such element within the frame, the method will resolve to <c>null</c>.
            </summary>
        </member>
        <member name="M:Syncfusion.HtmlConverter.Blink.Frame.WaitForSelectorAsync(System.String,Syncfusion.HtmlConverter.Blink.WaitForSelectorOptions)">
            <summary>
            Waits for a selector to be added to the DOM
            </summary>
        </member>
        <member name="M:Syncfusion.HtmlConverter.Blink.Connection.GetResponseAsync">
            <summary>
            Starts listening the socket
            </summary>
        </member>
        <member name="T:Syncfusion.HtmlConverter.Blink.ConnectOptions">
            <summary>
            Options for connecting to an existing browser.
            </summary>
        </member>
        <member name="P:Syncfusion.HtmlConverter.Blink.ConnectOptions.IgnoreHTTPSErrors">
            <summary>
            Whether to ignore HTTPS errors during navigation. Defaults to false.
            </summary>
        </member>
        <member name="P:Syncfusion.HtmlConverter.Blink.ConnectOptions.AppMode">
            <summary>
            If set to true, sets Headless = false, otherwise, enables automation.
            </summary>
        </member>
        <member name="P:Syncfusion.HtmlConverter.Blink.ConnectOptions.BrowserWSEndpoint">
            <summary>
            A browser websocket endpoint to connect to.
            </summary>
        </member>
        <member name="P:Syncfusion.HtmlConverter.Blink.ConnectOptions.SlowMo">
            <summary>
            Slows down converter operations by the specified amount of milliseconds. Useful so that you can see what is going on.
            </summary>
        </member>
        <member name="P:Syncfusion.HtmlConverter.Blink.ConnectOptions.KeepAliveInterval">
            <summary>
            Keep alive value.
            </summary>
        </member>
        <member name="M:Syncfusion.HtmlConverter.Blink.Session.DetachAsync">
            <summary>
            Detaches session from target. Once detached, session won't emit any events and can't be used to send messages.
            </summary>
        </member>
        <member name="M:Syncfusion.HtmlConverter.Blink.Request.ContinueAsync(Syncfusion.HtmlConverter.Blink.Payload)">
            <summary>
            Continues request with optional request overrides. To use this, request interception should be enabled with <see cref="M:Syncfusion.HtmlConverter.Blink.Page.SetRequestInterceptionAsync(System.Boolean)"/>. Exception is immediately thrown if the request interception is not enabled.
            </summary>
        </member>
        <member name="T:Syncfusion.HtmlConverter.Blink.RequestAbortErrorCode">
            <summary>
            Abort error codes. RequestAbortErrorCode
            </summary>
        </member>
        <member name="F:Syncfusion.HtmlConverter.Blink.RequestAbortErrorCode.Aborted">
            <summary>
            An operation was aborted (due to user action)
            </summary>
        </member>
        <member name="F:Syncfusion.HtmlConverter.Blink.RequestAbortErrorCode.AccessDenied">
            <summary>
            Permission to access a resource, other than the network, was denied
            </summary>
        </member>
        <member name="F:Syncfusion.HtmlConverter.Blink.RequestAbortErrorCode.AddressUnreachable">
            <summary>
            The IP address is unreachable. This usually means that there is no route to the specified host or network.
            </summary>
        </member>
        <member name="F:Syncfusion.HtmlConverter.Blink.RequestAbortErrorCode.ConnectionAborted">
            <summary>
            A connection timed out as a result of not receiving an ACK for data sent.
            </summary>
        </member>
        <member name="F:Syncfusion.HtmlConverter.Blink.RequestAbortErrorCode.ConnectionClosed">
            <summary>
            A connection was closed (corresponding to a TCP FIN).
            </summary>
        </member>
        <member name="F:Syncfusion.HtmlConverter.Blink.RequestAbortErrorCode.ConnectionFailed">
            <summary>
            A connection attempt failed.
            </summary>
        </member>
        <member name="F:Syncfusion.HtmlConverter.Blink.RequestAbortErrorCode.ConnectionRefused">
            <summary>
            A connection attempt was refused.
            </summary>
        </member>
        <member name="F:Syncfusion.HtmlConverter.Blink.RequestAbortErrorCode.ConnectionReset">
            <summary>
             A connection was reset (corresponding to a TCP RST).
            </summary>
        </member>
        <member name="F:Syncfusion.HtmlConverter.Blink.RequestAbortErrorCode.InternetDisconnected">
            <summary>
            The Internet connection has been lost.
            </summary>
        </member>
        <member name="F:Syncfusion.HtmlConverter.Blink.RequestAbortErrorCode.NameNotResolved">
            <summary>
            The host name could not be resolved.
            </summary>
        </member>
        <member name="F:Syncfusion.HtmlConverter.Blink.RequestAbortErrorCode.TimedOut">
            <summary>
            An operation timed out.
            </summary>
        </member>
        <member name="F:Syncfusion.HtmlConverter.Blink.RequestAbortErrorCode.Failed">
            <summary>
             A generic failure occurred.
            </summary>
        </member>
        <member name="P:Syncfusion.HtmlConverter.Blink.Response.Url">
            <summary>
            Contains the URL of the response.
            </summary>
        </member>
        <member name="M:Syncfusion.HtmlConverter.Blink.Response.BufferAsync">
            <summary>
            Returns a Task which resolves to a buffer with response body
            </summary>
        </member>
        <member name="T:Syncfusion.HtmlConverter.Blink.NavigationOptions">
            <summary>
            Navigation options used by WaitForNavigationAsync
            </summary>
        </member>
        <member name="P:Syncfusion.HtmlConverter.Blink.NavigationOptions.Timeout">
            <summary>
            Maximum navigation time in milliseconds, defaults to 30 seconds, pass 0 to disable timeout. 
            </summary>
        </member>
        <member name="P:Syncfusion.HtmlConverter.Blink.NavigationOptions.WaitUntil">
            <summary>
            When to consider navigation succeeded, defaults to WaitUntilNavigation.Load. 
            </summary>
        </member>
        <member name="T:Syncfusion.HtmlConverter.HtmlConverter">
            <summary>
            Class which allows converting Html to the Image.
            </summary>
        </member>
        <member name="T:Syncfusion.HtmlConverter.HtmlConverter.BrowserNavConstants">
            <summary>
            Loading flags
            </summary>
        </member>
        <member name="F:Syncfusion.HtmlConverter.HtmlConverter.m_startFrom">
            <summary>
            Internal variable to store webbrowser scroll position.
            </summary>
        </member>
        <member name="F:Syncfusion.HtmlConverter.HtmlConverter.currentregions">
            <summary>
            Internal variable to store current regions.
            </summary>
        </member>
        <member name="F:Syncfusion.HtmlConverter.HtmlConverter.m_htmlHeight">
            <summary>
            Internal variable to store size of the web page.
            </summary>
        </member>
        <member name="F:Syncfusion.HtmlConverter.HtmlConverter.m_forceSize">
            <summary>
            Internal variable to store if the specified size should be used. Must be true for Tagged PDF.
            </summary>
        </member>
        <member name="P:Syncfusion.HtmlConverter.HtmlConverter.EnableDirectLayout">
            <summary>
            While enabling this property the text and images will be split across pages even if SplitTextLines and SplitImages were set to false.
            </summary>
        </member>
        <member name="P:Syncfusion.HtmlConverter.HtmlConverter.Username">
            <summary>
            Gets or Sets the Username
            </summary>
            <value>String value representing the user name of the HTML document.</value>
        </member>
        <member name="P:Syncfusion.HtmlConverter.HtmlConverter.Password">
            <summary>
            Gets or Sets the password
            </summary>
            <value>String value representing the password of the HTML document.</value>
        </member>
        <member name="P:Syncfusion.HtmlConverter.HtmlConverter.EnableJavaScript">
            <summary>
            Gets or Sets a value indicating whether to Enable/Disable Javascripts in the webpage.
            </summary>
            <value>True if Javascript is enabled, otherwise,false. default is true</value>
        </member>
        <member name="P:Syncfusion.HtmlConverter.HtmlConverter.EnableActiveXContents">
            <summary>
            Gets or Sets a value indicating whether to Enable/Disable Javascript in the web page.
            </summary>
            <value>True if ActiveXContents enabled, otherwise false. Default is false</value>
        </member>
        <member name="P:Syncfusion.HtmlConverter.HtmlConverter.EnableBinaryBehaviors">
            <summary>
            Gets or Sets a value indicating whether to Enable/Disable binary behaviors in the webpage.
            </summary>
            <value><c>true</c> if [BinaryBehaviors enabled]; otherwise, <c>false</c>. Default is false </value>
        </member>
        <member name="P:Syncfusion.HtmlConverter.HtmlConverter.AutoDetectPageBreak">
            <summary>
            Gets or Sets a value indicating whether to auto-detect page-break in the webpage.
            </summary>
            <value>True if Page break is enabled,  otherwise, <c>false</c>. Default is true</value>
        </member>
        <member name="P:Syncfusion.HtmlConverter.HtmlConverter.Timeout">
            <summary>
            Set the maximum time in milliseconds to wait for HTML page to be loaded;
            </summary>
            <value> Specifies the timeout to the HTML converter.Unit is Milliseconds; By default 0</value>
        </member>
        <member name="P:Syncfusion.HtmlConverter.HtmlConverter.EnableHyperlinks">
            <summary>
            Gets or Sets a value indicating whether to preserve the live-links in the converted document or not.
            </summary>
            <value>True if the Hyperlinks are enabled, otherwise false.Default is true </value>
        </member>
        <member name="P:Syncfusion.HtmlConverter.HtmlConverter.AdditionalDelay">
            <summary>
            Gets or Sets a value to delay the script loading.
            </summary>
            <value> A integer value indicating to apply delay for loading scripts.Unit is Milliseconds; By default 0 </value>
        </member>
        <member name="P:Syncfusion.HtmlConverter.HtmlConverter.EnableForm">
            <summay>
            Gets or sets enable form; If it is enabled then HTML form fields are converted to PDF form fields in the generated PDF document. The default value is false.
            </summay>
        </member>
        <member name="P:Syncfusion.HtmlConverter.HtmlConverter.ClearInternetCache">
            <summary>
            Gets or sets a value indicating whether to clear Internet cache.
            </summary>
            <value> True if the internetcache clears , otherwise false.</value>
        </member>
        <member name="P:Syncfusion.HtmlConverter.HtmlConverter.StartFrom">
            <summary>
            Gets or sets the scroll position.
            </summary>
        </member>
        <member name="P:Syncfusion.HtmlConverter.HtmlConverter.ForceSize">
            <summary>
            Gets or sets if specified size should be used. Must be true for Tagged PDF.
            </summary>
        </member>
        <member name="P:Syncfusion.HtmlConverter.HtmlConverter.HtmlEncoding">
            <summary>
            Gets or sets Encoding for HTML string to PDF conversion. 
            </summary>
            <remarks>This property will not have any effect on URL to PDF conversion</remarks>
        </member>
        <member name="P:Syncfusion.HtmlConverter.HtmlConverter.EnableRepeatTableHeader">
            <summary>
            Gets or sets the repetition of table header. By enabling this property, will repeat the table header on every page break. The default value is false.
            </summary>
        </member>
        <member name="P:Syncfusion.HtmlConverter.HtmlConverter.EnableRepeatTableFooter">
            <summary>
            Gets or sets the repetition of table footer. By enabling this property, will repeat the table footer on every page break. The default value is false.
            </summary>
        </member>
        <member name="P:Syncfusion.HtmlConverter.HtmlConverter.EnableBookmarks">
            <summary>
            A property indicating if the automatic creation of bookmarks in PDF for the H1 to H6 HTML elements is enabled or not. By default the automatic bookmarks creation is disabled
            </summary>
        </member>
        <member name="P:Syncfusion.HtmlConverter.HtmlConverter.EnableToc">
            <summary>
            A property indicating if the automatic creation of a table of contents items for the H1 to H6 HTML elements is enabled or not. By default this property is false
            </summary>
        </member>
        <member name="P:Syncfusion.HtmlConverter.HtmlConverter.Toc">
            <summary>
            Gets or sets Toc styles
            </summary>
        </member>
        <member name="P:Syncfusion.HtmlConverter.HtmlConverter.Cookies">
            <summary>
            Gets or sets cookie collection with names and values
            </summary>
            <value> The cookies Collection </value>
            <seealso cref="T:Syncfusion.HtmlConverter.CookieCollection"/> Class
        </member>
        <member name="P:Syncfusion.HtmlConverter.HtmlConverter.BackgroundColor">
            <summary>
            Gets or sets a background color when converting a HTML document.
            </summary>
        </member>
        <member name="F:Syncfusion.HtmlConverter.HtmlConverter.DEF_OFFSET">
            <summary>
            Offset to the width/height.
            </summary>
        </member>
        <member name="F:Syncfusion.HtmlConverter.HtmlConverter.DEF_TIMEOUT">
            <summary>
            Timeout of the thread while document is lodaing.
            </summary>
        </member>
        <member name="F:Syncfusion.HtmlConverter.HtmlConverter.DEF_BLANK">
            <summary>
            Blank page.
            </summary>
        </member>
        <member name="F:Syncfusion.HtmlConverter.HtmlConverter.DISPID_AMBIENT_DLCONTROL">
            <summary>
            IDispatch:: Invoke params.
            </summary>
        </member>
        <member name="F:Syncfusion.HtmlConverter.HtmlConverter.DEF_META_EXEC_PARAMS">
            <summary>
            Metafile Execute parameters.
            </summary>
        </member>
        <member name="F:Syncfusion.HtmlConverter.HtmlConverter.DEF_BITMAP_EXEC_PARAMS">
            <summary>
            Bitmap Execute parameters.
            </summary>
        </member>
        <member name="F:Syncfusion.HtmlConverter.HtmlConverter.m_DocComplete">
            <summary>
            Indicates whether loading of the document is completed.
            </summary>
        </member>
        <member name="F:Syncfusion.HtmlConverter.HtmlConverter.m_url">
            <summary>
            Url to the Html resource.
            </summary>
        </member>
        <member name="F:Syncfusion.HtmlConverter.HtmlConverter.m_type">
            <summary>
            Type of the image.
            </summary>
        </member>
        <member name="F:Syncfusion.HtmlConverter.HtmlConverter.m_bCancelNavigate">
            <summary>
            Indicates whether we should stop navigation.
            </summary>
        </member>
        <member name="F:Syncfusion.HtmlConverter.HtmlConverter.m_html">
            <summary>
            String containing html data.
            </summary>
        </member>
        <member name="F:Syncfusion.HtmlConverter.HtmlConverter.m_size">
            <summary>
            Original size of the image.
            </summary>
        </member>
        <member name="F:Syncfusion.HtmlConverter.HtmlConverter.m_aspectRatio">
            <summary>
            The aspect ratio of the image.
            </summary>
        </member>
        <member name="F:Syncfusion.HtmlConverter.HtmlConverter.isLinkWrapped">
            <summary>
            Checks whether link wrapped
            </summary>
        </member>
        <member name="M:Syncfusion.HtmlConverter.HtmlConverter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.HtmlConverter.HtmlConverter"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.HtmlConverter.HtmlConverter.Dispose(System.Boolean)">
            <summary>
            Disposes component.
            </summary>
            <param name="disposing">Indicates whether dispose managed resources or not.</param>
        </member>
        <member name="M:Syncfusion.HtmlConverter.HtmlConverter.#ctor(Syncfusion.HtmlConverter.IHtmlRenderer)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.HtmlConverter.HtmlConverter"/> class with specified HTML renderer.
            </summary>
            <param name="renderer">Specifies the HTML renderer.</param>
        </member>
        <member name="M:Syncfusion.HtmlConverter.HtmlConverter.ConvertToImage(System.String,Syncfusion.HtmlConverter.ImageType,System.Int32,System.Int32,Syncfusion.HtmlConverter.AspectRatio)">
            <summary>
            Converts HTML by the URL to the image.
            </summary>
            <param name="url">Path to the HTML resource.</param>
            <param name="type">Type of the output image.</param>
            <param name="width">Preferred width of the image in pixels.</param>
            <param name="height">Preferred height of the image in pixels.</param>
            <param name="aspectRatio">Aspect ratio of the image.</param>
            <returns>Image, containing data from the HTML.</returns>
            <remarks>Image height can be greater than <see cref="!:height"/> value.</remarks>
        </member>
        <member name="M:Syncfusion.HtmlConverter.HtmlConverter.ConvertToImage(System.String,Syncfusion.HtmlConverter.ImageType,System.Int32,System.Int32,Syncfusion.HtmlConverter.AspectRatio,System.String,System.String)">
            <summary>
            Converts HTML by the URL to the image.
            </summary>
            <param name="url">Path to the HTML resource.</param>
            <param name="type">Type of the output image.</param>
            <param name="width">Preferred width of the image in pixels.</param>
            <param name="height">Preferred height of the image in pixels.</param>
            <param name="aspectRatio">Aspect ratio of the image.</param>
            <param name="username">The User name.</param>
            <param name="password">The Password.</param>
            <returns>Image, containing data from the HTML.</returns>
            <remarks>Image height can be greater than <see cref="!:height"/> value.</remarks>
        </member>
        <member name="M:Syncfusion.HtmlConverter.HtmlConverter.ConvertToImage(System.String,Syncfusion.HtmlConverter.ImageType,System.Int32,System.Int32)">
            <summary>
            Converts HTML by the URL to the image.
            </summary>
            <param name="url">Path to the HTML resource.</param>
            <param name="type">Type of the output image.</param>
            <param name="width">Preferred width of the image in pixels.</param>
            <param name="height">Preferred height of the image in pixels.</param>
            <returns>Image, containing data from the HTML.</returns>
            <remarks>Image height can be greater than <see cref="!:height"/> value.</remarks>
        </member>
        <member name="M:Syncfusion.HtmlConverter.HtmlConverter.ConvertToImage(System.String,Syncfusion.HtmlConverter.ImageType,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Converts HTML by the URL to the image.
            </summary>
            <param name="url">Path to the HTML resource.</param>
            <param name="type">Type of the output image.</param>
            <param name="width">Preferred width of the image in pixels.</param>
            <param name="height">Preferred height of the image in pixels.</param>
            <param name="username">The User name.</param>
            <param name="password">The Password.</param>
            <returns>Image, containing data from the HTML.</returns>
            <remarks>Image height can be greater than <see cref="!:height"/> value.</remarks>
        </member>
        <member name="M:Syncfusion.HtmlConverter.HtmlConverter.ConvertToImage(System.String,Syncfusion.HtmlConverter.ImageType,System.Int32)">
            <summary>
            Converts HTML by the URL to the image.
            </summary>
            <param name="url">Path to the HTML resource.</param>
            <param name="type">Type of the output image.</param>
            <param name="width">Preferred width of the image in pixels.</param>
            <returns>Image, containing data from the HTML.</returns>
        </member>
        <member name="M:Syncfusion.HtmlConverter.HtmlConverter.ConvertToImage(System.String,Syncfusion.HtmlConverter.ImageType,System.Int32,System.String,System.String)">
            <summary>
            Converts HTML by the URL to the image.
            </summary>
            <param name="url">Path to the HTML resource.</param>
            <param name="type">Type of the output image.</param>
            <param name="width">Preferred width of the image in pixels.</param>
            <param name="username">The User name.</param>
            <param name="password">The Password.</param>
            <returns>Image, containing data from the HTML.</returns>
        </member>
        <member name="M:Syncfusion.HtmlConverter.HtmlConverter.ConvertToImage(System.String,Syncfusion.HtmlConverter.ImageType)">
            <summary>
            Converts HTML by the URL to the image.
            </summary>
            <param name="url">Path to the HTML resource.</param>
            <param name="type">Type of the output image.</param>
            <returns>Image, containing data from the HTML.</returns>
        </member>
        <member name="M:Syncfusion.HtmlConverter.HtmlConverter.CalculateOffsets(System.Drawing.Size)">
            <summary>
            Calculates the offsets.
            </summary>
            <param name="size">The size.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.HtmlConverter.HtmlConverter.GetImagesFromUrl(System.String,Syncfusion.HtmlConverter.ImageType)">
            <summary>
            Gets the images from URL.
            </summary>
            <param name="url">The URL.</param>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.HtmlConverter.HtmlConverter.ConvertToImage(System.String,Syncfusion.HtmlConverter.ImageType,System.String,System.String)">
            <summary>
            Converts HTML by the URL to the image.
            </summary>
            <param name="url">Path to the HTML resource.</param>
            <param name="type">Type of the output image.</param>
            <param name="username">The User name.</param>
            <param name="password">The Password.</param>
            <returns>Image, containing data from the HTML.</returns>
        </member>
        <member name="M:Syncfusion.HtmlConverter.HtmlConverter.ConvertToImage(System.IO.Stream,System.Text.Encoding,Syncfusion.HtmlConverter.ImageType,System.Int32,System.Int32,Syncfusion.HtmlConverter.AspectRatio)">
            <summary>
            Converts HTML data contained in the stream to the image.
            </summary>
            <param name="stream">Stream containing HTML data.</param>
            <param name="encoding">Encoding used for reading data from the stream.</param>
            <param name="type">Type of the output image.</param>
            <param name="width">Preferred width of the image in pixels.</param>
            <param name="height">Preferred height of the image in pixels.</param>
            <param name="aspectRatio">Aspect ratio of the image.</param>
            <returns>Image, containing data from the HTML.</returns>
            <remarks>If the stream can seek, the position will be set to 0 before data reading.</remarks>
        </member>
        <member name="M:Syncfusion.HtmlConverter.HtmlConverter.ConvertToImage(System.IO.Stream,System.Text.Encoding,Syncfusion.HtmlConverter.ImageType,System.Int32,System.Int32)">
            <summary>
            Converts HTML data contained in the stream to the image.
            </summary>
            <param name="stream">Stream containing HTML data.</param>
            <param name="encoding">Encoding used for reading data from the stream.</param>
            <param name="type">Type of the output image.</param>
            <param name="width">Preferred width of the image in pixels.</param>
            <param name="height">Preferred height of the image in pixels.</param>
            <returns>Image, containing data from the HTML.</returns>
            <remarks>If the stream can seek, the position will be set to 0 before data reading.</remarks>
        </member>
        <member name="M:Syncfusion.HtmlConverter.HtmlConverter.ConvertToImage(System.IO.Stream,System.Text.Encoding,Syncfusion.HtmlConverter.ImageType,System.Int32)">
            <summary>
            Converts HTML data contained in the stream to the image.
            </summary>
            <param name="stream">Stream containing HTML data.</param>
            <param name="encoding">Encoding used for reading data from the stream.</param>
            <param name="type">Type of the output image.</param>
            <param name="width">Preferred width of the image in pixels.</param>
            <returns>Image, containing data from the HTML.</returns>
            <remarks>If the stream can seek, the position will be set to 0 before data reading.</remarks>
        </member>
        <member name="M:Syncfusion.HtmlConverter.HtmlConverter.ConvertToImage(System.IO.Stream,System.Text.Encoding,Syncfusion.HtmlConverter.ImageType)">
            <summary>
            Converts Html data contained in the stream to the image.
            </summary>
            <param name="stream">Stream containing HTML data.</param>
            <param name="encoding">Encoding used for reading data from the stream.</param>
            <param name="type">Type of the output image.</param>
            <returns>Image, containing data from the HTML.</returns>
            <remarks>If the stream can seek, the position will be set to 0 before data reading.</remarks>
        </member>
        <member name="M:Syncfusion.HtmlConverter.HtmlConverter.FromString(System.String,System.String,Syncfusion.HtmlConverter.ImageType,System.Int32,System.Int32,Syncfusion.HtmlConverter.AspectRatio,System.String,System.String)">
            <summary>
            Renders HTML from the string to the image.
            </summary>
            <param name="html">HTML data.</param>
            <param name="type">Type of the image.</param>
            <param name="baseUrl">Used to retrieve images, scripts and stylesheets.</param>
            <param name="width">Preferred width of the image.</param>
            <param name="height">Preferred height of the image.</param>
            <param name="aspectRatio">Aspect ratio of the image.</param>
            <param name="username">The User name.</param>
            <param name="password">The Password.</param>
            <returns>Image, containing data from the HTML.</returns>
        </member>
        <member name="M:Syncfusion.HtmlConverter.HtmlConverter.FromString(System.String,System.String,Syncfusion.HtmlConverter.ImageType,System.Int32,System.Int32,Syncfusion.HtmlConverter.AspectRatio)">
            <summary>
            Renders HTML from the string to the image.
            </summary>
            <param name="html">HTML data.</param>
            <param name="type">Type of the image.</param>
            <param name="baseUrl">Used to retrieve images, scripts and stylesheets.</param>
            <param name="width">Preferred width of the image.</param>
            <param name="height">Preferred height of the image.</param>
            <param name="aspectRatio">Aspect ratio of the image.</param>
            <returns>Image, containing data from the HTML.</returns>
        </member>
        <member name="M:Syncfusion.HtmlConverter.HtmlConverter.FromString(System.String,System.String,Syncfusion.HtmlConverter.ImageType,System.Int32,System.Int32)">
            <summary>
            Renders HTML from the string to the image.
            </summary>
            <param name="html">HTML data.</param>
            <param name="baseUrl">Used to retrieve images, scripts and stylesheets.</param>
            <param name="type">Type of the image.</param>
            <param name="width">Preferred width of the image.</param>
            <param name="height">Preferred height of the image.</param>
            <returns>Image, containing data from the HTML.</returns>
        </member>
        <member name="M:Syncfusion.HtmlConverter.HtmlConverter.FromString(System.String,System.String,Syncfusion.HtmlConverter.ImageType,System.Int32)">
            <summary>
            Renders HTML from the string to the image.
            </summary>
            <param name="html">HTML data.</param>
            <param name="baseUrl">Used to retrieve images, scripts and stylesheets.</param>
            <param name="type">Type of the image.</param>
            <param name="width">Preferred width of the image.</param>
            <returns>Image, containing data from the HTML.</returns>
        </member>
        <member name="M:Syncfusion.HtmlConverter.HtmlConverter.FromString(System.String,System.String,Syncfusion.HtmlConverter.ImageType)">
            <summary>
            Renders HTML from the string to the image.
            </summary>
            <param name="html">HTML data.</param>
            <param name="baseUrl">Used to retrieve images, scripts and stylesheets.</param>
            <param name="type">Type of the image.</param>
            <returns>Image, containing data from the HTML.</returns>
        </member>
        <member name="M:Syncfusion.HtmlConverter.HtmlConverter.GetImagesFromString(System.String,System.String,Syncfusion.HtmlConverter.ImageType)">
            <summary>
            Renders HTML from the string to the image.
            </summary>
            <param name="html">HTML data.</param>
            <param name="baseUrl">Used to retrieve images, scripts and stylesheets.</param>
            <param name="type">Type of the image.</param>
            <returns>Image, containing data from the HTML.</returns>
        </member>
        <member name="M:Syncfusion.HtmlConverter.HtmlConverter.FromString(System.String,Syncfusion.HtmlConverter.ImageType,System.Int32,System.Int32)">
            <summary>
            Renders HTML from the string to the image.
            </summary>
            <param name="html">HTML data.</param>
            <param name="type">Type of the image.</param>
            <param name="width">Preferred width of the image.</param>
            <param name="height">Preferred height of the image.</param>
            <returns>Image, containing data from the HTML.</returns>
        </member>
        <member name="M:Syncfusion.HtmlConverter.HtmlConverter.FromString(System.String,Syncfusion.HtmlConverter.ImageType,System.Int32,System.Int32,Syncfusion.HtmlConverter.AspectRatio)">
            <summary>
            Renders HTML from the string to the image.
            </summary>
            <param name="html">HTML data.</param>
            <param name="type">Type of the image.</param>
            <param name="width">Preferred width of the image.</param>
            <param name="height">Preferred height of the image.</param>
            <param name="aspectRatio">Aspect ratio of the image.</param>
            <returns>Image, containing data from the HTML.</returns>
        </member>
        <member name="M:Syncfusion.HtmlConverter.HtmlConverter.FromString(System.String,Syncfusion.HtmlConverter.ImageType,System.Int32)">
            <summary>
            Renders HTML from the string to the image.
            </summary>
            <param name="html">HTML data.</param>
            <param name="type">Type of the image.</param>
            <param name="width">Preferred width of the image.</param>
            <returns>Image, containing data from the HTML.</returns>
        </member>
        <member name="M:Syncfusion.HtmlConverter.HtmlConverter.FromString(System.String,Syncfusion.HtmlConverter.ImageType)">
            <summary>
            Renders HTML from the string to the image.
            </summary>
            <param name="html">HTML data.</param>
            <param name="type">Type of the image.</param>
            <returns>Image, containing data from the HTML.</returns>
        </member>
        <member name="M:Syncfusion.HtmlConverter.HtmlConverter.ConvertToTaggedPDF(Syncfusion.Pdf.PdfDocument,System.String,System.String,System.String)">
            <param name="password">The Password.</param>
            <returns> The layout result of the PDF document</returns>
        </member>
        <member name="M:Syncfusion.HtmlConverter.HtmlConverter.ConvertToTaggedPDF(Syncfusion.Pdf.PdfDocument,System.String)">
            <summary>
            Converts the URL as Tagged PDF.
            </summary>
            <param name="document"> The PDF document</param>
            <param name="url">Path to the HTML resource.</param>
            <returns> The layout result of the PDF document</returns>
        </member>
        <member name="M:Syncfusion.HtmlConverter.HtmlConverter.ConvertToTaggedPDF(Syncfusion.Pdf.PdfDocument,System.String,System.String)">
            <summary>
            Converts the HTML string as Tagged PDF.
            </summary>
            <param name="document"> The PDF document</param>
            <param name="html">Path to the HTML resource.</param>
            <param name="baseURL">Used to retrieve images, scripts and stylesheets.</param>
            <returns> The layout result of the PDF document</returns>
        </member>
        <member name="M:Syncfusion.HtmlConverter.HtmlConverter.ConvertToImage">
            <summary>
            Converts html to image.
            </summary>
            <returns>Converted image.</returns>
        </member>
        <member name="M:Syncfusion.HtmlConverter.HtmlConverter.Convert(System.String,Syncfusion.HtmlConverter.ImageType,System.Int32,System.Int32,Syncfusion.HtmlConverter.AspectRatio,System.String,System.String)">
            <summary>
            Converts HTML to HtmlToPdfElement result.
            </summary>
            <param name="html">HTML data.</param>
            <param name="baseUrl">Used to retrieve images, scripts and stylesheets.</param>
            <param name="type"> Specifies the image type</param>
            <param name="width">Integer value specifying the width of the web browser</param>
            <param name="height">Integer value specifying the height of the web browser</param>
            <param name="aspectRatio"> Representing dimension of the image.</param>
            <param name="User namename">The user name </param>
            <param name="Password">The password </param>
            <returns>Converted image.</returns>
        </member>
        <member name="M:Syncfusion.HtmlConverter.HtmlConverter.Convert(System.String,Syncfusion.HtmlConverter.ImageType,System.Int32,System.Int32,Syncfusion.HtmlConverter.AspectRatio)">
            <summary>
            Converts HTML to HtmlToPdfElement result.
            </summary>
            <param name="html">HTML data.</param>
            <param name="baseUrl">Used to retrieve images, scripts and stylesheets.</param>
            <param name="type"> Specifies the image type</param>
            <param name="width">Integer value specifying the width of the web browser</param>
            <param name="height">Integer value specifying the height of the web browser</param>
            <param name="aspectRatio"> Representing dimension of the image.</param>
            <returns>Converted image.</returns>
        </member>
        <member name="M:Syncfusion.HtmlConverter.HtmlConverter.Convert(System.String,System.String,Syncfusion.HtmlConverter.ImageType,System.Int32,System.Int32,Syncfusion.HtmlConverter.AspectRatio)">
            <summary>
            Converts the given HTML string to HtmlToPdfResult.
            </summary>
            <param name="html">HTML data.</param>
            <param name="baseUrl">Used to retrieve images, scripts and stylesheets.</param>
            <param name="type"> Specifies the image type</param>
            <param name="width">Integer value specifying the width of the web browser</param>
            <param name="height">Integer value specifying the height of the web browser</param>
            <param name="aspectRatio"> Representing dimension of the image.</param>
            <returns>Converted image.</returns>
        </member>
        <member name="M:Syncfusion.HtmlConverter.HtmlConverter.GetBackgroundRectangleColor(mshtml.IHTMLElement)">
            <summary>
            find color for background rectangle of each form elements of pdf document.
            </summary>
            <returns>Founded color.</returns>
        </member>
        <member name="M:Syncfusion.HtmlConverter.HtmlConverter.Convert(System.Drawing.Image[])">
            <summary>
            Converts html to HtmlToPdf Element result.
            </summary>
            <returns>Converted image.</returns>
        </member>
        <member name="M:Syncfusion.HtmlConverter.HtmlConverter.ConvertToMetafile2">
            <summary>
            Converts Html to metafile.
            </summary>
            <returns>Metafile image.</returns>
        </member>
        <member name="M:Syncfusion.HtmlConverter.HtmlConverter.ConvertToMetafile">
            <summary>
            Converts Html to metafile.
            </summary>
            <returns>Metafile image.</returns>
        </member>
        <member name="M:Syncfusion.HtmlConverter.HtmlConverter.ConvertToBitmap2">
            <summary>
            Converts Html to bitmap.
            </summary>
            <returns>Bitmap image.</returns>
        </member>
        <member name="M:Syncfusion.HtmlConverter.HtmlConverter.ConvertToBitmap">
            <summary>
            Converts Html to bitmap.
            </summary>
            <returns>Bitmap image.</returns>
        </member>
        <member name="M:Syncfusion.HtmlConverter.HtmlConverter.ToImage">
            <summary>
            Start exporting Html to Image.
            </summary>
            <param name="type"></param>
            <returns></returns>
            
        </member>
        <member name="M:Syncfusion.HtmlConverter.HtmlConverter.GetHtmlBody">
            <summary>
            Returns BODY element of the document.
            </summary>
            <returns>BODY element of the document.</returns>
        </member>
        <member name="M:Syncfusion.HtmlConverter.HtmlConverter.GetDocument">
            <summary>
            Returns the current document.
            </summary>
            <returns>The current document.</returns>
        </member>
        <member name="M:Syncfusion.HtmlConverter.HtmlConverter.ResizeBrowser3">
            <summary>
            Resizes browser to the document.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.HtmlConverter.HtmlConverter.ResizeBrowser2">
            <summary>
            Resizes browser to the document.
            </summary>
            <returns>Size of the browser.</returns>
        </member>
        <member name="M:Syncfusion.HtmlConverter.HtmlConverter.ResizeBrowser">
            <summary>
            Resizes browser to the document.
            </summary>
            <returns>Size of the browser.</returns>
        </member>
        <member name="M:Syncfusion.HtmlConverter.HtmlConverter.Print(System.IntPtr,System.Boolean)">
            <summary>
            Prints Html to the device context.
            </summary>
            <param name="ptr">Device context.</param>
        </member>
        <member name="M:Syncfusion.HtmlConverter.HtmlConverter.DumpMetafile(System.IO.MemoryStream)">
            <summary>
            Saves metafile to the file. It's debug method.
            </summary>
            <param name="ms">data containing metafile.</param>
        </member>
        <member name="M:Syncfusion.HtmlConverter.HtmlConverter.DisableScrollBars">
            <summary>
            disables scrollbars.
            </summary>
        </member>
        <member name="M:Syncfusion.HtmlConverter.HtmlConverter.SetWidth(System.Int32)">
            <summary>
            Sets width of the web browser.
            </summary>
            <param name="width">Width of the web browser.</param>
        </member>
        <member name="M:Syncfusion.HtmlConverter.HtmlConverter.SetHeight(System.Int32)">
            <summary>
            Sets height of the web browser.
            </summary>
            <param name="height">Height of the web browser.</param>
        </member>
        <member name="M:Syncfusion.HtmlConverter.HtmlConverter.Reset">
            <summary>
            Resets the settings.
            </summary>
        </member>
        <member name="M:Syncfusion.HtmlConverter.HtmlConverter.CalculateImageSize(System.Drawing.Size)">
            <summary>
            Calculates size of the resulting image.
            </summary>
            <param name="documentSize">Size of the document.</param>
            <returns>Size of the image.</returns>
        </member>
        <member name="M:Syncfusion.HtmlConverter.HtmlConverter.GetBounds(mshtml.IHTMLElement,System.Boolean)">
            <summary>
            Calculates the bounds of the Html Element.
            </summary>
            <param name="element">The Html Element.</param>
            <returns>The Bounds.</returns>
        </member>
        <member name="M:Syncfusion.HtmlConverter.HtmlConverter.GetHyperlinks">
            <summary>
            Gets page break.
            </summary>
        </member>
        <member name="M:Syncfusion.HtmlConverter.HtmlConverter.GetDocumentLinks">
            <summary>
            Returns all document links present in the HTML.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.HtmlConverter.HtmlConverter.GetPageBreak">
            <summary>
            Gets page break.
            </summary>
        </member>
        <member name="M:Syncfusion.HtmlConverter.HtmlConverter.OnDocumentComplete(System.Object,Syncfusion.HtmlConverter.Natives.DWebBrowserEvents2_DocumentCompleteEvent)">
            <summary>
            Loading of the document completed.
            </summary>
            <param name="sender">Sender of the event.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Syncfusion.HtmlConverter.HtmlConverter.NewWindow(System.Object,Syncfusion.HtmlConverter.Natives.DWebBrowserEvents2_NewWindow2Event)">
            <summary>
            Blocks popups.
            </summary>
            <param name="sender">Sender of the event.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Syncfusion.HtmlConverter.HtmlConverter.NavigateError(System.Object,Syncfusion.HtmlConverter.Natives.DWebBrowserEvents2_NavigateErrorEvent)">
            <summary>
            Handles Navigation Error.
            </summary>
            <param name="sender">Sender of the event.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Syncfusion.HtmlConverter.HtmlConverter.SetUIHandler">
            <summary>
            Register this window as host of the web browser.
            </summary>
        </member>
        <member name="M:Syncfusion.HtmlConverter.HtmlConverter.CustomizeDownload">
            <summary>
            Applies download and executing properties.
            </summary>
            <returns>Settings flag.</returns>
            <remarks>Don't call this method. It's used for internal purpose only. </remarks>
        </member>
        <member name="M:Syncfusion.HtmlConverter.HtmlConverter.Syncfusion#HtmlConverter#Natives#IDocHostUIHandler#ShowContextMenu(System.UInt32,Syncfusion.HtmlConverter.tagPOINT@,System.Object,System.Object)">
            <summary>
            Customization method.
            </summary>
        </member>
        <member name="M:Syncfusion.HtmlConverter.HtmlConverter.Syncfusion#HtmlConverter#Natives#IDocHostUIHandler#GetHostInfo(Syncfusion.HtmlConverter.Natives.DOCHOSTUIINFO@)">
            <summary>
            Customization method.
            </summary>
        </member>
        <member name="M:Syncfusion.HtmlConverter.HtmlConverter.Syncfusion#HtmlConverter#Natives#IDocHostUIHandler#ShowUI(System.UInt32,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
            <summary>
            Customization method.
            </summary>
        </member>
        <member name="M:Syncfusion.HtmlConverter.HtmlConverter.Syncfusion#HtmlConverter#Natives#IDocHostUIHandler#HideUI">
            <summary>
            Customization method.
            </summary>
        </member>
        <member name="M:Syncfusion.HtmlConverter.HtmlConverter.Syncfusion#HtmlConverter#Natives#IDocHostUIHandler#UpdateUI">
            <summary>
            Customization method.
            </summary>
        </member>
        <member name="M:Syncfusion.HtmlConverter.HtmlConverter.Syncfusion#HtmlConverter#Natives#IDocHostUIHandler#EnableModeless(System.Int32)">
            <summary>
            Customization method.
            </summary>
        </member>
        <member name="M:Syncfusion.HtmlConverter.HtmlConverter.Syncfusion#HtmlConverter#Natives#IDocHostUIHandler#OnDocWindowActivate(System.Int32)">
            <summary>
            Customization method.
            </summary>
        </member>
        <member name="M:Syncfusion.HtmlConverter.HtmlConverter.Syncfusion#HtmlConverter#Natives#IDocHostUIHandler#OnFrameWindowActivate(System.Int32)">
            <summary>
            Customization method.
            </summary>
        </member>
        <member name="M:Syncfusion.HtmlConverter.HtmlConverter.Syncfusion#HtmlConverter#Natives#IDocHostUIHandler#ResizeBorder(Syncfusion.HtmlConverter.tagRECT@,System.IntPtr,System.Int32)">
            <summary>
            Customization method.
            </summary>
        </member>
        <member name="M:Syncfusion.HtmlConverter.HtmlConverter.Syncfusion#HtmlConverter#Natives#IDocHostUIHandler#TranslateAccelerator(Syncfusion.HtmlConverter.Natives.tagMSG@,System.Guid@,System.UInt32)">
            <summary>
            Customization method.
            </summary>
        </member>
        <member name="M:Syncfusion.HtmlConverter.HtmlConverter.Syncfusion#HtmlConverter#Natives#IDocHostUIHandler#GetOptionKeyPath(System.String@,System.UInt32)">
            <summary>
            Customization method.
            </summary>
        </member>
        <member name="M:Syncfusion.HtmlConverter.HtmlConverter.Syncfusion#HtmlConverter#Natives#IDocHostUIHandler#GetDropTarget(Syncfusion.HtmlConverter.Natives.IDropTarget,Syncfusion.HtmlConverter.Natives.IDropTarget@)">
            <summary>
            Customization method.
            </summary>
        </member>
        <member name="M:Syncfusion.HtmlConverter.HtmlConverter.Syncfusion#HtmlConverter#Natives#IDocHostUIHandler#GetExternal(System.Object@)">
            <summary>
            Customization method.
            </summary>
        </member>
        <member name="M:Syncfusion.HtmlConverter.HtmlConverter.Syncfusion#HtmlConverter#Natives#IDocHostUIHandler#TranslateUrl(System.UInt32,System.UInt16@,System.IntPtr)">
            <summary>
            Customization method.
            </summary>
        </member>
        <member name="M:Syncfusion.HtmlConverter.HtmlConverter.Syncfusion#HtmlConverter#Natives#IDocHostUIHandler#FilterDataObject(System.Runtime.InteropServices.ComTypes.IDataObject,System.Runtime.InteropServices.ComTypes.IDataObject@)">
            <summary>
            Customization method.
            </summary>
        </member>
        <member name="M:Syncfusion.HtmlConverter.HtmlConverter.Syncfusion#HtmlConverter#Natives#IOleClientSite#SaveObject">
            <summary>
            Customization method.
            </summary>
        </member>
        <member name="M:Syncfusion.HtmlConverter.HtmlConverter.Syncfusion#HtmlConverter#Natives#IOleClientSite#GetMoniker(System.UInt32,System.UInt32,System.Object)">
            <summary>
            Customization method.
            </summary>
        </member>
        <member name="M:Syncfusion.HtmlConverter.HtmlConverter.Syncfusion#HtmlConverter#Natives#IOleClientSite#GetContainer(System.Object)">
            <summary>
            Customization method.
            </summary>
        </member>
        <member name="M:Syncfusion.HtmlConverter.HtmlConverter.Syncfusion#HtmlConverter#Natives#IOleClientSite#ShowObject">
            <summary>
            Customization method.
            </summary>
        </member>
        <member name="M:Syncfusion.HtmlConverter.HtmlConverter.Syncfusion#HtmlConverter#Natives#IOleClientSite#OnShowWindow(System.Boolean)">
            <summary>
            Customization method.
            </summary>
        </member>
        <member name="M:Syncfusion.HtmlConverter.HtmlConverter.Syncfusion#HtmlConverter#Natives#IOleClientSite#RequestNewObjectLayout">
            <summary>
            Customization method.
            </summary>
        </member>
        <member name="T:Syncfusion.HtmlConverter.ExternalScriptWrapper">
            <summary>
            Class to execute javascript calls for GetExternal.
            </summary>
        </member>
        <member name="M:Syncfusion.HtmlConverter.ExternalScriptWrapper.#ctor(Syncfusion.HtmlConverter.HtmlConverter)">
            <summary>
            Requires a handle to the owning form
            </summary>
            <param name="ownerForm"></param>
        </member>
        <member name="T:Syncfusion.HtmlConverter.ImageType">
            <summary>
            Specifies the image type
            </summary>
        </member>
        <member name="F:Syncfusion.HtmlConverter.ImageType.Bitmap">
            <summary>
            Image is bitmap.
            </summary>
        </member>
        <member name="F:Syncfusion.HtmlConverter.ImageType.Metafile">
            <summary>
            Image is metafile.
            </summary>
        </member>
        <member name="T:Syncfusion.HtmlConverter.AspectRatio">
            <summary>
            Specifies the primary dimension of the output image.
            </summary>
            <example>
            <code lang = "C#">
            //Initialize HTML to PDF converter
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.IE);
            //Initialize the IE converter settings
            IEConverterSettings ieSettings = new IEConverterSettings();
            //Set AspectRatio
            ieSettings.AspectRatio = AspectRatio.None;
            //Assign IE settings to HTML converter
            htmlConverter.ConverterSettings = ieSettings;
            //Convert URL to PDF
            PdfDocument document = htmlConverter.Convert("https://www.google.com");
            //Save the document.
            document.Save("Sample.pdf");
            document.Close();
            </code>
            <code lang = "VB">
            'Initialize HTML to PDF converter
            Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.IE)
            'Initialize the IE converter settings
            Dim ieSettings As New IEConverterSettings()
            'Set AspectRatio
            ieSettings.AspectRatio = AspectRatio.None
            'Assign IE settings to HTML converter
            htmlConverter.ConverterSettings = ieSettings
            'Convert URL to PDF
            Dim document As PdfDocument = htmlConverter.Convert("https://www.google.com")
            'Save the document.
            document.Save("Sample.pdf")
            document.Close()
            </code>
            </example>
        </member>
        <member name="F:Syncfusion.HtmlConverter.AspectRatio.None">
            <summary>
            Don't apply keeping of aspect ratio.
            </summary>
        </member>
        <member name="F:Syncfusion.HtmlConverter.AspectRatio.KeepWidth">
            <summary>
            Keep width fixed and proportionally change height of the image.
            </summary>
        </member>
        <member name="F:Syncfusion.HtmlConverter.AspectRatio.KeepHeight">
            <summary>
            Keep height fixed and proportionally change width of the image.
            </summary>
        </member>
        <member name="F:Syncfusion.HtmlConverter.AspectRatio.FitPageSize">
            <summary>
            keep the width and height.
            </summary>
        </member>
        <member name="T:Syncfusion.HtmlConverter.HtmlToPdfConverter">
            <summary>
            Class which allows converting HTML to PDF.
            </summary>
            <remarks>
            To know more details about HTML to PDF conversion refer this 
            <see href="https://help.syncfusion.com/file-formats/pdf/converting-html-to-pdf"> link</see>. 
            </remarks>
            <example>
            <code lang = "C#">
            //Initialize the HTML to PDF converter 
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.WebKit);
            //Initialize the WebKit converter settings
            WebKitConverterSettings settings = new WebKitConverterSettings();
            //Set WebKit path
            settings.WebKitPath = @"/QtBinaries/";
            //Assign WebKit settings to the HTML converter
            htmlConverter.ConverterSettings = settings;
            //Convert URL to PDF
            PdfDocument document = htmlConverter.Convert("https://www.google.com");
            //Save and close the PDF document 
            document.Save("Output.pdf");
            document.Close(true);
            </code>
            <code lang="VB">
            'Initialize the HTML to PDF converter 
            Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.WebKit)
            'Initialize the WebKit converter settings
            Dim settings As New WebKitConverterSettings()
            'Set WebKit path
            settings.WebKitPath = "/QtBinaries/"
            'Assign WebKit settings to the HTML converter
            htmlConverter.ConverterSettings = settings
            'Convert URL to PDF
            Dim document As PdfDocument = htmlConverter.Convert("https://www.google.com")
            'Save and close the PDF document 
            document.Save("Output.pdf")
            document.Close(True)
            </code>
            </example>
            <seealso cref="T:Syncfusion.HtmlConverter.HtmlRenderingEngine"/>
            <seealso cref="T:Syncfusion.HtmlConverter.WebKitConverterSettings"/> class
            <seealso cref="T:Syncfusion.Pdf.PdfDocument"/> class
        </member>
        <member name="F:Syncfusion.HtmlConverter.HtmlToPdfConverter.DefaultDPI">
            <summary>
            Indicates default DPI for PdfUnitConvertor.
            </summary>
        </member>
        <member name="P:Syncfusion.HtmlConverter.HtmlToPdfConverter.RenderingEngine">
            <summary>
            Gets or sets the rendering engine used for conversion.
            </summary>
            <value> Specifies rendering engine (Default IE rendering engine).</value>
            <example>
            <code lang = "C#">
            //Initialize the HTML to PDF converter 
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter();
            //Set rendering engine for conversion
            htmlConverter.RenderingEngine = HtmlRenderingEngine.WebKit;
            //Initialize the WebKit converter settings
            WebKitConverterSettings settings = new WebKitConverterSettings();
            //Set WebKitPath
            settings.WebKitPath = "/QtBinaries/";
            //Assign WebKit settings to the HTML converter
            htmlConverter.ConverterSettings = settings;
            //Convert URL to PDF
            PdfDocument document = htmlConverter.Convert("https://www.google.com");
            //Save and close the PDF document 
            document.Save("Output.pdf");
            document.Close(true);
            </code>
            <code lang="VB">        
            'Initialize the HTML to PDF converter 
            Dim htmlConverter As New HtmlToPdfConverter()
            'Set rendering engine for conversion
            htmlConverter.RenderingEngine = HtmlRenderingEngine.WebKit
            'Initialize the WebKit converter settings
            Dim settings As New WebKitConverterSettings()
            'Set WebKitPath
            settings.WebKitPath = "/QtBinaries/"
            'Assign WebKit settings to the HTML converter
            htmlConverter.ConverterSettings = settings
            'Convert URL to PDF
            Dim document As PdfDocument = htmlConverter.Convert("https://www.google.com")
            'Save and close the PDF document 
            document.Save("Output.pdf")
            document.Close(True)
            </code>
            </example>
            <seealso cref="T:Syncfusion.HtmlConverter.HtmlRenderingEngine"/>
            <seealso cref="T:Syncfusion.HtmlConverter.WebKitConverterSettings"/> class
            <seealso cref="T:Syncfusion.HtmlConverter.BlinkConverterSettings"/> class
            <seealso cref="T:Syncfusion.HtmlConverter.IEConverterSettings"/> class
        </member>
        <member name="P:Syncfusion.HtmlConverter.HtmlToPdfConverter.ConverterSettings">
            <summary>
            Gets or sets rendering engine settings.
            </summary>
            <value> Specifies rendering engine settings.</value>
            <remarks>
            To know more details about converter settings, refer this 
            <see href="https://help.syncfusion.com/file-formats/pdf/convert-html-to-pdf/webkit"> link</see>. 
            </remarks>
            <example>
            <code lang = "C#">
            //Initialize the HTML to PDF converter 
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.WebKit);
            //Initialize the WebKit converter settings
            WebKitConverterSettings settings = new WebKitConverterSettings();
            //Set WebKit path
            settings.WebKitPath = @"/QtBinaries/";
            //Assign WebKit settings to the HTML converter
            htmlConverter.ConverterSettings = settings;
            //Convert URL to PDF
            PdfDocument document = htmlConverter.Convert("https://www.google.com");
            //Save and close the PDF document 
            document.Save("Output.pdf");
            document.Close(true);
            </code>
            <code lang="VB">
            'Initialize the HTML to PDF converter 
            Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.WebKit)
            'Initialize the WebKit converter settings
            Dim settings As New WebKitConverterSettings()
            'Set WebKit path
            settings.WebKitPath = "/QtBinaries/"
            'Assign WebKit settings to the HTML converter
            htmlConverter.ConverterSettings = settings
            'Convert URL to PDF
            Dim document As PdfDocument = htmlConverter.Convert("https://www.google.com")
            'Save and close the PDF document 
            document.Save("Output.pdf")
            document.Close(True)
            </code>
            </example>
            <seealso cref="T:Syncfusion.HtmlConverter.WebKitConverterSettings"/> class
            <seealso cref="T:Syncfusion.HtmlConverter.BlinkConverterSettings"/> class
            <seealso cref="T:Syncfusion.HtmlConverter.IEConverterSettings"/> class
        </member>
        <member name="M:Syncfusion.HtmlConverter.HtmlToPdfConverter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.HtmlConverter.HtmlToPdfConverter"/> class.
            </summary>
            <remarks>
            To know more details about IE rendering engine, refer this 
            <see href="https://help.syncfusion.com/file-formats/pdf/convert-html-to-pdf/ie"> link</see>. 
            </remarks>
            <example>
            <code lang = "C#">
            //Initialize the HTML to PDF converter 
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter();
            //Initialize the IE converter settings
            IEConverterSettings settings = new IEConverterSettings();
            //Assign IE settings to the HTML converter
            htmlConverter.ConverterSettings = settings;
            //Convert URL to PDF
            PdfDocument document = htmlConverter.Convert("https://www.google.com");
            //Save and close the PDF document 
            document.Save("Output.pdf");
            document.Close(true);
            </code>
            <code lang="VB">
            'Initialize the HTML to PDF converter 
            Dim htmlConverter As New HtmlToPdfConverter()
            'Initialize the IE converter settings
            Dim settings As New IEConverterSettings()
            'Assign IE settings to the HTML converter
            htmlConverter.ConverterSettings = settings
            'Convert URL to PDF
            Dim document As PdfDocument = htmlConverter.Convert("https://www.google.com")
            'Save and close the PDF document 
            document.Save("Output.pdf")
            document.Close(True)
            </code>
            </example>
            <seealso cref="T:Syncfusion.HtmlConverter.HtmlRenderingEngine"/>
            <seealso cref="T:Syncfusion.HtmlConverter.IEConverterSettings"/> class
            <seealso cref="T:Syncfusion.Pdf.PdfDocument"/> class
        </member>
        <member name="M:Syncfusion.HtmlConverter.HtmlToPdfConverter.#ctor(Syncfusion.HtmlConverter.HtmlRenderingEngine)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.HtmlConverter.HtmlToPdfConverter"/> class with specified <see cref="P:Syncfusion.HtmlConverter.HtmlToPdfConverter.RenderingEngine"/>.
            </summary>
            <param name="renderingEngine">Rendering Engine used for conversion</param>
            <remarks>
            To know more details about HTML to PDF converter, refer this 
            <see href="https://help.syncfusion.com/file-formats/pdf/converting-html-to-pdf"> link</see>. 
            </remarks>
            <example>
            <code lang = "C#">
            //Initialize the HTML to PDF converter 
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.WebKit);
            //Initialize the WebKit converter settings
            WebKitConverterSettings settings = new WebKitConverterSettings();
            //Set WebKit path
            settings.WebKitPath = @"/QtBinaries/";
            //Assign WebKit settings to the HTML converter
            htmlConverter.ConverterSettings = settings;
            //Convert URL to PDF
            PdfDocument document = htmlConverter.Convert("https://www.google.com");
            //Save and close the PDF document 
            document.Save("Output.pdf");
            document.Close(true);
            </code>
            <code lang="VB">
            'Initialize the HTML to PDF converter 
            Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.WebKit)
            'Initialize the WebKit converter settings
            Dim settings As New WebKitConverterSettings()
            'Set WebKit path
            settings.WebKitPath = "/QtBinaries/"
            'Assign WebKit settings to the HTML converter
            htmlConverter.ConverterSettings = settings
            'Convert URL to PDF
            Dim document As PdfDocument = htmlConverter.Convert("https://www.google.com")
            'Save and close the PDF document 
            document.Save("Output.pdf")
            document.Close(True)
            </code>
            </example>
            <seealso cref="T:Syncfusion.HtmlConverter.HtmlRenderingEngine"/>
            <seealso cref="T:Syncfusion.HtmlConverter.WebKitConverterSettings"/> class
            <seealso cref="T:Syncfusion.Pdf.PdfDocument"/> class
        </member>
        <member name="M:Syncfusion.HtmlConverter.HtmlToPdfConverter.Convert(System.String)">
            <summary>
            Converts URL to PDF document
            </summary>
            <param name="url">Path to the HTML resource.</param>
            <returns>The PDF document</returns>
            <example>
            <code lang = "C#">
            //Initialize the HTML to PDF converter 
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.WebKit);
            //Initialize the WebKit converter settings
            WebKitConverterSettings settings = new WebKitConverterSettings();
            //Set WebKit path
            settings.WebKitPath = @"/QtBinaries/";
            //Assign WebKit settings to the HTML converter
            htmlConverter.ConverterSettings = settings;
            //Convert URL to PDF
            PdfDocument document = htmlConverter.Convert("https://www.google.com");
            //Save and close the PDF document 
            document.Save("Output.pdf");
            document.Close(true);
            </code>
            <code lang="VB">
            'Initialize the HTML to PDF converter 
            Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.WebKit)
            'Initialize the WebKit converter settings
            Dim settings As New WebKitConverterSettings()
            'Set WebKit path
            settings.WebKitPath = "/QtBinaries/"
            'Assign WebKit settings to the HTML converter
            htmlConverter.ConverterSettings = settings
            'Convert URL to PDF
            Dim document As PdfDocument = htmlConverter.Convert("https://www.google.com")
            'Save and close the PDF document 
            document.Save("Output.pdf")
            document.Close(True)
            </code>
            </example>
            <seealso cref="T:Syncfusion.HtmlConverter.HtmlRenderingEngine"/>
            <seealso cref="T:Syncfusion.HtmlConverter.WebKitConverterSettings"/> class
            <seealso cref="T:Syncfusion.HtmlConverter.BlinkConverterSettings"/> class
            <seealso cref="T:Syncfusion.HtmlConverter.IEConverterSettings"/> class
            <seealso cref="T:Syncfusion.Pdf.PdfDocument"/> class
        </member>
        <member name="M:Syncfusion.HtmlConverter.HtmlToPdfConverter.Convert(System.String,Syncfusion.Pdf.Graphics.PdfLayoutResult@)">
            <summary>
            Converts URL to PDF document
            </summary>
            <remarks>
            To know more details about pdf layout result refer this 
            <see href="https://help.syncfusion.com/file-formats/pdf/convert-html-to-pdf/webkit#layout-result">link</see>.
            </remarks>
            <param name="url">Path to the Html resource.</param>
            <param name="layoutResult">Layout result</param>
            <returns>PDF document</returns>
            <example>
            <code lang = "C#">
            //Initialize the HTML to PDF converter 
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.WebKit);
            //Initialize the WebKit converter settings
            WebKitConverterSettings settings = new WebKitConverterSettings();
            //Set WebKitPath
            settings.WebKitPath = "/QtBinaries/";
            //Assign WebKit settings to the HTML converter
            htmlConverter.ConverterSettings = settings;
            //Initialize PDF layout result
            PdfLayoutResult pdfLayoutResult = null;
            //Convert URL to PDF and get PDF layout result
            PdfDocument document = htmlConverter.Convert("https://www.google.com", out pdfLayoutResult);
            //Save and close the PDF document 
            document.Save("Output.pdf");
            document.Close(true);
            </code>
            <code lang="VB">
            'Initialize the HTML to PDF converter 
            Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.WebKit)
            'Initialize the WebKit converter settings
            Dim settings As New WebKitConverterSettings()
            'Set WebKitPath
            settings.WebKitPath = "/QtBinaries/"
            'Assign WebKit settings to the HTML converter
            htmlConverter.ConverterSettings = settings
            'Initialize PDF layout result
            Dim pdfLayoutResult As PdfLayoutResult = Nothing
            'Convert URL to PDF and get PDF layout result
            Dim document As PdfDocument = htmlConverter.Convert("https://www.google.com", pdfLayoutResult)
            'Save and close the PDF document 
            document.Save("Output.pdf")
            document.Close(True)
            </code>
            </example>
            <seealso cref="T:Syncfusion.HtmlConverter.HtmlRenderingEngine"/>
            <seealso cref="T:Syncfusion.HtmlConverter.WebKitConverterSettings"/> class
            <seealso cref="T:Syncfusion.Pdf.PdfDocument"/> class
            <seealso cref="T:Syncfusion.Pdf.Graphics.PdfLayoutResult"/> class
        </member>
        <member name="M:Syncfusion.HtmlConverter.HtmlToPdfConverter.Convert(System.String,System.Single,System.Single,Syncfusion.HtmlConverter.AspectRatio)">
            <summary>
            Converts URL to PDF document
            </summary>
            <param name="url">Path to the Html resource.</param>
            <param name="width">Preferred width of the PDF page.</param>
            <param name="height">Preferred height of the PDF page.</param>
            <param name="aspectRatio">Aspect ratio of the PDF.</param>
            <returns>PDF document</returns>
            <example>
            <code lang = "C#">
            //Initialize the HTML to PDF converter 
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.WebKit);
            //Initialize the WebKit converter settings
            WebKitConverterSettings settings = new WebKitConverterSettings();
            //Set WebKitPath
            settings.WebKitPath = "/QtBinaries/";
            //Assign WebKit settings to the HTML converter
            htmlConverter.ConverterSettings = settings;
            //Convert URL to PDF
            PdfDocument document = htmlConverter.Convert("https://www.google.com", PdfPageSize.A4.Width, PdfPageSize.A4.Height, AspectRatio.None);
            //Save and close the PDF document 
            document.Save("Output.pdf");
            document.Close(true);
            </code>
            <code lang="VB">
            'Initialize the HTML to PDF converter 
            Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.WebKit)
            'Initialize the WebKit converter settings
            Dim settings As New WebKitConverterSettings()
            'Set WebKitPath
            settings.WebKitPath = "/QtBinaries/"
            'Assign WebKit settings to the HTML converter
            htmlConverter.ConverterSettings = settings
            'Convert URL to PDF
            Dim document As PdfDocument = htmlConverter.Convert("https://www.google.com", PdfPageSize.A4.Width, PdfPageSize.A4.Height, AspectRatio.None)
            'Save and close the PDF document 
            document.Save("Output.pdf")
            document.Close(True)
            </code>
            </example>
            <seealso cref="T:Syncfusion.Pdf.PdfDocument"/> class
            <seealso cref="T:Syncfusion.HtmlConverter.IEConverterSettings"/> class
            <see cref="T:Syncfusion.HtmlConverter.AspectRatio"/>
        </member>
        <member name="M:Syncfusion.HtmlConverter.HtmlToPdfConverter.Convert(System.String,System.Single,System.Single,Syncfusion.HtmlConverter.AspectRatio,Syncfusion.Pdf.Graphics.PdfLayoutResult@)">
            <summary>
            Converts URL to PDF document
            </summary>
            <param name="url">Path to the Html resource.</param>
            <param name="width">Preferred width of the PDF page.</param>
            <param name="height">Preferred height of the PDF page.</param>
            <param name="aspectRatio">Aspect ratio</param>
            <param name="layoutResult">Layout result</param>
            <returns>PDF document</returns>
            <example>
            <code lang = "C#">
            //Initialize the HTML to PDF converter 
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.WebKit);
            //Initialize the WebKit converter settings
            WebKitConverterSettings settings = new WebKitConverterSettings();
            //Set WebKitPath
            settings.WebKitPath = "/QtBinaries/";
            //Assign WebKit settings to the HTML converter
            htmlConverter.ConverterSettings = settings;
            //Initialize PDF layout result
            PdfLayoutResult pdfLayoutResult = null;
            //Convert URL to PDF and get PDF layout result
            PdfDocument document = htmlConverter.Convert("https://www.google.com", PdfPageSize.A4.Width, PdfPageSize.A4.Height, AspectRatio.None, out pdfLayoutResult);
            //Save and close the PDF document 
            document.Save("Output.pdf");
            document.Close(true);
            </code>
            <code lang="VB">
            'Initialize the HTML to PDF converter 
            Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.WebKit)
            'Initialize the WebKit converter settings
            Dim settings As New WebKitConverterSettings()
            'Set WebKitPath
            settings.WebKitPath = "/QtBinaries/"
            'Assign WebKit settings to the HTML converter
            htmlConverter.ConverterSettings = settings
            'Initialize PDF layout result
            Dim pdfLayoutResult As PdfLayoutResult = Nothing
            'Convert URL to PDF and get PDF layout result
            Dim document As PdfDocument = htmlConverter.Convert("https://www.google.com", PdfPageSize.A4.Width, PdfPageSize.A4.Height, AspectRatio.None, pdfLayoutResult)
            'Save and close the PDF document 
            document.Save("Output.pdf")
            document.Close(True)
            </code>
            </example>
            <seealso cref="T:Syncfusion.Pdf.PdfDocument"/> class
            <seealso cref="T:Syncfusion.Pdf.Graphics.PdfLayoutResult"/> class
            <see cref="T:Syncfusion.HtmlConverter.AspectRatio"/>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Syncfusion.HtmlConverter.HtmlToPdfConverter.Convert(System.String,System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:Syncfusion.HtmlConverter.HtmlToPdfConverter.Convert(System.String,System.String,Syncfusion.Pdf.Graphics.PdfLayoutResult@)" -->
        <!-- Badly formed XML comment ignored for member "M:Syncfusion.HtmlConverter.HtmlToPdfConverter.Convert(System.String,System.String,System.Single,System.Single,Syncfusion.HtmlConverter.AspectRatio)" -->
        <!-- Badly formed XML comment ignored for member "M:Syncfusion.HtmlConverter.HtmlToPdfConverter.Convert(System.String,System.String,System.Single,System.Single,Syncfusion.HtmlConverter.AspectRatio,Syncfusion.Pdf.Graphics.PdfLayoutResult@)" -->
        <member name="M:Syncfusion.HtmlConverter.HtmlToPdfConverter.ConvertPartialHtml(System.String,System.String)">
            <summary>
            Converts URL to PDF document
            </summary>
            <param name="url">Path to the HTML resource.</param>
            <param name="htmlElementID">Used to convert particular part of a HTML page to PDF</param>
            <returns>The PDF document</returns>
            <remarks>
            To know more details about partial HTML to PDF conversion, refer this 
            <see href="https://help.syncfusion.com/file-formats/pdf/convert-html-to-pdf/webkit#partial-webpage-to-pdf">link</see>.
            </remarks>
            <example>
            <code lang = "C#">
            //Initialize HTML converter
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.WebKit);
            // WebKit converter settings
            WebKitConverterSettings webKitSettings = new WebKitConverterSettings();
            //Assign the WebKit binaries path
            webKitSettings.WebKitPath = @"/QtBinaries/";
            //Assign the WebKit settings
            htmlConverter.ConverterSettings = webKitSettings;
            //Convert Partial webpage to PDF using HTML element ID, here pic is an HTML element ID.
            PdfDocument document = htmlConverter.ConvertPartialHtml("input.html", "pic");
            //Save and close the PDF document
            document.Save("Output.pdf");
            document.Close(true);
            </code>
            <code lang="VB">
            'Initialize HTML converter
            Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.WebKit)
            ' WebKit converter settings
            Dim webKitSettings As New WebKitConverterSettings()
            'Assign the WebKit binaries path
            webKitSettings.WebKitPath = "/QtBinaries/"
            'Assign the WebKit settings
            htmlConverter.ConverterSettings = webKitSettings
            'Convert Partial webpage to PDF using HTML element ID, here pic is an HTML element ID.
            Dim document As PdfDocument = htmlConverter.ConvertPartialHtml("input.html", "pic")
            'Save and close the PDF document
            document.Save("Output.pdf")
            document.Close(True)
            </code>
            </example>
            <seealso cref="T:Syncfusion.Pdf.PdfDocument"/> class
            <seealso cref="T:Syncfusion.HtmlConverter.WebKitConverterSettings"/> class
        </member>
        <member name="M:Syncfusion.HtmlConverter.HtmlToPdfConverter.ConvertPartialHtml(System.String,System.String,Syncfusion.Pdf.Graphics.PdfLayoutResult@)">
            <summary>
            Converts URL to PDF document
            </summary>
            <param name="url">Path to the HTML resource.</param>
            <param name="htmlElementID">Used to convert particular part of a HTML page to PDF</param>
            <param name="layoutResult">Layout result</param>
            <returns>The PDF document</returns>
            <remarks>
            To know more details about partial HTML to PDF conversion, refer this 
            <see href="https://help.syncfusion.com/file-formats/pdf/convert-html-to-pdf/webkit#partial-webpage-to-pdf">link</see>.
            </remarks>
            <example>
            <code lang = "C#">
            //Initialize HTML converter
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.WebKit);
            // WebKit converter settings
            WebKitConverterSettings webKitSettings = new WebKitConverterSettings();
            //Assign the WebKit binaries path
            webKitSettings.WebKitPath = @"/QtBinaries/";
            //Assign the WebKit settings
            htmlConverter.ConverterSettings = webKitSettings;
            //Initialize PDF layout result
            PdfLayoutResult pdfLayoutResult = null;
            //Convert partial HTML to PDF and get PDF layout result
            PdfDocument document = htmlConverter.ConvertPartialHtml("input.html", "pic", out pdfLayoutResult);
            //Save and close the PDF document
            document.Save("Output.pdf");
            document.Close(true);
            </code>
            <code lang="VB">
            'Initialize HTML converter
            Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.WebKit)
            ' WebKit converter settings
            Dim webKitSettings As New WebKitConverterSettings()
            'Assign the WebKit binaries path
            webKitSettings.WebKitPath = "/QtBinaries/"
            'Assign the WebKit settings
            htmlConverter.ConverterSettings = webKitSettings
            'Initialize PDF layout result
            Dim pdfLayoutResult As PdfLayoutResult = Nothing
            'Convert partial HTML to PDF and get PDF layout result
            Dim document As PdfDocument = htmlConverter.ConvertPartialHtml("input.html", "pic", pdfLayoutResult)
            'Save and close the PDF document
            document.Save("Output.pdf")
            document.Close(True)
            </code>
            </example>
            <seealso cref="T:Syncfusion.Pdf.PdfDocument"/> class
            <seealso cref="T:Syncfusion.HtmlConverter.WebKitConverterSettings"/> class
        </member>
        <!-- Badly formed XML comment ignored for member "M:Syncfusion.HtmlConverter.HtmlToPdfConverter.ConvertPartialHtml(System.String,System.String,System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:Syncfusion.HtmlConverter.HtmlToPdfConverter.ConvertPartialHtml(System.String,System.String,System.String,Syncfusion.Pdf.Graphics.PdfLayoutResult@)" -->
        <member name="M:Syncfusion.HtmlConverter.HtmlToPdfConverter.ConvertPartialHtml(System.String,System.String,System.Single,System.Single,Syncfusion.HtmlConverter.AspectRatio)">
            <summary>
            Converts URL to PDF document
            </summary>
            <param name="url">Path to the Html resource.</param>
            <param name="htmlElementID">Used to convert particular part of a HTML page to PDF</param>
            <param name="width">Preferred width of the PDF page.</param>
            <param name="height">Preferred height of the PDF page.</param>
            <param name="aspectRatio">Aspect ratio of the PDF.</param>
            <returns>PDF document</returns>
            <remarks>
            To know more details about partial HTML to PDF conversion, refer this 
            <see href="https://help.syncfusion.com/file-formats/pdf/convert-html-to-pdf/webkit#partial-webpage-to-pdf">link</see>.
            </remarks>
            <example>
            <code lang = "C#">
            //Initialize HTML to PDF converter 
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.WebKit);
            //Initialize WebKit converter settings
            WebKitConverterSettings settings = new WebKitConverterSettings();
            //Set WebKit path
            settings.WebKitPath = @"/QtBinaries/";
            //Assign WebKit settings to HTML converter
            htmlConverter.ConverterSettings = settings;
            //Convert URL to PDF
            PdfDocument document = htmlConverter.ConvertPartialHtml("input.html", "pic", PdfPageSize.A4.Width, PdfPageSize.A4.Height, AspectRatio.None);
            //Save and close the PDF document 
            document.Save("Output.pdf");
            document.Close(true);
            </code>
            <code lang="VB">
            'Initialize HTML to PDF converter 
            Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.WebKit)
            'Initialize WebKit converter settings
            Dim settings As New WebKitConverterSettings()
            'Set WebKit path
            settings.WebKitPath = "/QtBinaries/"
            'Assign WebKit settings to HTML converter
            htmlConverter.ConverterSettings = settings
            'Convert URL to PDF
            Dim document As PdfDocument = htmlConverter.ConvertPartialHtml("input.html", "pic", PdfPageSize.A4.Width, PdfPageSize.A4.Height, AspectRatio.None)
            'Save and close the PDF document 
            document.Save("Output.pdf")
            document.Close(True)
            </code>
            </example>
            <seealso cref="T:Syncfusion.Pdf.PdfDocument"/> class
            <seealso cref="T:Syncfusion.HtmlConverter.WebKitConverterSettings"/> class
            <seealso cref="T:Syncfusion.HtmlConverter.AspectRatio"/>
        </member>
        <member name="M:Syncfusion.HtmlConverter.HtmlToPdfConverter.ConvertPartialHtml(System.String,System.String,System.Single,System.Single,Syncfusion.HtmlConverter.AspectRatio,Syncfusion.Pdf.Graphics.PdfLayoutResult@)">
            <summary>
            Converts URL to PDF document
            </summary>
            <param name="url">Path to the Html resource.</param>
            <param name="htmlElementID">Used to convert particular part of a HTML page to PDF</param>
            <param name="width">Preferred width of the PDF page.</param>
            <param name="height">Preferred height of the PDF page.</param>
            <param name="aspectRatio">Aspect ratio of the PDF.</param>
            <param name="layoutResult">Layout result</param>
            <returns>PDF document</returns>
            <remarks>
            To know more details about partial HTML to PDF conversion, refer this 
            <see href="https://help.syncfusion.com/file-formats/pdf/convert-html-to-pdf/webkit#partial-webpage-to-pdf">link</see>.
            </remarks>
            <example>
            <code lang = "C#">
            //Initialize HTML to PDF converter 
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.WebKit);
            //Initialize WebKit converter settings
            WebKitConverterSettings settings = new WebKitConverterSettings();
            //Set WebKit path
            settings.WebKitPath = @"/QtBinaries/";
            //Assign WebKit settings to HTML converter
            htmlConverter.ConverterSettings = settings;
            //Initialize PDF layout result
            PdfLayoutResult pdfLayoutResult = null;
            //Convert URL to PDF and get PDF layout result
            PdfDocument document = htmlConverter.ConvertPartialHtml("input.html", "pic", PdfPageSize.A4.Width, PdfPageSize.A4.Height, AspectRatio.None, out pdfLayoutResult);
            //Save and close the PDF document 
            document.Save("Output.pdf");
            document.Close(true);
            </code>
            <code lang="VB">
            'Initialize HTML to PDF converter 
            Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.WebKit)
            'Initialize WebKit converter settings
            Dim settings As New WebKitConverterSettings()
            'Set WebKit path
            settings.WebKitPath = "/QtBinaries/"
            'Assign WebKit settings to HTML converter
            htmlConverter.ConverterSettings = settings
            'Initialize PDF layout result
            Dim pdfLayoutResult As PdfLayoutResult = Nothing
            'Convert URL to PDF and get PDF layout result
            Dim document As PdfDocument = htmlConverter.ConvertPartialHtml("input.html", "pic", PdfPageSize.A4.Width, PdfPageSize.A4.Height, AspectRatio.None, pdfLayoutResult)
            'Save and close the PDF document 
            document.Save("Output.pdf")
            document.Close(True)
            </code>
            </example>
            <seealso cref="T:Syncfusion.Pdf.PdfDocument"/> class
            <seealso cref="T:Syncfusion.HtmlConverter.WebKitConverterSettings"/> class
            <seealso cref="T:Syncfusion.Pdf.Graphics.PdfLayoutResult"/> class
        </member>
        <!-- Badly formed XML comment ignored for member "M:Syncfusion.HtmlConverter.HtmlToPdfConverter.ConvertPartialHtml(System.String,System.String,System.String,System.Single,System.Single,Syncfusion.HtmlConverter.AspectRatio)" -->
        <!-- Badly formed XML comment ignored for member "M:Syncfusion.HtmlConverter.HtmlToPdfConverter.ConvertPartialHtml(System.String,System.String,System.String,System.Single,System.Single,Syncfusion.HtmlConverter.AspectRatio,Syncfusion.Pdf.Graphics.PdfLayoutResult@)" -->
        <member name="M:Syncfusion.HtmlConverter.HtmlToPdfConverter.ConvertToMhtml(System.String,System.String)">
            <summary>
            Converts an URL or local file to MHTML and writes the converted MHTML into a file.
            </summary>
            <param name="url">The URL or local file path of the HTML document to convert to MHTML.</param>
            <param name= "outputPath">The path of the converted MHTML file.</param>
            <example>
            <remarks>
            To know more details about HTML to MHTML conversion, refer this 
            <see href="https://help.syncfusion.com/file-formats/pdf/working-with-document-conversions#html-to-mhtml">link</see>.
            </remarks>
            <code lang = "C#">
            //Initialize HTML converter with WebKit rendering engine
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.WebKit);
            //Initialize WebKit converter settings
            WebKitConverterSettings webKitSettings = new WebKitConverterSettings();
            //Set WebKit path
            webKitSettings.WebKitPath = @"/QtBinaries/";
            //Assign WebKit settings to HTML converter
            htmlConverter.ConverterSettings = webKitSettings;
            //Convert URL to MHTML
            htmlConverter.ConvertToMhtml("http://www.syncfusion.com", "sample.mhtml");
            </code>
            <code lang="VB">
            'Initialize HTML converter with WebKit rendering engine
            Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.WebKit)
            'Initialize WebKit converter settings
            Dim webKitSettings As New WebKitConverterSettings()
            'Set WebKit path
            webKitSettings.WebKitPath = "/QtBinaries/"
            'Assign WebKit settings to HTML converter
            htmlConverter.ConverterSettings = webKitSettings
            'Convert URL to MHTML
            htmlConverter.ConvertToMhtml("http://www.syncfusion.com", "sample.mhtml")
            </code>
            </example>
            <seealso cref="T:Syncfusion.HtmlConverter.WebKitConverterSettings"/> class
        </member>
        <member name="M:Syncfusion.HtmlConverter.HtmlToPdfConverter.ConvertToMhtml(System.String,System.IO.Stream)">
            <summary>
            Converts an URL or local file to MHTML and writes the converted MHTML into a stream.
            </summary>
            <param name="url">The URL or local file path of the HTML document to convert to MHTML.</param>
            <param name= "stream">The stream  of the converted MHTML file.</param>
            <remarks>
            To know more details about HTML to MHTML conversion, refer this 
            <see href="https://help.syncfusion.com/file-formats/pdf/working-with-document-conversions#html-to-mhtml">link</see>.
            </remarks>
            <example>
            <code lang = "C#">
            Initialize HTML converter with WebKit rendering engine
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.WebKit);
            //Initialize WebKit converter settings
            WebKitConverterSettings webKitSettings = new WebKitConverterSettings();
            //Set WebKit path
            webKitSettings.WebKitPath = @"/QtBinaries/";
            //Assign WebKit settings to HTML converter
            htmlConverter.ConverterSettings = webKitSettings;
            MemoryStream stream = new MemoryStream();
            //Convert URL to MHTML
            htmlConverter.ConvertToMhtml("http://www.syncfusion.com", stream);
            using (FileStream output = new FileStream("MyOutput.mhtml", FileMode.Create))
            {
            stream.CopyTo(output);
            }
            stream.Dispose();
            </code>
            <code lang="VB">
            'Initialize HTML converter with WebKit rendering engine
            Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.WebKit)
            'Initialize WebKit converter settings
            Dim webKitSettings As New WebKitConverterSettings()
            'Set WebKit path
            webKitSettings.WebKitPath = "/QtBinaries/"
            'Assign WebKit settings to HTML converter
            htmlConverter.ConverterSettings = webKitSettings
            Dim stream As New MemoryStream()
            'Convert URL to MHTML
            htmlConverter.ConvertToMhtml("http://www.syncfusion.com", stream)
            File.WriteAllBytes("Sample.mhtml", stream.ToArray())
            stream.Dispose()
            </code>
            </example>
            <seealso cref="T:Syncfusion.HtmlConverter.WebKitConverterSettings"/> class
        </member>
        <member name="M:Syncfusion.HtmlConverter.HtmlToPdfConverter.ConvertToSvg(System.String,System.String)">
            <summary>
            Converts an URL or local file to SVG and writes the converted SVG into a file.
            </summary>
            <param name="url">The URL or local file path of the HTML document to convert to SVG.</param>
            <param name= "outputPath">The path of the converted SVG file</param>
            <remarks>
            To know more details about HTML to SVG conversion, refer this 
            <see href="https://help.syncfusion.com/file-formats/pdf/working-with-document-conversions#html-to-svg">link</see>.
            </remarks>
            <example>
            <code lang = "C#">
            //Initialize HTML converter with WebKit rendering engine
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.WebKit);
            WebKitConverterSettings webKitSettings = new WebKitConverterSettings();
            //Set WebKit path
            webKitSettings.WebKitPath = @"/QtBinaries/";
            //Assign WebKit settings to HTML converter
            htmlConverter.ConverterSettings = webKitSettings;
            //Convert URL to SVG
            htmlConverter.ConvertToSvg("http://www.syncfusion.com", "sample.svg");
            </code>
            <code lang="VB">
            'Initialize HTML converter with WebKit rendering engine
            Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.WebKit)
            Dim webKitSettings As New WebKitConverterSettings()
            'Set WebKit path
            webKitSettings.WebKitPath = "/QtBinaries/"
            'Assign WebKit settings to HTML converter
            htmlConverter.ConverterSettings = webKitSettings
            'Convert URL to SVG
            htmlConverter.ConvertToSvg("http://www.syncfusion.com", "sample.svg")
            </code>
            </example>
            <seealso cref="T:Syncfusion.HtmlConverter.WebKitConverterSettings"/> class
        </member>
        <member name="M:Syncfusion.HtmlConverter.HtmlToPdfConverter.ConvertToSvg(System.String,System.IO.Stream)">
            <summary>
            Converts an URL or local file to SVG and writes the converted SVG into a stream.
            </summary>
            <param name="url">The URL or local file path of the HTML document to convert to SVG.</param>
            <param name= "outputStream">The stream  of the converted SVG file.</param>
            <remarks>
            To know more details about HTML to Partial SVG conversion, refer this 
            <see href="https://help.syncfusion.com/file-formats/pdf/working-with-document-conversions#html-to-svg">link</see>.
            </remarks>
            <example>
            <code lang = "C#">
            //Initialize HTML converter with WebKit rendering engine
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.WebKit);
            WebKitConverterSettings webKitSettings = new WebKitConverterSettings();
            //Set WebKit path
            webKitSettings.WebKitPath = @"/QtBinaries/";
            //Assign WebKit settings to HTML converter
            htmlConverter.ConverterSettings = webKitSettings;
            Stream stream = new MemoryStream();
            //Convert URL to SVG
            htmlConverter.ConvertToSvg(url, stream);
            using (System.IO.FileStream output = new System.IO.FileStream(@"C:\MyOutput.svg", FileMode.Create))
            {
                stream.CopyTo(output);
            }
            stream.Dispose();
            </code>
            <code lang="VB">
            'Initialize HTML converter with WebKit rendering engine
            Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.WebKit)
            'Initialize WebKit converter settings
            Dim webKitSettings As New WebKitConverterSettings()
            'Set WebKit path
            webKitSettings.WebKitPath = "/QtBinaries/"
            'Assign WebKit settings to HTML converter
            htmlConverter.ConverterSettings = webKitSettings
            Dim stream As New MemoryStream()
            'Convert URL to SVG
            htmlConverter.ConvertToSvg("http://www.syncfusion.com", stream)
            File.WriteAllBytes("Sample.svg", stream.ToArray())
            stream.Dispose()
            </code>
            </example>
            <seealso cref="T:Syncfusion.HtmlConverter.WebKitConverterSettings"/> class
        </member>
        <member name="M:Syncfusion.HtmlConverter.HtmlToPdfConverter.ConvertPartialHtmlToSvg(System.String,System.String,System.String)">
            <summary>
            Converts an URL or local file to SVG and writes the converted SVG into a file.
            </summary>
            <param name="url">The URL or local file path of the HTML document to convert to SVG.</param>
            <param name= "htmlElementID">Used to convert particular part of a HTML page to SVG</param>
            <param name= "outputPath">The path of the converted SVG file</param>
            <remarks>
            To know more details about HTML to Partial SVG conversion, refer this 
            <see href="https://help.syncfusion.com/file-formats/pdf/working-with-document-conversions#partial-webpage-to-svg">link</see>.
            </remarks>
            <example>
            <code lang = "C#">
            //Initialize HTML converter 
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.WebKit);
            // WebKit converter settings
            WebKitConverterSettings webKitSettings = new WebKitConverterSettings();
            //Assign the WebKit binaries path
            webKitSettings.WebKitPath = @"/QtBinaries/";
            //Assign the WebKit settings
            htmlConverter.ConverterSettings = webKitSettings;
            //Convert Partial HTML to SVG
            htmlConverter.ConvertPartialHtmlToSvg("input.html", "pic", "Output.svg");
            </code>
            <code lang="VB">
            'Initialize HTML converter 
            Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.WebKit
            ' WebKit converter settings
            Dim webKitSettings As New WebKitConverterSettings()
            'Assign the WebKit binaries path
            webKitSettings.WebKitPath = "/QtBinaries/"
            'Assign the WebKit settings
            htmlConverter.ConverterSettings = webKitSettings
            'Convert Partial HTML to SVG
            htmlConverter.ConvertPartialHtmlToSvg("input.html", "pic", "Output.svg")
            </code>
            </example>
            <seealso cref="T:Syncfusion.HtmlConverter.WebKitConverterSettings"/> class
        </member>
        <member name="M:Syncfusion.HtmlConverter.HtmlToPdfConverter.ConvertPartialHtmlToSvg(System.String,System.String,System.IO.Stream)">
            <summary>
            Converts an URL or local file to SVG and writes the converted SVG into a stream.
            </summary>
            <param name="url">The URL or local file path of the HTML document to convert to SVG.</param>
            <param name= "htmlElementID">Used to convert particular part of a HTML page to SVG</param>
            <param name= "stream">The stream  of the converted SVG file.</param>
            <remarks>
            To know more details about HTML to Partial SVG conversion, refer this 
            <see href="https://help.syncfusion.com/file-formats/pdf/working-with-document-conversions#partial-webpage-to-svg">link</see>.
            </remarks>
            <example>
            <code lang = "C#">
            //Initialize HTML converter 
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.WebKit);
            // WebKit converter settings
            WebKitConverterSettings webKitSettings = new WebKitConverterSettings();
            //Assign the WebKit binaries path
            webKitSettings.WebKitPath = @"/QtBinaries/";
            //Assign the WebKit settings
            htmlConverter.ConverterSettings = webKitSettings;
            Stream stream = new MemoryStream();
            //Convert Partial HTML to SVG
            htmlConverter.ConvertPartialHtmlToSvg("input.html", "pic", stream);
            using (System.IO.FileStream output = new System.IO.FileStream(@"C:\MyOutput.svg", FileMode.Create))
            {
                stream.CopyTo(output);
            }
            stream.Dispose();
            </code>
            <code lang="VB">
            'Initialize HTML converter 
            Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.WebKit
            ' WebKit converter settings
            Dim webKitSettings As New WebKitConverterSettings()
            'Assign the WebKit binaries path
            webKitSettings.WebKitPath = "/QtBinaries/"
            'Assign the WebKit settings
            htmlConverter.ConverterSettings = webKitSettings
            Dim stream As New MemoryStream()
            'Convert Partial HTML to SVG
            htmlConverter.ConvertPartialHtmlToSvg("input.html", "pic", stream)
            File.WriteAllBytes("Sample.svg", stream.ToArray())
            stream.Dispose()
            </code>
            </example>
            <seealso cref="T:Syncfusion.HtmlConverter.WebKitConverterSettings"/> class
        </member>
        <member name="M:Syncfusion.HtmlConverter.HtmlToPdfConverter.ConvertToImage(System.String)">
            <summary>
            Converts URL to Image
            </summary>
            <param name="url">Path to the Html resource.</param>
            <returns>Image Array</returns>
            <remarks>
            To know more details about HTML to Image conversion, refer this 
            <see href="https://help.syncfusion.com/file-formats/pdf/working-with-document-conversions#html-to-raster-image">link</see>.
            </remarks>
            <example>
            <code lang = "C#">
            //Initialize HTML converter with WebKit rendering engine
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.WebKit);
            WebKitConverterSettings webKitSettings = new WebKitConverterSettings();
            //Set WebKit path
            webKitSettings.WebKitPath = @"/QtBinaries/";
            //Assign WebKit settings to HTML converte
            htmlConverter.ConverterSettings = webKitSettings;
            //Convert URL to Image
            Image[] image = htmlConverter.ConvertToImage("http://www.syncfusion.com");
            //Save the image.
            image[0].Save("Sample.jpg");
            </code>
            <code lang="VB">
            'Initialize HTML converter with WebKit rendering engine
            Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.WebKit)
            Dim webKitSettings As New WebKitConverterSettings()
            'Set WebKit path
            webKitSettings.WebKitPath = "/QtBinaries/"
            'Assign WebKit settings to HTML converter
            htmlConverter.ConverterSettings = webKitSettings
            'Convert URL to Image
            Dim image As Image() = htmlConverter.ConvertToImage("http://www.syncfusion.com ")
            'Save the image
            image(0).Save("Sample.jpg")
            </code>
            </example>
            <seealso cref="T:System.Drawing.Image"/> class
            <seealso cref="T:Syncfusion.HtmlConverter.WebKitConverterSettings"/> class
            <seealso cref="T:Syncfusion.HtmlConverter.BlinkConverterSettings"/> class
            <seealso cref="T:Syncfusion.HtmlConverter.IEConverterSettings"/> class
        </member>
        <member name="M:Syncfusion.HtmlConverter.HtmlToPdfConverter.ConvertToImage(System.String,System.String)">
            <summary>
            Converts HTML string to Image
            </summary>
            <param name="htmlString">Html data.</param>
            <param name="baseUrl">Used to retrieve images, scripts and stylesheets.</param>
            <returns>Image Array</returns>
            <remarks>
            To know more details about HTML string to Image conversion, refer this 
            <see href="https://help.syncfusion.com/file-formats/pdf/working-with-document-conversions#html-string-to-raster-image">link</see>.
            </remarks>
            <example>
            <code lang = "C#">
            string htmlString = "<html><body>Hello World!!!</body></html>";
            string baseURL = "";
            //Initialize HTML converter with WebKit rendering engine
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.WebKit);
            WebKitConverterSettings webKitSettings = new WebKitConverterSettings();
            //Set WebKit path
            webKitSettings.WebKitPath = @"/QtBinaries/";
            //Assign WebKit settings to HTML converter
            htmlConverter.ConverterSettings = webKitSettings;
            //Convert HTML string to Image
            Image[] image = htmlConverter.ConvertToImage(htmlString, baseURL);
            //Save the image.
            image[0].Save("Sample.jpg");
            </code>
            <code lang="VB">
            Dim htmlString As String = "<html><body>Hello World!!!</body></html>
            Dim baseURL As String = ""
            'Initialize HTML converter with WebKit rendering engine
            Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.WebKit)
            Dim webKitSettings As New WebKitConverterSettings()
            'Set WebKit path
            webKitSettings.WebKitPath = "/QtBinaries/"
            'Assign WebKit settings to HTML converter
            htmlConverter.ConverterSettings = webKitSettings
            'Convert HTML string to Image
            Dim image As Image() = htmlConverter.ConvertToImage(htmlString, baseURL)
            'Save the image.
            image(0).Save("Sample.jpg")
            </code>
            </example>
            <seealso cref="T:System.Drawing.Image"/> class
            <seealso cref="T:Syncfusion.HtmlConverter.WebKitConverterSettings"/> class
            <seealso cref="T:Syncfusion.HtmlConverter.BlinkConverterSettings"/> class
            <seealso cref="T:Syncfusion.HtmlConverter.IEConverterSettings"/> class
        </member>
        <member name="M:Syncfusion.HtmlConverter.HtmlToPdfConverter.ConvertPartialHtmlToImage(System.String,System.String)">
            <summary>
            Converts URL to Image
            </summary>
            <param name="url">Path to the Html resource.</param>
            <param name="htmlElementID">Used to convert particular part of a HTML page to image</param>
            <returns>Image Array</returns>
            <remarks>
            To know more details about partial HTML to Image conversion, refer this 
            <see href="https://help.syncfusion.com/file-formats/pdf/working-with-document-conversions#partial-webpage-to-raster-image">link</see>.
            </remarks>
            <example>
            <code lang = "C#">
            //Initialize HTML converter 
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.WebKit);
            // WebKit converter settings
            WebKitConverterSettings webKitSettings = new WebKitConverterSettings();
            //Assign the WebKit binaries path
            webKitSettings.WebKitPath = @"/QtBinaries/";
            //Assign the WebKit settings
            htmlConverter.ConverterSettings = webKitSettings;
            //Convert Partial HTML to Image
            Image[] image = htmlConverter.ConvertPartialHtmlToImage("input.html", "pic");
            //Save Image
            image[0].Save("Output.jpg");
            </code>
            <code lang="VB">
            'Initialize HTML converter 
            Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.WebKit)
            ' WebKit converter settings
            Dim webKitSettings As New WebKitConverterSettings()
            'Assign the WebKit binaries path
            webKitSettings.WebKitPath = "/QtBinaries/"
            'Assign the WebKit settings
            htmlConverter.ConverterSettings = webKitSettings
            'Convert Partial HTML to Image
            Dim image As Image() = htmlConverter.ConvertPartialHtmlToImage("input.html", "pic")
            'Save Image
            image(0).Save("Output.jpg")
            </code>
            </example>
            <seealso cref="T:System.Drawing.Image"/> class
            <seealso cref="T:Syncfusion.HtmlConverter.WebKitConverterSettings"/> class
        </member>
        <!-- Badly formed XML comment ignored for member "M:Syncfusion.HtmlConverter.HtmlToPdfConverter.ConvertPartialHtmlToImage(System.String,System.String,System.String)" -->
        <member name="M:Syncfusion.HtmlConverter.HtmlToPdfConverter.UpdateBlinkSettings(Syncfusion.HtmlConverter.BlinkConverterSettings)">
            <summary>
            Updating Blink converter settings
            </summary>
        </member>
        <member name="T:Syncfusion.HtmlConverter.IHtmlConverterSettings">
            <summary>
            Interface for Rendering engine settings
            </summary>  
            <example>
            <code lang = "C#">
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.WebKit);
            //Initialize the converter settings
            IHtmlConverterSettings converterSettings = new WebKitConverterSettings();
            //Set WebKitPath
            (converterSettings as WebKitConverterSettings).WebKitPath = @"/QtBinaries/";
            //Assign converter settings to HTML converter
            htmlConverter.ConverterSettings = converterSettings;
            //Convert URL to PDF
            PdfDocument document = htmlConverter.Convert("http://www.google.com");
            //Save the document.
            document.Save("Sample.pdf");
            document.Close();
            </code>
            <code lang = "VB">
            Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.WebKit)
            'Initialize the converter settings
            Dim converterSettings As IHtmlConverterSettings = New WebKitConverterSettings()
            'Set WebKitPath
            TryCast(converterSettings, WebKitConverterSettings).WebKitPath = "/QtBinaries/"
            'Assign converter settings to HTML converter
            htmlConverter.ConverterSettings = converterSettings
            'Convert URL to PDF
            Dim document As PdfDocument = htmlConverter.Convert("http://www.google.com")
            'Save the document.
            document.Save("Sample.pdf")
            document.Close()
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.HtmlConverter.IHtmlConverterSettings.TempPath">
            <summary>
            Gets or sets the temp path where the temporary operations are performed if any;By default %temp%
            </summary>
            <example>
            <code lang = "C#">
            //Initialize HTML to PDF converter
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.WebKit);
            //Initialize the converter settings
            IHtmlConverterSettings converterSettings = new WebKitConverterSettings();
            //Set WebKitPath
            (converterSettings as WebKitConverterSettings).WebKitPath = @"/QtBinaries/";
            //Set temporary path for conversion
            converterSettings.TempPath = @"C:/HtmlConversion/Temp/";
            //Assign converter settings to HTML converter
            htmlConverter.ConverterSettings = converterSettings;
            //Convert URL to PDF
            PdfDocument document = htmlConverter.Convert("http://www.google.com");
            //Save the document.
            document.Save("Sample.pdf");
            document.Close();
            </code>
            <code lang = "VB">
            'Initialize HTML to PDF converter
            Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.WebKit)
            'Initialize the converter settings
            Dim converterSettings As IHtmlConverterSettings = New WebKitConverterSettings()
            'Set WebKitPath
            TryCast(converterSettings, WebKitConverterSettings).WebKitPath = "/QtBinaries/"
            'Set temporary path for conversion
            converterSettings.TempPath = "C:/HtmlConversion/Temp/"
            'Assign converter settings to HTML converter
            htmlConverter.ConverterSettings = converterSettings
            'Convert URL to PDF
            Dim document As PdfDocument = htmlConverter.Convert("http://www.google.com")
            'Save the document.
            document.Save("Sample.pdf")
            document.Close()
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.HtmlConverter.IHtmlConverterSettings.AdditionalDelay">
            <summary>
            Gets or sets the additional delay to load JavaScript; Unit is Milliseconds; By default 0
            </summary>
            <example>
            <code lang = "C#">
            //Initialize HTML to PDF converter
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.WebKit);
            //Initialize the converter settings
            IHtmlConverterSettings converterSettings = new WebKitConverterSettings();
            //Set WebKitPath
            (converterSettings as WebKitConverterSettings).WebKitPath = @"/QtBinaries/";
            //Set AdditionalDelay for conversion
            converterSettings.AdditionalDelay = 2000;
            //Assign converter settings to HTML converter
            htmlConverter.ConverterSettings = converterSettings;
            //Convert URL to PDF
            PdfDocument document = htmlConverter.Convert("http://www.google.com");
            //Save the document.
            document.Save("Sample.pdf");
            document.Close();
            </code>
            <code lang = "VB">
            'Initialize HTML to PDF converter
            Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.WebKit)
            'Initialize the converter settings
            Dim converterSettings As IHtmlConverterSettings = New WebKitConverterSettings()
            'Set WebKitPath
            TryCast(converterSettings, WebKitConverterSettings).WebKitPath = "/QtBinaries/"
            'Set AdditionalDelay for conversion
            converterSettings.AdditionalDelay = 2000
            'Assign converter settings to HTML converter
            htmlConverter.ConverterSettings = converterSettings
            'Convert URL to PDF
            Dim document As PdfDocument = htmlConverter.Convert("http://www.google.com")
            'Save the document.
            document.Save("Sample.pdf")
            document.Close()
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.HtmlConverter.IHtmlConverterSettings.EnableHyperLink">
            <summary>
            Gets or Sets a value indicating whether to preserve the live-links in the converted document or not;By default true
            </summary>
            <example>
            <code lang = "C#">
            //Initialize HTML to PDF converter
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.WebKit);
            //Initialize the converter settings
            IHtmlConverterSettings converterSettings = new WebKitConverterSettings();
            //Set WebKitPath
            (converterSettings as WebKitConverterSettings).WebKitPath = @"/QtBinaries/";
            //Set EnableHyperLink
            converterSettings.EnableHyperLink = true;
            //Assign converter settings to HTML converter
            htmlConverter.ConverterSettings = converterSettings;
            //Convert URL to PDF
            PdfDocument document = htmlConverter.Convert("http://www.google.com");
            //Save the document.
            document.Save("Sample.pdf");
            document.Close();
            </code>
            <code lang = "VB">
            'Initialize HTML to PDF converter
            Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.WebKit)
            'Initialize the converter settings
            Dim converterSettings As IHtmlConverterSettings = New WebKitConverterSettings()
            'Set WebKitPath
            TryCast(converterSettings, WebKitConverterSettings).WebKitPath = "/QtBinaries/"
            'Set EnableHyperLink
            converterSettings.EnableHyperLink = True
            'Assign converter settings to HTML converter
            htmlConverter.ConverterSettings = converterSettings
            'Convert URL to PDF
            Dim document As PdfDocument = htmlConverter.Convert("http://www.google.com")
            'Save the document.
            document.Save("Sample.pdf")
            document.Close()
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.HtmlConverter.IHtmlConverterSettings.EnableJavaScript">
            <summary>
            Gets or Sets a value indicating whether to Enable/Disable JavaScripts in the webpage; By default true
            </summary>
            <example>
            <code lang = "C#">
            //Initialize HTML to PDF converter
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.WebKit);
            //Initialize the converter settings
            IHtmlConverterSettings converterSettings = new WebKitConverterSettings();
            //Set WebKitPath
            (converterSettings as WebKitConverterSettings).WebKitPath = @"/QtBinaries/";
            //Set EnableJavaScript
            converterSettings.EnableJavaScript = true;
            //Assign converter settings to HTML converter
            htmlConverter.ConverterSettings = converterSettings;
            //Convert URL to PDF
            PdfDocument document = htmlConverter.Convert("http://www.google.com");
            //Save the document.
            document.Save("Sample.pdf");
            document.Close();
            </code>
            <code lang = "VB">
            'Initialize HTML to PDF converter
            Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.WebKit)
            'Initialize the converter settings
            Dim converterSettings As IHtmlConverterSettings = New WebKitConverterSettings()
            'Set WebKitPath
            TryCast(converterSettings, WebKitConverterSettings).WebKitPath = "/QtBinaries/"
            'Set EnableJavaScript
            converterSettings.EnableJavaScript = True
            'Assign converter settings to HTML converter
            htmlConverter.ConverterSettings = converterSettings
            'Convert URL to PDF
            Dim document As PdfDocument = htmlConverter.Convert("http://www.google.com")
            'Save the document.
            document.Save("Sample.pdf")
            document.Close()
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.HtmlConverter.IHtmlConverterSettings.Password">
            <summary>
            Gets or Sets the password; By default ""
            </summary>
            <example>
            <code lang = "C#">
            //Initialize HTML to PDF converter
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.WebKit);
            //Initialize the converter settings
            IHtmlConverterSettings converterSettings = new WebKitConverterSettings();
            //Set WebKitPath
            (converterSettings as WebKitConverterSettings).WebKitPath = @"/QtBinaries/";
            //Set username and password for windows authentication
            converterSettings.Username = "username";
            converterSettings.Password = "password";
            //Assign converter settings to HTML converter
            htmlConverter.ConverterSettings = converterSettings;
            //Convert URL to PDF
            PdfDocument document = htmlConverter.Convert("http://www.google.com");
            //Save the document.
            document.Save("Sample.pdf");
            document.Close();
            </code>
            <code lang = "VB">
            'Initialize HTML to PDF converter
            Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.WebKit)
            'Initialize the converter settings
            Dim converterSettings As IHtmlConverterSettings = New WebKitConverterSettings()
            'Set WebKitPath
            TryCast(converterSettings, WebKitConverterSettings).WebKitPath = "/QtBinaries/"
            'Set username and password for windows authentication
            converterSettings.Username = "username"
            converterSettings.Password = "password"
            'Assign converter settings to HTML converter
            htmlConverter.ConverterSettings = converterSettings
            'Convert URL to PDF
            Dim document As PdfDocument = htmlConverter.Convert("http://www.google.com")
            'Save the document.
            document.Save("Sample.pdf")
            document.Close()
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.HtmlConverter.IHtmlConverterSettings.Username">
            <summary>
            Gets or Sets the Username; By default ""
            </summary>
            <example>
            <code lang = "C#">
            //Initialize HTML to PDF converter
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.WebKit);
            //Initialize the converter settings
            IHtmlConverterSettings converterSettings = new WebKitConverterSettings();
            //Set WebKitPath
            (converterSettings as WebKitConverterSettings).WebKitPath = @"/QtBinaries/";
            //Set username and password for windows authentication
            converterSettings.Username = "username";
            converterSettings.Password = "password";
            //Assign converter settings to HTML converter
            htmlConverter.ConverterSettings = converterSettings;
            //Convert URL to PDF
            PdfDocument document = htmlConverter.Convert("http://www.google.com");
            //Save the document.
            document.Save("Sample.pdf");
            document.Close();
            </code>
            <code lang = "VB">
            'Initialize HTML to PDF converter
            Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.WebKit)
            'Initialize the converter settings
            Dim converterSettings As IHtmlConverterSettings = New WebKitConverterSettings()
            'Set WebKitPath
            TryCast(converterSettings, WebKitConverterSettings).WebKitPath = "/QtBinaries/"
            'Set username and password for windows authentication
            converterSettings.Username = "username"
            converterSettings.Password = "password"
            'Assign converter settings to HTML converter
            htmlConverter.ConverterSettings = converterSettings
            'Convert URL to PDF
            Dim document As PdfDocument = htmlConverter.Convert("http://www.google.com")
            'Save the document.
            document.Save("Sample.pdf")
            document.Close()
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.HtmlConverter.IHtmlConverterSettings.Margin">
            <summary>
            Gets or sets the margins to the PDF document; By default all margins are 0
            </summary>
            <example>
            <code lang = "C#">
            //Initialize HTML to PDF converter.
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.WebKit);
            //Initialize the WebKit converter settings.
            WebKitConverterSettings webKitSettings = new WebKitConverterSettings();
            //Set WebKitPath
            webKitSettings.WebKitPath = @"/QtBinaries/";
            //Set margins
            webKitSettings.Margin.All = 20;
            //Assign WebKit settings to HTML converter.
            htmlConverter.ConverterSettings = webKitSettings;
            //Convert HTML string to PDF.
            PdfDocument document = htmlConverter.Convert("https://www.google.com");
            //Save the document.
            document.Save("Sample.pdf");
            document.Close();
            </code>
            <code lang = "VB">
            'Initialize HTML to PDF converter.
            Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.WebKit)
            'Initialize the WebKit converter settings.
            Dim webKitSettings As New WebKitConverterSettings()
            'Set WebKitPath
            webKitSettings.WebKitPath = "/QtBinaries/"
            'Set margins
            webKitSettings.Margin.All = 20
            'Assign WebKit settings to HTML converter.
            htmlConverter.ConverterSettings = webKitSettings
            'Convert HTML string to PDF.
            Dim document As PdfDocument = htmlConverter.Convert("https://www.google.com")
            'Save the document.
            document.Save("Sample.pdf")
            document.Close()
            </code>
            </example>
            <seealso cref="T:Syncfusion.Pdf.Graphics.PdfMargins"/> class
        </member>
        <member name="P:Syncfusion.HtmlConverter.IHtmlConverterSettings.PdfHeader">
            <summary>
            Gets or sets the Header to the PDF document; By default null
            </summary>
            <example>
            <code lang = "C#">
            //Initialize HTML to PDF converter
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.WebKit);
            //Initialize the WebKit converter settings
            WebKitConverterSettings webKitSettings = new WebKitConverterSettings();
            //Set WebKitPath
            webKitSettings.WebKitPath = "/QtBinaries/";
            //Create PDF page template element for header with bounds.
            PdfPageTemplateElement header = new PdfPageTemplateElement(new RectangleF(0, 0, webKitSettings.PdfPageSize.Width, 50));
            //Create font and brush for header element.
            PdfFont font = new PdfStandardFont(PdfFontFamily.Helvetica, 7);
            PdfBrush brush = new PdfSolidBrush(Color.Black);
            //Draw the header string in header template element. 
            header.Graphics.DrawString("This is header", font, brush, PointF.Empty);
            //Assign the header element to PdfHeader of WebKit settings.
            webKitSettings.PdfHeader = header;
            //Assign WebKit settings to HTML converter
            htmlConverter.ConverterSettings = webKitSettings;
            //Convert URL to PDF
            PdfDocument document = htmlConverter.Convert("https://www.google.com");
            //Save the document.
            document.Save("Sample.pdf");
            document.Close();
            </code>
            <code lang = "VB">
            'Initialize HTML to PDF converter
            Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.WebKit)
            'Initialize the WebKit converter settings
            Dim webKitSettings As New WebKitConverterSettings()
            'Set WebKitPath
            webKitSettings.WebKitPath = "/QtBinaries/"
            'Create PDF page template element for header with bounds.
            Dim header As New PdfPageTemplateElement(New RectangleF(0, 0, webKitSettings.PdfPageSize.Width, 50))
            'Create font and brush for header element.
            Dim font As PdfFont = New PdfStandardFont(PdfFontFamily.Helvetica, 7)
            Dim brush As PdfBrush = New PdfSolidBrush(Color.Black)
            'Draw the header string in header template element. 
            header.Graphics.DrawString("This is header", font, brush, PointF.Empty)
            'Assign the header element to PdfHeader of WebKit settings.
            webKitSettings.PdfHeader = header
            'Assign WebKit settings to HTML converter
            htmlConverter.ConverterSettings = webKitSettings
            'Convert URL to PDF
            Dim document As PdfDocument = htmlConverter.Convert("https://www.google.com")
            'Save the document.
            document.Save("Sample.pdf")
            document.Close()
            </code>
            </example>
            <seealso cref="T:Syncfusion.Pdf.PdfPageTemplateElement"/> class
        </member>
        <member name="P:Syncfusion.HtmlConverter.IHtmlConverterSettings.PdfFooter">
            <summary>
            Gets or sets the Footer to the PDF document; By default null
            </summary>
            <example>
            <code lang = "C#">
            //Initialize HTML to PDF converter
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.WebKit);
            //Initialize the WebKit converter settings
            WebKitConverterSettings webKitSettings = new WebKitConverterSettings();
            //Set WebKitPath
            webKitSettings.WebKitPath = "/QtBinaries/";
            //Create PDF page template element for footer with bounds.
            PdfPageTemplateElement footer = new PdfPageTemplateElement(new RectangleF(0, 0, webKitSettings.PdfPageSize.Width, 50));
            //Create font and brush for header element.
            PdfFont font = new PdfStandardFont(PdfFontFamily.Helvetica, 7);
            PdfBrush brush = new PdfSolidBrush(Color.Black);
            //Draw the footer string in footer template element. 
            footer.Graphics.DrawString("This is footer", font, brush, PointF.Empty);
            //Assign the footer element to PdfFooter of WebKit settings.
            webKitSettings.PdfFooter = footer;
            //Assign WebKit settings to HTML converter
            htmlConverter.ConverterSettings = webKitSettings;
            //Convert URL to PDF
            PdfDocument document = htmlConverter.Convert("https://www.google.com");
            //Save the document.
            document.Save("Sample.pdf");
            document.Close();
            </code>
            <code lang = "VB">
            'Initialize HTML to PDF converter
            Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.WebKit)
            'Initialize the WebKit converter settings
            Dim webKitSettings As New WebKitConverterSettings()
            'Set WebKitPath
            webKitSettings.WebKitPath = "/QtBinaries/"
            'Create PDF page template element for footer with bounds.
            Dim footer As New PdfPageTemplateElement(New RectangleF(0, 0, webKitSettings.PdfPageSize.Width, 50))
            'Create font and brush for header element.
            Dim font As PdfFont = New PdfStandardFont(PdfFontFamily.Helvetica, 7)
            Dim brush As PdfBrush = New PdfSolidBrush(Color.Black)
            'Draw the footer string in footer template element. 
            footer.Graphics.DrawString("This is footer", font, brush, PointF.Empty)
            'Assign the footer element to PdfFooter of WebKit settings.
            webKitSettings.PdfFooter = footer
            'Assign WebKit settings to HTML converter
            htmlConverter.ConverterSettings = webKitSettings
            'Convert URL to PDF
            Dim document As PdfDocument = htmlConverter.Convert("https://www.google.com")
            'Save the document.
            document.Save("Sample.pdf")
            document.Close()
            </code>
            </example>
            <seealso cref="T:Syncfusion.Pdf.PdfPageTemplateElement"/> class
        </member>
        <member name="P:Syncfusion.HtmlConverter.IHtmlConverterSettings.Orientation">
            <summary>
            Gets or sets the Orientation of the PDF document; By default Portrait
            </summary>
            <example>
            <code lang = "C#">
            //Initialize HTML to PDF converter
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.WebKit);
            //Initialize the WebKit converter settings
            WebKitConverterSettings webKitSettings = new WebKitConverterSettings();
            //Set WebKitPath
            webKitSettings.WebKitPath = "/QtBinaries/";
            //Set PDF page orientation
            webKitSettings.Orientation = PdfPageOrientation.Landscape;
            //Assign WebKit settings to HTML converter
            htmlConverter.ConverterSettings = webKitSettings;
            //Convert URL to PDF
            PdfDocument document = htmlConverter.Convert("https://www.google.com");
            //Save the document.
            document.Save("Sample.pdf");
            document.Close();
            </code>
            <code lang = "VB">
            'Initialize HTML to PDF converter
            Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.WebKit)
            'Initialize the WebKit converter settings
            Dim webKitSettings As New WebKitConverterSettings()
            'Set WebKitPath
            webKitSettings.WebKitPath = "/QtBinaries/"
            'Set PDF page orientation
            webKitSettings.Orientation = PdfPageOrientation.Landscape
            'Assign WebKit settings to HTML converter
            htmlConverter.ConverterSettings = webKitSettings
            'Convert URL to PDF
            Dim document As PdfDocument = htmlConverter.Convert("https://www.google.com")
            'Save the document.
            document.Save("Sample.pdf")
            document.Close()
            </code>
            </example>
            <seealso cref="T:Syncfusion.Pdf.PdfPageOrientation"/> enum
        </member>
        <member name="P:Syncfusion.HtmlConverter.IHtmlConverterSettings.PdfPageSize">
            <summary>
            Gets or sets the size of the PDF page; By default A4 size
            </summary>
            <example>
            <code lang = "C#">
            //Initialize HTML to PDF converter
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.WebKit);
            //Initialize the WebKit converter settings
            WebKitConverterSettings webKitSettings = new WebKitConverterSettings();
            //Set WebKitPath
            webKitSettings.WebKitPath = "/QtBinaries/";
            //Set PDF page size
            webKitSettings.PdfPageSize = new SizeF(595, 842);
            //Assign WebKit settings to HTML converter
            htmlConverter.ConverterSettings = webKitSettings;
            //Convert URL to PDF
            PdfDocument document = htmlConverter.Convert("https://www.google.com");
            //Save the document.
            document.Save("Sample.pdf");
            document.Close();
            </code>
            <code lang = "VB">
            'Initialize HTML to PDF converter
            Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.WebKit)
            'Initialize the WebKit converter settings
            Dim webKitSettings As New WebKitConverterSettings()
            'Set WebKitPath
            webKitSettings.WebKitPath = "/QtBinaries/"
            'Set PDF page size
            webKitSettings.PdfPageSize = New SizeF(595, 842)
            'Assign WebKit settings to HTML converter
            htmlConverter.ConverterSettings = webKitSettings
            'Convert URL to PDF
            Dim document As PdfDocument = htmlConverter.Convert("https://www.google.com")
            'Save the document.
            document.Save("Sample.pdf")
            document.Close()
            </code>
            </example>
            <seealso cref="T:Syncfusion.Pdf.PdfPageSize"/>
        </member>
        <member name="P:Syncfusion.HtmlConverter.IHtmlConverterSettings.AspectRatio">
            <summary>
            Gets or sets the aspect ratio; By default None
            </summary>
            <example>
            <code lang = "C#">
            //Initialize HTML to PDF converter
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.WebKit);
            //Initialize the WebKit converter settings
            WebKitConverterSettings webKitSettings = new WebKitConverterSettings();
            //Set WebKitPath
            webKitSettings.WebKitPath = "/QtBinaries/";
            //Set AspectRatio
            webKitSettings.AspectRatio = AspectRatio.None;
            //Assign WebKit settings to HTML converter
            htmlConverter.ConverterSettings = webKitSettings;
            //Convert URL to PDF
            PdfDocument document = htmlConverter.Convert("https://www.google.com");
            //Save the document.
            document.Save("Sample.pdf");
            document.Close();
            </code>
            <code lang = "VB">
            'Initialize HTML to PDF converter
            Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.WebKit)
            'Initialize the WebKit converter settings
            Dim webKitSettings As New WebKitConverterSettings()
            'Set WebKitPath
            webKitSettings.WebKitPath = "/QtBinaries/"
            'Set AspectRatio
            webKitSettings.AspectRatio = AspectRatio.None
            'Assign WebKit settings to HTML converter
            htmlConverter.ConverterSettings = webKitSettings
            'Convert URL to PDF
            Dim document As PdfDocument = htmlConverter.Convert("https://www.google.com")
            'Save the document.
            document.Save("Sample.pdf")
            document.Close()
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.HtmlConverter.IHtmlConverterSettings.PageRotateAngle">
            <summary>
            Gets or sets the number of degrees by which the page should be rotated clockwise when displayed or printed.
            </summary>
            <example>
            <code lang = "C#">
            //Initialize HTML to PDF converter
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.WebKit);
            //Initialize the WebKit converter settings
            WebKitConverterSettings webKitSettings = new WebKitConverterSettings();
            //Set WebKitPath
            webKitSettings.WebKitPath = "/QtBinaries/";
            //Set PDF page rotation angle
            webKitSettings.PageRotateAngle = PdfPageRotateAngle.RotateAngle90;
            //Assign WebKit settings to HTML converter
            htmlConverter.ConverterSettings = webKitSettings;
            //Convert URL to PDF
            PdfDocument document = htmlConverter.Convert("https://www.google.com");
            //Save the document.
            document.Save("Sample.pdf");
            document.Close();
            </code>
            <code lang = "VB">
            'Initialize HTML to PDF converter
            Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.WebKit)
            'Initialize the WebKit converter settings
            Dim webKitSettings As New WebKitConverterSettings()
            'Set WebKitPath
            webKitSettings.WebKitPath = "/QtBinaries/"
            'Set PDF page rotation angle
            webKitSettings.PageRotateAngle = PdfPageRotateAngle.RotateAngle90
            'Assign WebKit settings to HTML converter
            htmlConverter.ConverterSettings = webKitSettings
            'Convert URL to PDF
            Dim document As PdfDocument = htmlConverter.Convert("https://www.google.com")
            'Save the document.
            document.Save("Sample.pdf")
            document.Close()
            </code>
            </example>
            <seealso cref="T:Syncfusion.Pdf.PdfPageRotateAngle"/>
        </member>
        <member name="P:Syncfusion.HtmlConverter.IHtmlConverterSettings.SplitTextLines">
            <summary>
            Gets or sets a value indicating whether [split text lines].
            </summary>
            <example>
            <code lang = "C#">
            //Initialize HTML to PDF converter
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.WebKit);
            //Initialize the converter settings
            IHtmlConverterSettings converterSettings = new WebKitConverterSettings();
            //Set WebKitPath
            (converterSettings as WebKitConverterSettings).WebKitPath = @"/QtBinaries/";
            //Set split text lines to false to avoid text split between PDF pages.
            converterSettings.SplitTextLines = false;
            //Assign converter settings to HTML converter
            htmlConverter.ConverterSettings = converterSettings;
            //Convert URL to PDF
            PdfDocument document = htmlConverter.Convert("http://www.google.com");
            //Save the document.
            document.Save("Sample.pdf");
            document.Close();
            </code>
            <code lang = "VB">
            'Initialize HTML to PDF converter
            Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.WebKit)
            'Initialize the converter settings
            Dim converterSettings As IHtmlConverterSettings = New WebKitConverterSettings()
            'Set WebKitPath
            TryCast(converterSettings, WebKitConverterSettings).WebKitPath = "/QtBinaries/"
            'Set split text lines to false to avoid text split between PDF pages.
            converterSettings.SplitTextLines = False
            'Assign converter settings to HTML converter
            htmlConverter.ConverterSettings = converterSettings
            'Convert URL to PDF
            Dim document As PdfDocument = htmlConverter.Convert("http://www.google.com")
            'Save the document.
            document.Save("Sample.pdf")
            document.Close()
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.HtmlConverter.IHtmlConverterSettings.SplitImages">
            <summary>
            Gets or sets a value indicating whether [split images].
            </summary>
            <example>
            <code lang = "C#">
            //Initialize HTML to PDF converter
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.WebKit);
            //Initialize the converter settings
            IHtmlConverterSettings converterSettings = new WebKitConverterSettings();
            //Set WebKitPath
            (converterSettings as WebKitConverterSettings).WebKitPath = @"/QtBinaries/";
            //Set split images to false to avoid image split between PDF pages.
            converterSettings.SplitImages = false;
            //Assign converter settings to HTML converter
            htmlConverter.ConverterSettings = converterSettings;
            //Convert URL to PDF
            PdfDocument document = htmlConverter.Convert("http://www.google.com");
            //Save the document.
            document.Save("Sample.pdf");
            document.Close();
            </code>
            <code lang = "VB">
            'Initialize HTML to PDF converter
            Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.WebKit)
            'Initialize the converter settings
            Dim converterSettings As IHtmlConverterSettings = New WebKitConverterSettings()
            'Set WebKitPath
            TryCast(converterSettings, WebKitConverterSettings).WebKitPath = "/QtBinaries/"
            'Set split images to false to avoid image split between PDF pages.
            converterSettings.SplitImages = False
            'Assign converter settings to HTML converter
            htmlConverter.ConverterSettings = converterSettings
            'Convert URL to PDF
            Dim document As PdfDocument = htmlConverter.Convert("http://www.google.com")
            'Save the document.
            document.Save("Sample.pdf")
            document.Close()
            </code>
            </example>
        </member>
        <member name="T:Syncfusion.HtmlConverter.CookieCollection">
            <summary>
             Class which represents collection of cookies name and value pair of data.
            </summary>  
            <remarks>
            To know more details about cookies, refer this 
            <see href="https://help.syncfusion.com/file-formats/pdf/convert-html-to-pdf/webkit#form-authentication">link</see>.
            </remarks>
            <example>
            <code lang = "C#">
            Initialize HTML converter
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.WebKit);
            //Initialize WebKit converter settings
            WebKitConverterSettings webKitSettings = new WebKitConverterSettings();
            //Assign the WebKit path
            webKitSettings.WebKitPath = @"/QtBinaries/";
            //Initialize cookie collection and add the cookies name and value. 
            CookieCollection cookieCollection = new CookieCollection();
            cookieCollection.Add("CookieName1", "CookieValue1");
            cookieCollection.Add("CookieName2", "CookieValue2");
            //Assign the cookie collection to the webkit settings.
            webKitSettings.Cookies = cookieCollection;
            //Assign the WebKit settings
            htmlConverter.ConverterSettings = webKitSettings;
            //Convert url to pdf
            PdfDocument document = htmlConverter.Convert("https://www.google.com");
            //Save and close the PDF document
            document.Save("Output.pdf");
            document.Close(true);
            </code>
            <code lang= "VB">
            'Initialize HTML converter
            Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.WebKit)
            'Initialize WebKit converter settings
            Dim webKitSettings As New WebKitConverterSettings()
            'Assign the WebKit path
            webKitSettings.WebKitPath = "/QtBinaries/"
            'Initialize cookie collection and add the cookies name and value. 
            Dim cookieCollection As New CookieCollection()
            cookieCollection.Add("CookieName1", "CookieValue1")
            cookieCollection.Add("CookieName2", "CookieValue2")
            'Assign the cookie collection to the webkit settings.
            webKitSettings.Cookies = cookieCollection
            'Assign the WebKit settings
            htmlConverter.ConverterSettings = webKitSettings
            'Convert url to pdf
            Dim document As PdfDocument = htmlConverter.Convert("https://www.google.com")
            'Save and close the PDF document
            document.Save("Output.pdf")
            document.Close(True)
            </code>
            </example>
            <seealso cref="T:Syncfusion.HtmlConverter.WebKitConverterSettings"/> class
            <seealso cref="T:Syncfusion.HtmlConverter.BlinkConverterSettings"/> class
        </member>
        <member name="T:Syncfusion.HtmlConverter.HttpPostFieldCollection">
             <summary>
            Represents a collection of the HTTP POST parameters. 
             </summary>
             <remarks>
             To know more details about HTTP Get and POST, refer this 
             <see href="https://help.syncfusion.com/file-formats/pdf/convert-html-to-pdf/webkit#http-get-and-post">link</see>.
             </remarks>
             <example>
             <code lang = "C#">
             Initialize HTML converter
             HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.WebKit);
             //Initialize WebKit converter settings
             WebKitConverterSettings webKitSettings = new WebKitConverterSettings();
             //Assign the WebKit path
             webKitSettings.WebKitPath = @"/QtBinaries/";
             //Initialize HTTP Post collection and add the name and value to POST. 
             HttpPostFieldCollection httpPostCollection = new HttpPostFieldCollection();
             httpPostCollection.Add("firstName", "Andrew");
             httpPostCollection.Add("lastName", "Fuller");
             //Assign the HTTP Post field collection to the webkit settings.
             webKitSettings.HttpPostFields = httpPostCollection;
             //Assign the WebKit settings
             htmlConverter.ConverterSettings = webKitSettings;
             //Convert url to pdf
             PdfDocument document = htmlConverter.Convert("http://asp.syncfusion.com/demos/http_post_get/default.aspx");
             //Save and close the PDF document
             document.Save("Output.pdf");
             document.Close(true);
             </code>
             <code lang= "VB">
             'Initialize HTML converter
             Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.WebKit)
             'Initialize WebKit converter settings
             Dim webKitSettings As New WebKitConverterSettings()
             'Assign the WebKit path
             webKitSettings.WebKitPath = "/QtBinaries/"
             'Initialize HTTP Post collection and add the name and value to POST. 
             Dim httpPostCollection As New HttpPostFieldCollection()
             httpPostCollection.Add("firstName", "Andrew")
             httpPostCollection.Add("lastName", "Fuller")
             'Assign the HTTP Post field collection to the webkit settings.
             webKitSettings.HttpPostFields = httpPostCollection
             'Assign the WebKit settings
             htmlConverter.ConverterSettings = webKitSettings
             'Convert url to pdf
             Dim document As PdfDocument = htmlConverter.Convert("http://asp.syncfusion.com/demos/http_post_get/default.aspx")
             'Save and close the PDF document
             document.Save("Output.pdf")
             document.Close(True)
             </code>
             </example>
             <seealso cref="T:Syncfusion.HtmlConverter.WebKitConverterSettings"/> class
             <seealso cref="T:Syncfusion.HtmlConverter.BlinkConverterSettings"/> class
        </member>
        <member name="T:Syncfusion.HtmlConverter.HttpRequestHeaderCollection">
            <summary>
            Represents a collection of the HTTP request headers
            </summary>
            <remarks>
            To know more details about HTTP request headers, refer this 
            <see href="https://help.syncfusion.com/file-formats/pdf/convert-html-to-pdf/webkit#token-based-authentication">link</see>.
            </remarks>
            <example>
            <code lang = "C#">
            //Initialize HTML converter
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.WebKit);
            //Initialize WebKit converter settings
            WebKitConverterSettings webKitSettings = new WebKitConverterSettings();
            //Assign the WebKit path
            webKitSettings.WebKitPath = @"/QtBinaries/";
            //Initialize HTTP header collection and add the name and value. 
            HttpRequestHeaderCollection httpRequestHeaderCollection = new HttpRequestHeaderCollection();
            httpRequestHeaderCollection.Add("headername", "headervalue");
            //Assign the HTTP header collection to the webkit settings.
            webKitSettings.HttpRequestHeaders = httpRequestHeaderCollection;
            //Assign the WebKit settings
            htmlConverter.ConverterSettings = webKitSettings;
            //Convert url to pdf
            PdfDocument document = htmlConverter.Convert("https://www.google.com");
            //Save and close the PDF document
            document.Save("Output.pdf");
            document.Close(true);
            </code>
            <code lang= "VB">
            'Initialize HTML converter
            Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.WebKit)
            'Initialize WebKit converter settings
            Dim webKitSettings As New WebKitConverterSettings()
            'Assign the WebKit path
            webKitSettings.WebKitPath = "/QtBinaries/"
            'Initialize HTTP header collection and add the name and value. 
            Dim httpRequestHeaderCollection As New HttpRequestHeaderCollection()
            httpRequestHeaderCollection.Add("headername", "headervalue")
            'Assign the HTTP header collection to the webkit settings.
            webKitSettings.HttpRequestHeaders = httpRequestHeaderCollection
            'Assign the WebKit settings
            htmlConverter.ConverterSettings = webKitSettings
            'Convert url to pdf
            Dim document As PdfDocument = htmlConverter.Convert("https://www.google.com")
            'Save and close the PDF document
            document.Save("Output.pdf")
            document.Close(True)
            </code>
            </example>
            <seealso cref="T:Syncfusion.HtmlConverter.WebKitConverterSettings"/> class
            <seealso cref="T:Syncfusion.HtmlConverter.BlinkConverterSettings"/> class
        </member>
        <member name="T:Syncfusion.HtmlConverter.BlinkCommandLineArguments">
            <summary>
            Represents a collection of Blink command line arguments.
            </summary>
            <example>
            <code lang = "C#">
            Initialize HTML converter
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.Blink);
            //Initialize Blink converter settings
            BlinkConverterSettings BlinkSettings = new BlinkConverterSettings();
            //Assign the Blink path
            BlinkSettings.BlinkPath = @"/BlinkBinaries/";
            //Initialize the Command Line Arguments 
            BlinkCommandLineArguments commandLineArguments = new BlinkCommandLineArguments();
            commandLineArguments.Add("--no-proxy-server");
            BlinkSettings.CommandLineArguments = commandLineArguments;
            //Assign the Blink settings
            htmlConverter.ConverterSettings = BlinkSettings;
            //Convert url to pdf
            PdfDocument document = htmlConverter.Convert("https://www.google.com");
            //Save and close the PDF document
            document.Save("Output.pdf");
            document.Close(true);
            </code>
            <code lang= "VB">
            'Initialize HTML converter
            Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.Blink)
            'Initialize Blink converter settings
            Dim BlinkSettings As New BlinkConverterSettings()
            'Assign the Blink path
            BlinkSettings.BlinkPath = "/BlinkBinaries/"
            'Initialize the Command Line Arguments
            Dim commandLineArguments As New BlinkCommandLineArguments();
            commandLineArguments.Add("--no-proxy-server")
            BlinkSettings.CommandLineArguments = commandLineArguments;
            htmlConverter.ConverterSettings = BlinkSettings
            'Convert url to pdf
            Dim document As PdfDocument = htmlConverter.Convert("https://www.google.com")
            'Save and close the PDF document
            document.Save("Output.pdf")
            document.Close(True)
            </code>
            </example>
            <seealso cref="T:Syncfusion.HtmlConverter.BlinkConverterSettings"/> class
        </member>
        <member name="T:Syncfusion.HtmlConverter.WebKitProxySettings">
            <summary>
            Class which represents the proxy settings of WebKit HTML converter.
            </summary>
            <remarks>
            To know more details about proxy settings, refer this 
            <see href="https://help.syncfusion.com/file-formats/pdf/convert-html-to-pdf/webkit#system-proxy">link</see>.
            </remarks>
            <example>
            <code lang = "C#">
            //Initialize HTML converter
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.WebKit);
            //Initialize WebKit converter settings
            WebKitConverterSettings webKitSettings = new WebKitConverterSettings();
            //Assign the WebKit path
            webKitSettings.WebKitPath = @"/QtBinaries/";
            //Initialize WebKit proxy settings and set the values
            WebKitProxySettings proxySettings = new WebKitProxySettings();
            proxySettings.UseSystemProxy = true;
            //Assign the proxy settings to WebKit settings
            webKitSettings.ProxySettings = proxySettings;
            //Assign the WebKit settings to the converter
            htmlConverter.ConverterSettings = webKitSettings;
            //Convert url to pdf
            PdfDocument document = htmlConverter.Convert("https://www.google.com");
            //Save and close the PDF document
            document.Save("Output.pdf");
            document.Close(true);
            </code>
            <code lang= "VB">
            'Initialize HTML converter
            Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.WebKit)
            'Initialize WebKit converter settings
            Dim webKitSettings As New WebKitConverterSettings()
            'Assign the WebKit path
            webKitSettings.WebKitPath = "/QtBinaries/"
            'Initialize WebKit proxy settings and set the values
            Dim proxySettings As New WebKitProxySettings()
            proxySettings.UseSystemProxy = True
            'Assign the proxy settings to WebKit settings
            webKitSettings.ProxySettings = proxySettings
            'Assign the WebKit settings to the converter
            htmlConverter.ConverterSettings = webKitSettings
            'Convert url to pdf
            Dim document As PdfDocument = htmlConverter.Convert("https://www.google.com")
            'Save and close the PDF document
            document.Save("Output.pdf")
            document.Close(True)
            </code>
            </example>
            <seealso cref="T:Syncfusion.HtmlConverter.WebKitProxyType"/>
        </member>
        <member name="P:Syncfusion.HtmlConverter.WebKitProxySettings.UseSystemProxy">
            <summary>
            Gets or sets use system proxy settings; If it is set to true WebKit converter use system proxy settings for conversion. 
            </summary>
            <remarks>
            To know more details about using system proxy settings for conversion, refer this 
            <see href="https://help.syncfusion.com/file-formats/pdf/convert-html-to-pdf/webkit#system-proxy">link</see>.
            </remarks>
            <example>
            <code lang = "C#">
            //Initialize HTML converter
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.WebKit);
            //Initialize WebKit converter settings
            WebKitConverterSettings webKitSettings = new WebKitConverterSettings();
            //Assign the WebKit path
            webKitSettings.WebKitPath = @"/QtBinaries/";
            //Initialize WebKit proxy settings and set the values
            WebKitProxySettings proxySettings = new WebKitProxySettings();
            proxySettings.UseSystemProxy = true;
            //Assign the proxy settings to WebKit settings
            webKitSettings.ProxySettings = proxySettings;
            //Assign the WebKit settings to the converter
            htmlConverter.ConverterSettings = webKitSettings;
            //Convert url to pdf
            PdfDocument document = htmlConverter.Convert("https://www.google.com");
            //Save and close the PDF document
            document.Save("Output.pdf");
            document.Close(true);
            </code>
            <code lang= "VB">
            'Initialize HTML converter
            Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.WebKit)
            'Initialize WebKit converter settings
            Dim webKitSettings As New WebKitConverterSettings()
            'Assign the WebKit path
            webKitSettings.WebKitPath = "/QtBinaries/"
            'Initialize WebKit proxy settings and set the values
            Dim proxySettings As New WebKitProxySettings()
            proxySettings.UseSystemProxy = True
            'Assign the proxy settings to WebKit settings
            webKitSettings.ProxySettings = proxySettings
            'Assign the WebKit settings to the converter
            htmlConverter.ConverterSettings = webKitSettings
            'Convert url to pdf
            Dim document As PdfDocument = htmlConverter.Convert("https://www.google.com")
            'Save and close the PDF document
            document.Save("Output.pdf")
            document.Close(True)
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.HtmlConverter.WebKitProxySettings.HostName">
            <summary>
            Gets or sets host name of proxy server
            </summary>
            <remarks>
            To know more details about using manual proxy settings for conversion, refer this 
            <see href="https://help.syncfusion.com/file-formats/pdf/convert-html-to-pdf/webkit#manual-proxy">link</see>.
            </remarks>
            <example>
            <code lang = "C#">
            //Initialize HTML converter
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.WebKit);
            //Initialize WebKit converter settings
            WebKitConverterSettings webKitSettings = new WebKitConverterSettings();
            //Assign the WebKit path
            webKitSettings.WebKitPath = @"/QtBinaries/";
            //Set manual proxy with proxy server host and port number
            webKitSettings.ProxySettings.HostName = "127.0.0.1";
            webKitSettings.ProxySettings.PortNumber = 8080;
            //Assign WebKit settings to HTML converter
            htmlConverter.ConverterSettings = webKitSettings;
            //Convert url to pdf
            PdfDocument document = htmlConverter.Convert("https://www.google.com");
            //Save and close the PDF document
            document.Save("Output.pdf");
            document.Close(true);
            </code>
            <code lang= "VB">
            'Initialize HTML converter
            Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.WebKit)
            'Initialize WebKit converter settings
            Dim webKitSettings As New WebKitConverterSettings()
            'Assign the WebKit path
            webKitSettings.WebKitPath = "/QtBinaries/"
            'Set manual proxy with proxy server host and port number
            webKitSettings.ProxySettings.HostName = "127.0.0.1"
            webKitSettings.ProxySettings.PortNumber = 8080
            'Assign WebKit settings to HTML converter
            htmlConverter.ConverterSettings = webKitSettings
            'Convert url to pdf
            Dim document As PdfDocument = htmlConverter.Convert("https://www.google.com")
            'Save and close the PDF document
            document.Save("Output.pdf")
            document.Close(True)
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.HtmlConverter.WebKitProxySettings.PortNumber">
            <summary>
            Gets or sets port number of proxy server
            </summary>
            <remarks>
            To know more details about using manual proxy settings for conversion, refer this 
            <see href="https://help.syncfusion.com/file-formats/pdf/convert-html-to-pdf/webkit#manual-proxy">link</see>.
            </remarks>
            <example>
            <code lang = "C#">
            //Initialize HTML converter
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.WebKit);
            //Initialize WebKit converter settings
            WebKitConverterSettings webKitSettings = new WebKitConverterSettings();
            //Assign the WebKit path
            webKitSettings.WebKitPath = @"/QtBinaries/";
            //Set manual proxy with proxy server host and port number
            webKitSettings.ProxySettings.HostName = "127.0.0.1";
            webKitSettings.ProxySettings.PortNumber = 8080;
            //Assign WebKit settings to HTML converter
            htmlConverter.ConverterSettings = webKitSettings;
            //Convert url to pdf
            PdfDocument document = htmlConverter.Convert("https://www.google.com");
            //Save and close the PDF document
            document.Save("Output.pdf");
            document.Close(true);
            </code>
            <code lang= "VB">
            'Initialize HTML converter
            Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.WebKit)
            'Initialize WebKit converter settings
            Dim webKitSettings As New WebKitConverterSettings()
            'Assign the WebKit path
            webKitSettings.WebKitPath = "/QtBinaries/"
            'Set manual proxy with proxy server host and port number
            webKitSettings.ProxySettings.HostName = "127.0.0.1"
            webKitSettings.ProxySettings.PortNumber = 8080
            'Assign WebKit settings to HTML converter
            htmlConverter.ConverterSettings = webKitSettings
            'Convert url to pdf
            Dim document As PdfDocument = htmlConverter.Convert("https://www.google.com")
            'Save and close the PDF document
            document.Save("Output.pdf")
            document.Close(True)
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.HtmlConverter.WebKitProxySettings.Username">
            <summary>
            Gets or sets username of proxy server; optional;
            </summary>
            <remarks>
            To know more details about using manual proxy settings for conversion, refer this 
            <see href="https://help.syncfusion.com/file-formats/pdf/convert-html-to-pdf/webkit#manual-proxy">link</see>.
            </remarks>
            <example>
            <code lang = "C#">
            //Initialize HTML converter
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.WebKit);
            //Initialize WebKit converter settings
            WebKitConverterSettings webKitSettings = new WebKitConverterSettings();
            //Assign the WebKit path
            webKitSettings.WebKitPath = @"/QtBinaries/";
            //Set manual proxy with proxy server host and port number.
            webKitSettings.ProxySettings.HostName = "127.0.0.1";
            webKitSettings.ProxySettings.PortNumber = 8080;
            //Set the username and password to authenticate the proxy server.
            webKitSettings.ProxySettings.Username = "username";
            webKitSettings.ProxySettings.Password = "password";
            //Assign WebKit settings to HTML converter
            htmlConverter.ConverterSettings = webKitSettings;
            //Convert url to pdf
            PdfDocument document = htmlConverter.Convert("https://www.google.com");
            //Save and close the PDF document
            document.Save("Output.pdf");
            document.Close(true);
            </code>
            <code lang= "VB">
            'Initialize HTML converter
            Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.WebKit)
            'Initialize WebKit converter settings
            Dim webKitSettings As New WebKitConverterSettings()
            'Assign the WebKit path
            webKitSettings.WebKitPath = "/QtBinaries/"
            'Set manual proxy with proxy server host and port number.
            webKitSettings.ProxySettings.HostName = "127.0.0.1"
            webKitSettings.ProxySettings.PortNumber = 8080
            'Set the username and password to authenticate the proxy server.
            webKitSettings.ProxySettings.Username = "username"
            webKitSettings.ProxySettings.Password = "password"
            'Assign WebKit settings to HTML converter
            htmlConverter.ConverterSettings = webKitSettings
            'Convert url to pdf
            Dim document As PdfDocument = htmlConverter.Convert("https://www.google.com")
            'Save and close the PDF document
            document.Save("Output.pdf")
            document.Close(True)
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.HtmlConverter.WebKitProxySettings.Password">
            <summary>
            Gets or sets password of proxy server; optional;
            </summary>
            <remarks>
            To know more details about using manual proxy settings for conversion, refer this 
            <see href="https://help.syncfusion.com/file-formats/pdf/convert-html-to-pdf/webkit#manual-proxy">link</see>.
            </remarks>
            <example>
            <code lang = "C#">
            //Initialize HTML converter
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.WebKit);
            //Initialize WebKit converter settings
            WebKitConverterSettings webKitSettings = new WebKitConverterSettings();
            //Assign the WebKit path
            webKitSettings.WebKitPath = @"/QtBinaries/";
            //Set manual proxy with proxy server host and port number.
            webKitSettings.ProxySettings.HostName = "127.0.0.1";
            webKitSettings.ProxySettings.PortNumber = 8080;
            //Set the username and password to authenticate the proxy server.
            webKitSettings.ProxySettings.Username = "username";
            webKitSettings.ProxySettings.Password = "password";
            //Assign WebKit settings to HTML converter
            htmlConverter.ConverterSettings = webKitSettings;
            //Convert url to pdf
            PdfDocument document = htmlConverter.Convert("https://www.google.com");
            //Save and close the PDF document
            document.Save("Output.pdf");
            document.Close(true);
            </code>
            <code lang= "VB">
            'Initialize HTML converter
            Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.WebKit)
            'Initialize WebKit converter settings
            Dim webKitSettings As New WebKitConverterSettings()
            'Assign the WebKit path
            webKitSettings.WebKitPath = "/QtBinaries/"
            'Set manual proxy with proxy server host and port number.
            webKitSettings.ProxySettings.HostName = "127.0.0.1"
            webKitSettings.ProxySettings.PortNumber = 8080
            'Set the username and password to authenticate the proxy server.
            webKitSettings.ProxySettings.Username = "username"
            webKitSettings.ProxySettings.Password = "password"
            'Assign WebKit settings to HTML converter
            htmlConverter.ConverterSettings = webKitSettings
            'Convert url to pdf
            Dim document As PdfDocument = htmlConverter.Convert("https://www.google.com")
            'Save and close the PDF document
            document.Save("Output.pdf")
            document.Close(True)
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.HtmlConverter.WebKitProxySettings.Type">
            <summary>
            Gets or sets type of proxy server
            </summary>
            <remarks>
            To know more details about using manual proxy settings for conversion, refer this 
            <see href="https://help.syncfusion.com/file-formats/pdf/convert-html-to-pdf/webkit#manual-proxy">link</see>.
            </remarks>
            <example>
            <code lang = "C#">
            //Initialize HTML converter
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.WebKit);
            //Initialize WebKit converter settings
            WebKitConverterSettings webKitSettings = new WebKitConverterSettings();
            //Assign the WebKit path
            webKitSettings.WebKitPath = @"/QtBinaries/";
            //Set manual proxy with proxy server host and port number.
            webKitSettings.ProxySettings.HostName = "127.0.0.1";
            webKitSettings.ProxySettings.PortNumber = 8080;
            //Set proxy server type
            webKitSettings.ProxySettings.Type = WebKitProxyType.Http;
            //Assign WebKit settings to HTML converter
            htmlConverter.ConverterSettings = webKitSettings;
            //Convert url to pdf
            PdfDocument document = htmlConverter.Convert("https://www.google.com");
            //Save and close the PDF document
            document.Save("Output.pdf");
            document.Close(true);
            </code>
            <code lang= "VB">
            'Initialize HTML converter
            Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.WebKit)
            'Initialize WebKit converter settings
            Dim webKitSettings As New WebKitConverterSettings()
            'Assign the WebKit path
            webKitSettings.WebKitPath = "/QtBinaries/"
            'Set manual proxy with proxy server host and port number.
            webKitSettings.ProxySettings.HostName = "127.0.0.1"
            webKitSettings.ProxySettings.PortNumber = 8080
            'Set proxy server type
            webKitSettings.ProxySettings.Type = WebKitProxyType.Http
            'Assign WebKit settings to HTML converter
            htmlConverter.ConverterSettings = webKitSettings
            'Convert url to pdf
            Dim document As PdfDocument = htmlConverter.Convert("https://www.google.com")
            'Save and close the PDF document
            document.Save("Output.pdf")
            document.Close(True)
            </code>
            </example>
        </member>
        <member name="M:Syncfusion.HtmlConverter.WebKitProxySettings.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.HtmlConverter.WebKitProxySettings"/> class.
            </summary>
            <example>
            <code lang = "C#">
            //Initialize HTML converter
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.WebKit);
            //Initialize WebKit converter settings
            WebKitConverterSettings webKitSettings = new WebKitConverterSettings();
            //Assign the WebKit path
            webKitSettings.WebKitPath = @"/QtBinaries/";
            //Set manual proxy with proxy server host and port number.
            webKitSettings.ProxySettings.HostName = "127.0.0.1";
            webKitSettings.ProxySettings.PortNumber = 8080;
            //Set proxy server type
            webKitSettings.ProxySettings.Type = WebKitProxyType.Http;
            //Set the username and password to authenticate the proxy server.
            webKitSettings.ProxySettings.Username = "username";
            webKitSettings.ProxySettings.Password = "password";
            //Assign WebKit settings to HTML converter
            htmlConverter.ConverterSettings = webKitSettings;
            //Convert url to pdf
            PdfDocument document = htmlConverter.Convert("https://www.google.com");
            //Save and close the PDF document
            document.Save("Output.pdf");
            document.Close(true);
            </code>
            <code lang= "VB">
            'Initialize HTML converter
            Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.WebKit)
            'Initialize WebKit converter settings
            Dim webKitSettings As New WebKitConverterSettings()
            'Assign the WebKit path
            webKitSettings.WebKitPath = "/QtBinaries/"
            'Set manual proxy with proxy server host and port number.
            webKitSettings.ProxySettings.HostName = "127.0.0.1"
            webKitSettings.ProxySettings.PortNumber = 8080
            'Set proxy server type
            webKitSettings.ProxySettings.Type = WebKitProxyType.Http
            'Set the username and password to authenticate the proxy server.
            webKitSettings.ProxySettings.Username = "username"
            webKitSettings.ProxySettings.Password = "password"
            'Assign WebKit settings to HTML converter
            htmlConverter.ConverterSettings = webKitSettings
            'Convert url to pdf
            Dim document As PdfDocument = htmlConverter.Convert("https://www.google.com")
            'Save and close the PDF document
            document.Save("Output.pdf")
            document.Close(True)
            </code>
            </example>
        </member>
        <member name="T:Syncfusion.HtmlConverter.BlinkProxySettings">
            <summary>
            Represents the proxy settings of the Blink HTML converter.
            </summary>
            <example>
            <code lang = "C#">
            //Initialize HTML converter
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.Blink);
            //Initialize Blink converter settings
            BlinkConverterSettings BlinkSettings = new BlinkConverterSettings();
            //Assign the Blink path
            BlinkSettings.BlinkPath = @"/BlinkBinaries/";
            //Initialize Blink proxy settings and set the values
            BlinkProxySettings proxySettings = new BlinkProxySettings();
            proxySettings.Type = BlinkProxyType.http;
            proxySettings.HostName = "127.0.0.1";
            proxySettings.PortNumber = 8080;
            //Assign the proxy settings to Blink settings
            BlinkSettings.ProxySettings = proxySettings;
            //Assign the Blink settings to the converter
            htmlConverter.ConverterSettings = BlinkSettings;
            //Convert url to pdf
            PdfDocument document = htmlConverter.Convert("https://www.google.com");
            //Save and close the PDF document
            document.Save("Output.pdf");
            document.Close(true);
            </code>
            <code lang= "VB">
            'Initialize HTML converter
            Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.Blink)
            'Initialize Blink converter settings
            Dim BlinkSettings As New BlinkConverterSettings()
            'Assign the Blink path
            BlinkSettings.BlinkPath = "/BlinkBinaries/"
            'Initialize Blink proxy settings and set the values
            Dim proxySettings As New BlinkProxySettings()
            proxySettings.Type = BlinkProxyType.http
            proxySettings.HostName = "127.0.0.1"
            proxySettings.PortNumber = 8080
            'Assign the proxy settings to Blink settings
            BlinkSettings.ProxySettings = proxySettings
            'Assign the Blink settings to the converter
            htmlConverter.ConverterSettings = BlinkSettings
            'Convert url to pdf
            Dim document As PdfDocument = htmlConverter.Convert("https://www.google.com")
            'Save and close the PDF document
            document.Save("Output.pdf")
            document.Close(True)
            </code>
            </example>
            <seealso cref="T:Syncfusion.HtmlConverter.BlinkProxyType"/>
        </member>
        <member name="P:Syncfusion.HtmlConverter.BlinkProxySettings.HostName">
            <summary>
            Gets or sets host name of proxy server
            </summary>
            <example>
            <code lang = "C#">
            //Initialize HTML converter
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.Blink);
            //Initialize Blink converter settings
            BlinkConverterSettings BlinkSettings = new BlinkConverterSettings();
            //Assign the Blink path
            BlinkSettings.BlinkPath = @"/BlinkBinaries/";
            //Set manual proxy with proxy server host and port number
            BlinkSettings.ProxySettings.HostName = "127.0.0.1";
            BlinkSettings.ProxySettings.PortNumber = 8080;
            //Assign Blink settings to HTML converter
            htmlConverter.ConverterSettings = BlinkSettings;
            //Convert url to pdf
            PdfDocument document = htmlConverter.Convert("https://www.google.com");
            //Save and close the PDF document
            document.Save("Output.pdf");
            document.Close(true);
            </code>
            <code lang= "VB">
            'Initialize HTML converter
            Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.Blink)
            'Initialize Blink converter settings
            Dim BlinkSettings As New BlinkConverterSettings()
            'Assign the Blink path
            BlinkSettings.BlinkPath = "/BlinkBinaries/"
            'Set manual proxy with proxy server host and port number
            BlinkSettings.ProxySettings.HostName = "127.0.0.1"
            BlinkSettings.ProxySettings.PortNumber = 8080
            'Assign Blink settings to HTML converter
            htmlConverter.ConverterSettings = BlinkSettings
            'Convert url to pdf
            Dim document As PdfDocument = htmlConverter.Convert("https://www.google.com")
            'Save and close the PDF document
            document.Save("Output.pdf")
            document.Close(True)
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.HtmlConverter.BlinkProxySettings.PortNumber">
            <summary>
            Gets or sets port number of proxy server
            </summary>
            <example>
            <code lang = "C#">
            //Initialize HTML converter
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.Blink);
            //Initialize Blink converter settings
            BlinkConverterSettings BlinkSettings = new BlinkConverterSettings();
            //Assign the Blink path
            BlinkSettings.BlinkPath = @"/BlinkBinaries/";
            //Set manual proxy with proxy server host and port number
            BlinkSettings.ProxySettings.HostName = "127.0.0.1";
            BlinkSettings.ProxySettings.PortNumber = 8080;
            //Assign Blink settings to HTML converter
            htmlConverter.ConverterSettings = BlinkSettings;
            //Convert url to pdf
            PdfDocument document = htmlConverter.Convert("https://www.google.com");
            //Save and close the PDF document
            document.Save("Output.pdf");
            document.Close(true);
            </code>
            <code lang= "VB">
            'Initialize HTML converter
            Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.Blink)
            'Initialize Blink converter settings
            Dim BlinkSettings As New BlinkConverterSettings()
            'Assign the Blink path
            BlinkSettings.BlinkPath = "/BlinkBinaries/"
            'Set manual proxy with proxy server host and port number
            BlinkSettings.ProxySettings.HostName = "127.0.0.1"
            BlinkSettings.ProxySettings.PortNumber = 8080
            'Assign Blink settings to HTML converter
            htmlConverter.ConverterSettings = BlinkSettings
            'Convert url to pdf
            Dim document As PdfDocument = htmlConverter.Convert("https://www.google.com")
            'Save and close the PDF document
            document.Save("Output.pdf")
            document.Close(True)
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.HtmlConverter.BlinkProxySettings.Type">
            <summary>
            Gets or sets type of proxy server
            </summary>
            <example>
            <code lang = "C#">
            //Initialize HTML converter
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.Blink);
            //Initialize Blink converter settings
            BlinkConverterSettings BlinkSettings = new BlinkConverterSettings();
            //Assign the Blink path
            BlinkSettings.BlinkPath = @"/BlinkBinaries/";
            //Set manual proxy with proxy server host and port number.
            BlinkSettings.ProxySettings.HostName = "127.0.0.1";
            BlinkSettings.ProxySettings.PortNumber = 8080;
            //Set proxy server type
            BlinkSettings.ProxySettings.Type = BlinkProxyType.Http;
            //Assign Blink settings to HTML converter
            htmlConverter.ConverterSettings = BlinkSettings;
            //Convert url to pdf
            PdfDocument document = htmlConverter.Convert("https://www.google.com");
            //Save and close the PDF document
            document.Save("Output.pdf");
            document.Close(true);
            </code>
            <code lang= "VB">
            'Initialize HTML converter
            Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.Blink)
            'Initialize Blink converter settings
            Dim BlinkSettings As New BlinkConverterSettings()
            'Assign the Blink path
            BlinkSettings.BlinkPath = "/BlinkBinaries/"
            'Set manual proxy with proxy server host and port number.
            BlinkSettings.ProxySettings.HostName = "127.0.0.1"
            BlinkSettings.ProxySettings.PortNumber = 8080
            'Set proxy server type
            BlinkSettings.ProxySettings.Type = BlinkProxyType.Http
            'Assign Blink settings to HTML converter
            htmlConverter.ConverterSettings = BlinkSettings
            'Convert url to pdf
            Dim document As PdfDocument = htmlConverter.Convert("https://www.google.com")
            'Save and close the PDF document
            document.Save("Output.pdf")
            document.Close(True)
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.HtmlConverter.BlinkProxySettings.Username">
            <summary>
            Gets or sets the username of proxy server; optional.
            </summary>
            <example>
            <code lang = "C#">
            //Initialize HTML converter
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.Blink);
            //Initialize Blink converter settings
            BlinkConverterSettings BlinkSettings = new BlinkConverterSettings();
            //Assign the Blink path
            BlinkSettings.BlinkPath = @"/BlinkBinaries/";
            //Set manual proxy with proxy server host and port number.
            BlinkSettings.ProxySettings.HostName = "127.0.0.1";
            BlinkSettings.ProxySettings.PortNumber = 8080;
            BlinkSettings.ProxySettings.Username = "user";
            BlinkSettings.ProxySettings.Password = "pass";
            //Set proxy server type
            BlinkSettings.ProxySettings.Type = BlinkProxyType.Http;
            //Assign Blink settings to HTML converter
            htmlConverter.ConverterSettings = BlinkSettings;
            //Convert url to pdf
            PdfDocument document = htmlConverter.Convert("https://www.google.com");
            //Save and close the PDF document
            document.Save("Output.pdf");
            document.Close(true);
            </code>
            <code lang= "VB">
            'Initialize HTML converter
            Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.Blink)
            'Initialize Blink converter settings
            Dim BlinkSettings As New BlinkConverterSettings()
            'Assign the Blink path
            BlinkSettings.BlinkPath = "/BlinkBinaries/"
            'Set manual proxy with proxy server host and port number.
            BlinkSettings.ProxySettings.HostName = "127.0.0.1"
            BlinkSettings.ProxySettings.PortNumber = 8080
            BlinkSettings.ProxySettings.Username = "user"
            BlinkSettings.ProxySettings.Password = "pass"
            'Set proxy server type
            BlinkSettings.ProxySettings.Type = BlinkProxyType.Http
            'Assign Blink settings to HTML converter
            htmlConverter.ConverterSettings = BlinkSettings
            'Convert url to pdf
            Dim document As PdfDocument = htmlConverter.Convert("https://www.google.com")
            'Save and close the PDF document
            document.Save("Output.pdf")
            document.Close(True)
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.HtmlConverter.BlinkProxySettings.Password">
            <summary>
            Gets or sets the password of proxy server; optional.
            </summary>
            <example>
            <code lang = "C#">
            //Initialize HTML converter
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.Blink);
            //Initialize Blink converter settings
            BlinkConverterSettings BlinkSettings = new BlinkConverterSettings();
            //Assign the Blink path
            BlinkSettings.BlinkPath = @"/BlinkBinaries/";
            //Set manual proxy with proxy server host and port number.
            BlinkSettings.ProxySettings.HostName = "127.0.0.1";
            BlinkSettings.ProxySettings.PortNumber = 8080;
            BlinkSettings.ProxySettings.Username = "user";
            BlinkSettings.ProxySettings.Password = "pass";
            //Set proxy server type
            BlinkSettings.ProxySettings.Type = BlinkProxyType.Http;
            //Assign Blink settings to HTML converter
            htmlConverter.ConverterSettings = BlinkSettings;
            //Convert url to pdf
            PdfDocument document = htmlConverter.Convert("https://www.google.com");
            //Save and close the PDF document
            document.Save("Output.pdf");
            document.Close(true);
            </code>
            <code lang= "VB">
            'Initialize HTML converter
            Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.Blink)
            'Initialize Blink converter settings
            Dim BlinkSettings As New BlinkConverterSettings()
            'Assign the Blink path
            BlinkSettings.BlinkPath = "/BlinkBinaries/"
            'Set manual proxy with proxy server host and port number.
            BlinkSettings.ProxySettings.HostName = "127.0.0.1"
            BlinkSettings.ProxySettings.PortNumber = 8080
            BlinkSettings.ProxySettings.Username = "user"
            BlinkSettings.ProxySettings.Password = "pass"
            'Set proxy server type
            BlinkSettings.ProxySettings.Type = BlinkProxyType.Http
            'Assign Blink settings to HTML converter
            htmlConverter.ConverterSettings = BlinkSettings
            'Convert url to pdf
            Dim document As PdfDocument = htmlConverter.Convert("https://www.google.com")
            'Save and close the PDF document
            document.Save("Output.pdf")
            document.Close(True)
            </code>
            </example>
        </member>
        <member name="M:Syncfusion.HtmlConverter.BlinkProxySettings.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.HtmlConverter.BlinkProxySettings"/> class.
            </summary>
            <example>
            <code lang = "C#">
            //Initialize HTML converter
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.Blink);
            //Initialize Blink converter settings
            BlinkConverterSettings BlinkSettings = new BlinkConverterSettings();
            //Assign the Blink path
            BlinkSettings.BlinkPath = @"/BlinkBinaries/";
            //Set manual proxy with proxy server host and port number.
            BlinkSettings.ProxySettings.HostName = "127.0.0.1";
            BlinkSettings.ProxySettings.PortNumber = 8080;
            //Set proxy server type
            BlinkSettings.ProxySettings.Type = BlinkProxyType.Http;
            //Assign Blink settings to HTML converter
            htmlConverter.ConverterSettings = BlinkSettings;
            //Convert url to pdf
            PdfDocument document = htmlConverter.Convert("https://www.google.com");
            //Save and close the PDF document
            document.Save("Output.pdf");
            document.Close(true);
            </code>
            <code lang= "VB">
            'Initialize HTML converter
            Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.Blink)
            'Initialize Blink converter settings
            Dim BlinkSettings As New BlinkConverterSettings()
            'Assign the Blink path
            BlinkSettings.BlinkPath = "/BlinkBinaries/"
            'Set manual proxy with proxy server host and port number.
            BlinkSettings.ProxySettings.HostName = "127.0.0.1"
            BlinkSettings.ProxySettings.PortNumber = 8080
            'Set proxy server type
            BlinkSettings.ProxySettings.Type = BlinkProxyType.Http
            'Assign Blink settings to HTML converter
            htmlConverter.ConverterSettings = BlinkSettings
            'Convert url to pdf
            Dim document As PdfDocument = htmlConverter.Convert("https://www.google.com")
            'Save and close the PDF document
            document.Save("Output.pdf")
            document.Close(True)
            </code>
            </example>
        </member>
        <member name="T:Syncfusion.HtmlConverter.IEConverterSettings">
            <summary>
            Class which represents the settings of IE rendering engine
            </summary>
            <remarks>
            To know more details about IE rendering engine, refer this 
            <see href="https://help.syncfusion.com/file-formats/pdf/convert-html-to-pdf/ie">link</see>.
            </remarks>
            <example>
            <code lang = "C#">
            //Initialize HtmlToPdfConverter class with IE rendering Engine.
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(RenderEngine.IE);
            //Setting properties for IE conversion.
            IEConverterSettings ieSettings = new IEConverterSettings();
            ieSettings.AdditionalDelay = 1000;
            ieSettings.AspectRatio = AspectRatio.KeepWidth;
            ieSettings.AutoDetectPageBreak = true;
            ieSettings.ClearInternetCache = true;
            ieSettings.EnableActiveXControl = true;
            ieSettings.EnableBinaryBehaviors = true;
            ieSettings.EnableHyperLink = true;
            ieSettings.EnableJavaScript = true;
            ieSettings.IsPDFA1B = false;
            ieSettings.IsTaggedPDF = false;
            ieSettings.Margin = new PdfMargins { All = 40 };
            ieSettings.Orientation = PdfPageOrientation.Portrait;
            ieSettings.Password = "";
            ieSettings.Username = "";
            htmlConverter.ConverterSettings = ieSettings;
            //Convert HTML to PDF.
            PdfDocument pdfDocument = htmlConverter.Convert("http://www.google.com");
            //Saving and closing PDF document
            pdfDocument.Save("Output.pdf");
            pdfDocument.Close(true);
            </code>
            <code lang="VB">
            'Initialize HtmlToPdfConverter class with IE rendering Engine.
            Dim htmlConverter As New HtmlToPdfConverter(RenderEngine.IE)
            'Setting properties for IE conversion.
            Dim ieSettings As New IEConverterSettings()
            ieSettings.AdditionalDelay = 1000
            ieSettings.AspectRatio = AspectRatio.KeepWidth
            ieSettings.AutoDetectPageBreak = True
            ieSettings.ClearInternetCache = True
            ieSettings.EnableActiveXControl = True
            ieSettings.EnableBinaryBehaviors = True
            ieSettings.EnableHyperLink = True
            ieSettings.EnableJavaScript = True
            ieSettings.IsPDFA1B = False
            ieSettings.IsTaggedPDF = False
            ieSettings.Orientation = PdfPageOrientation.Portrait
            ieSettings.Password = ""
            ieSettings.Username = ""
            htmlConverter.ConverterSettings = ieSettings
            'Convert HTML to PDF.
            Dim pdfDocument As PdfDocument = htmlConverter.Convert("http://www.google.com")
            'Saving and closing PDF document
            pdfDocument.Save("Output.pdf")
            pdfDocument.Close(True)
            </code>
            </example>
            <seealso cref="T:Syncfusion.Pdf.Graphics.PdfMargins"/> class
            <seealso cref="T:Syncfusion.Pdf.PdfPageTemplateElement"/>
            <seealso cref="T:Syncfusion.Pdf.PdfPageOrientation"/>
        </member>
        <member name="P:Syncfusion.HtmlConverter.IEConverterSettings.TempPath">
            <summary>
            Gets or sets the temp path where the temporary operations are performed if any.
            </summary>
            <value> Temp path which contains internal conversion files.By default %temp%</value>
            <example>
            <code lang = "C#">
            //Initialize HTML to PDF converter
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.IE);
            //Initialize the IE converter settings
            IEConverterSettings ieSettings = new IEConverterSettings();
            //Set temp path for the conversion.
            ieSettings.TempPath = Path.GetTempPath();
            //Assign IE settings to HTML converter
            htmlConverter.ConverterSettings = ieSettings;
            //Convert URL to PDF
            PdfDocument document = htmlConverter.Convert("https://www.google.com");
            //Save the document.
            document.Save("Sample.pdf");
            document.Close();
            </code>
            <code lang = "VB">
            'Initialize HTML to PDF converter
            Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.IE)
            'Initialize the IE converter settings
            Dim ieSettings As New IEConverterSettings()
            'Set temp path for the conversion, this path will be used for saving the temporary files. 
            ieSettings.TempPath = Path.GetTempPath()
            'Assign IE settings to HTML converter
            htmlConverter.ConverterSettings = ieSettings
            'Convert URL to PDF
            Dim document As PdfDocument = htmlConverter.Convert("https://www.google.com")
            'Save the document.
            document.Save("Sample.pdf")
            document.Close()
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.HtmlConverter.IEConverterSettings.AdditionalDelay">
            <summary>
            Gets or sets the additional delay to load JavaScript; 
            </summary>
            <value> Specifies the delay to load the scripts.Unit is Milliseconds; By default 0</value>
            <example>
            <code lang = "C#">
            //Initialize HTML to PDF converter
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.IE);
            //Initialize the IE converter settings
            IEConverterSettings ieSettings = new IEConverterSettings();
            //Set Additional delay for conversion  
            ieSettings.AdditionalDelay = 1000;
            //Assign IE settings to HTML converter
            htmlConverter.ConverterSettings = ieSettings;
            //Convert URL to PDF
            PdfDocument document = htmlConverter.Convert("https://www.google.com");
            //Save the document.
            document.Save("Sample.pdf");
            document.Close();
            </code>
            <code lang = "VB">
            'Initialize HTML to PDF converter
            Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.IE)
            'Initialize the IE converter settings
            Dim ieSettings As New IEConverterSettings()
            'Set Additional delay for conversion 
            ieSettings.AdditionalDelay = 1000
            'Assign IE settings to HTML converter
            htmlConverter.ConverterSettings = ieSettings
            'Convert URL to PDF
            Dim document As PdfDocument = htmlConverter.Convert("https://www.google.com")
            'Save the document.
            document.Save("Sample.pdf")
            document.Close()
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.HtmlConverter.IEConverterSettings.EnableHyperLink">
            <summary>
            Gets or Sets a value indicating whether to preserve the live-links in the converted document or not.
            </summary>
            <value>True if the Hyperlinks are enabled, otherwise false.Default is true </value>
            <example>
            <code lang = "C#">
            //Initialize HTML to PDF converter
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.IE);
            //Initialize the IE converter settings
            IEConverterSettings ieSettings = new IEConverterSettings();
            //Enable hyperlink
            ieSettings.EnableHyperLink = true;
            //Assign IE settings to HTML converter
            htmlConverter.ConverterSettings = ieSettings;
            //Convert URL to PDF
            PdfDocument document = htmlConverter.Convert("https://www.google.com");
            //Save the document.
            document.Save("Sample.pdf");
            document.Close();
            </code>
            <code lang = "VB">
            'Initialize HTML to PDF converter
            Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.IE)
            'Initialize the IE converter settings
            Dim ieSettings As New IEConverterSettings()
            'Enable hyperlink
            ieSettings.EnableHyperLink = True
            'Assign IE settings to HTML converter
            htmlConverter.ConverterSettings = ieSettings
            'Convert URL to PDF
            Dim document As PdfDocument = htmlConverter.Convert("https://www.google.com")
            'Save the document.
            document.Save("Sample.pdf")
            document.Close()
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.HtmlConverter.IEConverterSettings.EnableJavaScript">
            <summary>
            Gets or Sets a value indicating whether to Enable/Disable JavaScripts in the webpage.
            </summary>
            <value>True if Javascript is enabled, otherwise,false. default is true</value>
            <example>
            <code lang = "C#">
            //Initialize HTML to PDF converter
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.IE);
            //Initialize the IE converter settings
            IEConverterSettings ieSettings = new IEConverterSettings();
            //Enable javascript
            ieSettings.EnableJavaScript = true;
            //Assign IE settings to HTML converter
            htmlConverter.ConverterSettings = ieSettings;
            //Convert URL to PDF
            PdfDocument document = htmlConverter.Convert("https://www.google.com");
            //Save the document.
            document.Save("Sample.pdf");
            document.Close();
            </code>
            <code lang = "VB">
            'Initialize HTML to PDF converter
            Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.IE)
            'Initialize the IE converter settings
            Dim ieSettings As New IEConverterSettings()
            'Enable javascript
            ieSettings.EnableJavaScript = True
            'Assign IE settings to HTML converter
            htmlConverter.ConverterSettings = ieSettings
            'Convert URL to PDF
            Dim document As PdfDocument = htmlConverter.Convert("https://www.google.com")
            'Save the document.
            document.Save("Sample.pdf")
            document.Close()
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.HtmlConverter.IEConverterSettings.Password">
            <summary>
            Gets or Sets the password;
            </summary>
            <value>String value representing the password of the HTML document. By default ""</value>
            <remarks>
            To know more details about windows authentication, refer this 
            <see href="https://help.syncfusion.com/file-formats/pdf/convert-html-to-pdf/ie#converting-windows-authenticated-web-page-to-pdf-document">link</see>.
            </remarks>
            <example>
            <code lang = "C#">
            //Initialize HTML to PDF converter
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.IE);
            //Initialize the IE converter settings
            IEConverterSettings ieSettings = new IEConverterSettings();
            //Set username and password for converting windows authenticated webpage to PDF
            ieSettings.Username = "username";
            ieSettings.Password = "password";
            //Assign IE settings to HTML converter
            htmlConverter.ConverterSettings = ieSettings;
            //Convert URL to PDF
            PdfDocument document = htmlConverter.Convert("https://www.google.com");
            //Save the document.
            document.Save("Sample.pdf");
            document.Close();
            </code>
            <code lang = "VB">
            'Initialize HTML to PDF converter
            Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.IE)
            'Initialize the IE converter settings
            Dim ieSettings As New IEConverterSettings()
            'Set username and password for converting windows authenticated webpage to PDF
            ieSettings.Username = "username"
            ieSettings.Password = "password"
            'Assign IE settings to HTML converter
            htmlConverter.ConverterSettings = ieSettings
            'Convert URL to PDF
            Dim document As PdfDocument = htmlConverter.Convert("https://www.google.com")
            'Save the document.
            document.Save("Sample.pdf")
            document.Close()
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.HtmlConverter.IEConverterSettings.Username">
            <summary>
            Gets or Sets the Username;
            </summary>
            <value>String value representing the user name of the HTML document. By default ""</value>
            <remarks>
            To know more details about windows authentication, refer this 
            <see href="https://help.syncfusion.com/file-formats/pdf/convert-html-to-pdf/ie#converting-windows-authenticated-web-page-to-pdf-document">link</see>.
            </remarks>
            <example>
            <code lang = "C#">
            //Initialize HTML to PDF converter
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.IE);
            //Initialize the IE converter settings
            IEConverterSettings ieSettings = new IEConverterSettings();
            //Set username and password for converting windows authenticated webpage to PDF
            ieSettings.Username = "username";
            ieSettings.Password = "password";
            //Assign IE settings to HTML converter
            htmlConverter.ConverterSettings = ieSettings;
            //Convert URL to PDF
            PdfDocument document = htmlConverter.Convert("https://www.google.com");
            //Save the document.
            document.Save("Sample.pdf");
            document.Close();
            </code>
            <code lang = "VB">
            'Initialize HTML to PDF converter
            Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.IE)
            'Initialize the IE converter settings
            Dim ieSettings As New IEConverterSettings()
            'Set username and password for converting windows authenticated webpage to PDF
            ieSettings.Username = "username"
            ieSettings.Password = "password"
            'Assign IE settings to HTML converter
            htmlConverter.ConverterSettings = ieSettings
            'Convert URL to PDF
            Dim document As PdfDocument = htmlConverter.Convert("https://www.google.com")
            'Save the document.
            document.Save("Sample.pdf")
            document.Close()
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.HtmlConverter.IEConverterSettings.Margin">
            <summary>
            Gets or sets the margins of the page.
            </summary>
            <value>The <see cref="T:Syncfusion.Pdf.Graphics.PdfMargins"/>, provides margins to the PDF page. By default , PDF margin is 0.</value>
            <example>
            <code lang = "C#">
            //Initialize HTML to PDF converter
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.IE);
            //Initialize the IE converter settings
            IEConverterSettings ieSettings = new IEConverterSettings();
            //Set margins
            ieSettings.Margin.All = 20;
            //Assign IE settings to HTML converter
            htmlConverter.ConverterSettings = ieSettings;
            //Convert URL to PDF
            PdfDocument document = htmlConverter.Convert("https://www.google.com");
            //Save the document.
            document.Save("Sample.pdf");
            document.Close();
            </code>
            <code lang = "VB">
            'Initialize HTML to PDF converter
            Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.IE)
            'Initialize the IE converter settings
            Dim ieSettings As New IEConverterSettings()
            'Set margins
            ieSettings.Margin.All = 20
            'Assign IE settings to HTML converter
            htmlConverter.ConverterSettings = ieSettings
            'Convert URL to PDF
            Dim document As PdfDocument = htmlConverter.Convert("https://www.google.com")
            'Save the document.
            document.Save("Sample.pdf")
            document.Close()
            </code>
            </example>
            <seealso cref="T:Syncfusion.Pdf.Graphics.PdfMargins"/>
        </member>
        <member name="P:Syncfusion.HtmlConverter.IEConverterSettings.PdfHeader">
            <summary>
            Gets or sets the Header to the PDF document;
            </summary>
            <value>The <see cref="T:Syncfusion.Pdf.PdfPageTemplateElement"/> to draw into the PDF page. By default null</value>
            <example>
            <code lang = "C#">
            //Initialize HTML to PDF converter
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.IE);
            //Initialize the IE converter settings
            IEConverterSettings ieSettings = new IEConverterSettings();
            //Create PDF page template element for header with bounds.
            PdfPageTemplateElement header = new PdfPageTemplateElement(new RectangleF(0, 0, ieSettings.PdfPageSize.Width, 50));
            //Create font and brush for header element.
            PdfFont font = new PdfStandardFont(PdfFontFamily.Helvetica, 7);
            PdfBrush brush = new PdfSolidBrush(Color.Black);
            //Draw the header string in header template element. 
            header.Graphics.DrawString("This is header", font, brush, PointF.Empty);
            //Assign the header element to PdfHeader of IE settings.
            ieSettings.PdfHeader = header;
            //Assign IE settings to HTML converter
            htmlConverter.ConverterSettings = ieSettings;
            //Convert URL to PDF
            PdfDocument document = htmlConverter.Convert("https://www.google.com");
            //Save the document.
            document.Save("Sample.pdf");
            document.Close();
            </code>
            <code lang = "VB">
            'Initialize HTML to PDF converter
            Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.IE)
            'Initialize the IE converter settings
            Dim ieSettings As New IEConverterSettings()
            'Create PDF page template element for header with bounds.
            Dim header As New PdfPageTemplateElement(New RectangleF(0, 0, ieSettings.PdfPageSize.Width, 50))
            'Create font and brush for header element.
            Dim font As PdfFont = New PdfStandardFont(PdfFontFamily.Helvetica, 7)
            Dim brush As PdfBrush = New PdfSolidBrush(Color.Black)
            'Draw the header string in header template element. 
            header.Graphics.DrawString("This is header", font, brush, PointF.Empty)
            'Assign the header element to PdfHeader of IE settings.
            ieSettings.PdfHeader = header
            'Assign IE settings to HTML converter
            htmlConverter.ConverterSettings = ieSettings
            'Convert URL to PDF
            Dim document As PdfDocument = htmlConverter.Convert("https://www.google.com")
            'Save the document.
            document.Save("Sample.pdf")
            document.Close()
            </code>
            </example>
            <seealso cref="T:Syncfusion.Pdf.PdfPageTemplateElement"/>
        </member>
        <member name="P:Syncfusion.HtmlConverter.IEConverterSettings.PdfFooter">
            <summary>
            Gets or sets the Footer to the PDF document;
            </summary>
            <value>The <see cref="T:Syncfusion.Pdf.PdfPageTemplateElement"/> to draw into the PDF page. By default null</value>
            <example>
            <code lang = "C#">
            //Initialize HTML to PDF converter
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.IE);
            //Initialize the IE converter settings
            IEConverterSettings ieSettings = new IEConverterSettings();
            //Create PDF page template element for footer with bounds.
            PdfPageTemplateElement footer = new PdfPageTemplateElement(new RectangleF(0, 0, ieSettings.PdfPageSize.Width, 50));
            //Create font and brush for footer element.
            PdfFont font = new PdfStandardFont(PdfFontFamily.Helvetica, 7);
            PdfBrush brush = new PdfSolidBrush(Color.Black);
            //Draw the footer string in footer template element. 
            footer.Graphics.DrawString("This is footer", font, brush, PointF.Empty);
            //Assign the footer element to PdfHeader of IE settings.
            ieSettings.PdfFooter = footer;
            //Assign IE settings to HTML converter
            htmlConverter.ConverterSettings = ieSettings;
            //Convert URL to PDF
            PdfDocument document = htmlConverter.Convert("https://www.google.com");
            //Save the document.
            document.Save("Sample.pdf");
            document.Close();
            </code>
            <code lang = "VB">
            'Initialize HTML to PDF converter
            Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.IE)
            'Initialize the IE converter settings
            Dim ieSettings As New IEConverterSettings()
            'Create PDF page template element for footer with bounds.
            Dim footer As New PdfPageTemplateElement(New RectangleF(0, 0, ieSettings.PdfPageSize.Width, 50))
            'Create font and brush for footer element.
            Dim font As PdfFont = New PdfStandardFont(PdfFontFamily.Helvetica, 7)
            Dim brush As PdfBrush = New PdfSolidBrush(Color.Black)
            'Draw the footer string in footer template element. 
            footer.Graphics.DrawString("This is footer", font, brush, PointF.Empty)
            'Assign the footer element to PdfHeader of IE settings.
            ieSettings.PdfFooter = footer
            'Assign IE settings to HTML converter
            htmlConverter.ConverterSettings = ieSettings
            'Convert URL to PDF
            Dim document As PdfDocument = htmlConverter.Convert("https://www.google.com")
            'Save the document.
            document.Save("Sample.pdf")
            document.Close()
            </code>
            </example>
            <seealso cref="T:Syncfusion.Pdf.PdfPageTemplateElement"/>
        </member>
        <member name="P:Syncfusion.HtmlConverter.IEConverterSettings.Orientation">
            <summary>
            Gets or sets the Orientation of the PDF document;
            </summary>
            <value>The <see cref="T:Syncfusion.Pdf.PdfPageOrientation"/>, provides the orientation of the PDF page. By default Portrait</value>
            <example>
            <code lang = "C#">
            //Initialize HTML to PDF converter
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.IE);
            //Initialize the IE converter settings
            IEConverterSettings ieSettings = new IEConverterSettings();
            //Set PDF page orientation
            ieSettings.Orientation = PdfPageOrientation.Landscape;
            //Assign IE settings to HTML converter
            htmlConverter.ConverterSettings = ieSettings;
            //Convert URL to PDF
            PdfDocument document = htmlConverter.Convert("https://www.google.com");
            //Save the document.
            document.Save("Sample.pdf");
            document.Close();
            </code>
            <code lang = "VB">
            'Initialize HTML to PDF converter
            Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.IE)
            'Initialize the IE converter settings
            Dim ieSettings As New IEConverterSettings()
            'Set PDF page orientation
            ieSettings.Orientation = PdfPageOrientation.Landscape
            'Assign IE settings to HTML converter
            htmlConverter.ConverterSettings = ieSettings
            'Convert URL to PDF
            Dim document As PdfDocument = htmlConverter.Convert("https://www.google.com")
            'Save the document.
            document.Save("Sample.pdf")
            document.Close()
            </code>
            </example>
            <seealso cref="T:Syncfusion.Pdf.PdfPageOrientation"/>
        </member>
        <member name="P:Syncfusion.HtmlConverter.IEConverterSettings.PdfPageSize">
            <summary>
            Gets or sets the size of the PDF page; 
            </summary>
            <remarks>Default value: 595 * 842 pixels(A4 size)</remarks>
            <example>
            <code lang = "C#">
            //Initialize HTML to PDF converter
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.IE);
            //Initialize the IE converter settings
            IEConverterSettings ieSettings = new IEConverterSettings();
            //Set PDF page size
            ieSettings.PdfPageSize = new SizeF(595, 842);
            //Assign IE settings to HTML converter
            htmlConverter.ConverterSettings = ieSettings;
            //Convert URL to PDF
            PdfDocument document = htmlConverter.Convert("https://www.google.com");
            //Save the document.
            document.Save("Sample.pdf");
            document.Close();
            </code>
            <code lang = "VB">
            'Initialize HTML to PDF converter
            Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.IE)
            'Initialize the IE converter settings
            Dim ieSettings As New IEConverterSettings()
            'Set PDF page size
            ieSettings.PdfPageSize = New SizeF(595, 842)
            'Assign IE settings to HTML converter
            htmlConverter.ConverterSettings = ieSettings
            'Convert URL to PDF
            Dim document As PdfDocument = htmlConverter.Convert("https://www.google.com")
            'Save the document.
            document.Save("Sample.pdf")
            document.Close()
            </code>
            </example>
            <seealso cref="T:Syncfusion.Pdf.PdfPageSize"/>
        </member>
        <member name="P:Syncfusion.HtmlConverter.IEConverterSettings.AspectRatio">
            <summary>
            Gets or sets the aspect ratio; 
            </summary>
            <value>The <see cref="P:Syncfusion.HtmlConverter.IEConverterSettings.AspectRatio"/>,By default None </value>
            <example>
            <code lang = "C#">
            //Initialize HTML to PDF converter
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.IE);
            //Initialize the IE converter settings
            IEConverterSettings ieSettings = new IEConverterSettings();
            //Set AspectRatio
            ieSettings.AspectRatio = AspectRatio.None;
            //Assign IE settings to HTML converter
            htmlConverter.ConverterSettings = ieSettings;
            //Convert URL to PDF
            PdfDocument document = htmlConverter.Convert("https://www.google.com");
            //Save the document.
            document.Save("Sample.pdf");
            document.Close();
            </code>
            <code lang = "VB">
            'Initialize HTML to PDF converter
            Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.IE)
            'Initialize the IE converter settings
            Dim ieSettings As New IEConverterSettings()
            'Set AspectRatio
            ieSettings.AspectRatio = AspectRatio.None
            'Assign IE settings to HTML converter
            htmlConverter.ConverterSettings = ieSettings
            'Convert URL to PDF
            Dim document As PdfDocument = htmlConverter.Convert("https://www.google.com")
            'Save the document.
            document.Save("Sample.pdf")
            document.Close()
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.HtmlConverter.IEConverterSettings.PageRotateAngle">
            <summary>
            Gets or sets the number of degrees by which the page should be rotated clockwise when displayed or printed.
            </summary>
            <value>The <see cref="T:Syncfusion.Pdf.PdfPageRotateAngle"/>,provides number of degrees by which the page should be rotated clockwise when displayed or printed </value>
            <remarks>Default value: RotateAngle0 </remarks>
            <example>
            <code lang = "C#">
            //Initialize HTML to PDF converter
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.IE);
            //Initialize the IE converter settings
            IEConverterSettings ieSettings = new IEConverterSettings();
            //Set PDF page rotation angle
            ieSettings.PageRotateAngle = PdfPageRotateAngle.RotateAngle90;
            //Assign IE settings to HTML converter
            htmlConverter.ConverterSettings = ieSettings;
            //Convert URL to PDF
            PdfDocument document = htmlConverter.Convert("https://www.google.com");
            //Save the document.
            document.Save("Sample.pdf");
            document.Close();
            </code>
            <code lang = "VB">
            'Initialize HTML to PDF converter
            Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.IE)
            'Initialize the IE converter settings
            Dim ieSettings As New IEConverterSettings()
            'Set PDF page rotation angle
            ieSettings.PageRotateAngle = PdfPageRotateAngle.RotateAngle90
            'Assign IE settings to HTML converter
            htmlConverter.ConverterSettings = ieSettings
            'Convert URL to PDF
            Dim document As PdfDocument = htmlConverter.Convert("https://www.google.com")
            'Save the document.
            document.Save("Sample.pdf")
            document.Close()
            </code>
            </example>
            <seealso cref="T:Syncfusion.Pdf.PdfPageRotateAngle"/>
        </member>
        <member name="P:Syncfusion.HtmlConverter.IEConverterSettings.SplitTextLines">
            <summary>
            Gets or sets a value indicating whether [split text lines].
            </summary>
            <value><c>true</c> if [Split Text lines]; otherwise, <c>false</c>.</value>
            <example>
            <code lang = "C#">
            //Initialize HTML to PDF converter
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.IE);
            //Initialize the IE converter settings
            IEConverterSettings ieSettings = new IEConverterSettings();
            //Set SplitTextLines to avoid text split between pages.
            ieSettings.SplitTextLines = false;
            //Assign IE settings to HTML converter
            htmlConverter.ConverterSettings = ieSettings;
            //Convert URL to PDF
            PdfDocument document = htmlConverter.Convert("https://www.google.com");
            //Save the document.
            document.Save("Sample.pdf");
            document.Close();
            </code>
            <code lang = "VB">
            'Initialize HTML to PDF converter
            Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.IE)
            'Initialize the IE converter settings
            Dim ieSettings As New IEConverterSettings()
            'Set SplitTextLines to avoid text split between pages.
            ieSettings.SplitTextLines = False
            'Assign IE settings to HTML converter
            htmlConverter.ConverterSettings = ieSettings
            'Convert URL to PDF
            Dim document As PdfDocument = htmlConverter.Convert("https://www.google.com")
            'Save the document.
            document.Save("Sample.pdf")
            document.Close()
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.HtmlConverter.IEConverterSettings.SplitImages">
            <summary>
            Gets or sets a value indicating whether [split images].
            </summary>
            <value><c>true</c> if [Split Images]; otherwise, <c>false</c>.</value>
            <example>
            <code lang = "C#">
            //Initialize HTML to PDF converter
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.IE);
            //Initialize the IE converter settings
            IEConverterSettings ieSettings = new IEConverterSettings();
            //Set SplitImages to avoid image split between pages.
            ieSettings.SplitImages = false;
            //Assign IE settings to HTML converter
            htmlConverter.ConverterSettings = ieSettings;
            //Convert URL to PDF
            PdfDocument document = htmlConverter.Convert("https://www.google.com");
            //Save the document.
            document.Save("Sample.pdf");
            document.Close();
            </code>
            <code lang = "VB">
            'Initialize HTML to PDF converter
            Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.IE)
            'Initialize the IE converter settings
            Dim ieSettings As New IEConverterSettings()
            'Set SplitImages to avoid image split between pages.
            ieSettings.SplitImages = False
            'Assign IE settings to HTML converter
            htmlConverter.ConverterSettings = ieSettings
            'Convert URL to PDF
            Dim document As PdfDocument = htmlConverter.Convert("https://www.google.com")
            'Save the document.
            document.Save("Sample.pdf")
            document.Close()
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.HtmlConverter.IEConverterSettings.AutoDetectPageBreak">
            <summary>
            Gets or Sets a value indicating whether to auto-detect page-break in the webpage;
            </summary>
            <value>True if Page break is enabled,  otherwise, <c>false</c>. Default is true</value>
            <example>
            <code lang = "C#">
            //Initialize HTML to PDF converter
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.IE);
            //Initialize the IE converter settings
            IEConverterSettings ieSettings = new IEConverterSettings();
            //Enable auto detect page break.
            ieSettings.AutoDetectPageBreak = true;
            //Assign IE settings to HTML converter
            htmlConverter.ConverterSettings = ieSettings;
            //Convert URL to PDF
            PdfDocument document = htmlConverter.Convert("https://www.google.com");
            //Save the document.
            document.Save("Sample.pdf");
            document.Close();
            </code>
            <code lang = "VB">
            'Initialize HTML to PDF converter
            Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.IE)
            'Initialize the IE converter settings
            Dim ieSettings As New IEConverterSettings()
            'Enable auto detect page break.
            ieSettings.AutoDetectPageBreak = True
            'Assign IE settings to HTML converter
            htmlConverter.ConverterSettings = ieSettings
            'Convert URL to PDF
            Dim document As PdfDocument = htmlConverter.Convert("https://www.google.com")
            'Save the document.
            document.Save("Sample.pdf")
            document.Close()
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.HtmlConverter.IEConverterSettings.Timeout">
            <summary>
            Set the maximum time in milliseconds to wait for HTML page to be loaded;
            </summary>
            <value> Specifies the timeout to the HTML converter.Unit is Milliseconds; By default 0</value>
            <example>
            <code lang = "C#">
            //Initialize HTML to PDF converter
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.IE);
            //Initialize the IE converter settings
            IEConverterSettings ieSettings = new IEConverterSettings();
            //Set timeout for the conversion.
            ieSettings.Timeout = 3000;
            //Assign IE settings to HTML converter
            htmlConverter.ConverterSettings = ieSettings;
            //Convert URL to PDF
            PdfDocument document = htmlConverter.Convert("https://www.google.com");
            //Save the document.
            document.Save("Sample.pdf");
            document.Close();
            </code>
            <code lang = "VB">
            'Initialize HTML to PDF converter
            Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.IE)
            'Initialize the IE converter settings
            Dim ieSettings As New IEConverterSettings()
            'Set timeout for the conversion.
            ieSettings.Timeout = 3000
            'Assign IE settings to HTML converter
            htmlConverter.ConverterSettings = ieSettings
            'Convert URL to PDF
            Dim document As PdfDocument = htmlConverter.Convert("https://www.google.com")
            'Save the document.
            document.Save("Sample.pdf")
            document.Close()
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.HtmlConverter.IEConverterSettings.ClearInternetCache">
            <summary>
            Gets or sets a value indicating whether to clear Internet cache;
            </summary>
            <value> True if the internetcache clears , otherwise false.</value>
            <example>
            <code lang = "C#">
            //Initialize HTML to PDF converter
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.IE);
            //Initialize the IE converter settings
            IEConverterSettings ieSettings = new IEConverterSettings();
            //Set clear internet cache.
            ieSettings.ClearInternetCache = true;
            //Assign IE settings to HTML converter
            htmlConverter.ConverterSettings = ieSettings;
            //Convert URL to PDF
            PdfDocument document = htmlConverter.Convert("https://www.google.com");
            //Save the document.
            document.Save("Sample.pdf");
            document.Close();
            </code>
            <code lang = "VB">
            'Initialize HTML to PDF converter
            Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.IE)
            'Initialize the IE converter settings
            Dim ieSettings As New IEConverterSettings()
            'Set clear internet cache.
            ieSettings.ClearInternetCache = True
            'Assign IE settings to HTML converter
            htmlConverter.ConverterSettings = ieSettings
            'Convert URL to PDF
            Dim document As PdfDocument = htmlConverter.Convert("https://www.google.com")
            'Save the document.
            document.Save("Sample.pdf")
            document.Close()
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.HtmlConverter.IEConverterSettings.EnableActiveXControl">
            <summary>
            Gets or Sets a value indicating whether to Enable/Disable ActiveX contents in the webpage;
            </summary>
            <value>True if ActiveXControl enabled, otherwise false. Default is false</value>
            <example>
            <code lang = "C#">
            //Initialize HTML to PDF converter
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.IE);
            //Initialize the IE converter settings
            IEConverterSettings ieSettings = new IEConverterSettings();
            //Enable ActiveX controls in the webpage.
            ieSettings.EnableActiveXControl = true;
            //Assign IE settings to HTML converter
            htmlConverter.ConverterSettings = ieSettings;
            //Convert URL to PDF
            PdfDocument document = htmlConverter.Convert("https://www.google.com");
            //Save the document.
            document.Save("Sample.pdf");
            document.Close();
            </code>
            <code lang = "VB">
            'Initialize HTML to PDF converter
            Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.IE)
            'Initialize the IE converter settings
            Dim ieSettings As New IEConverterSettings()
            'Enable ActiveX controls in the webpage.
            ieSettings.EnableActiveXControl = True
            'Assign IE settings to HTML converter
            htmlConverter.ConverterSettings = ieSettings
            'Convert URL to PDF
            Dim document As PdfDocument = htmlConverter.Convert("https://www.google.com")
            'Save the document.
            document.Save("Sample.pdf")
            document.Close()
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.HtmlConverter.IEConverterSettings.EnableBinaryBehaviors">
            <summary>
            Gets or Sets a value indicating whether to Enable/Disable binary behaviors in the webpage;
            </summary>
            <value><c>true</c> if [BinaryBehaviors enabled]; otherwise, <c>false</c>. Default is false </value>
            <example>
            <code lang = "C#">
            //Initialize HTML to PDF converter
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.IE);
            //Initialize the IE converter settings
            IEConverterSettings ieSettings = new IEConverterSettings();
            //Enable binary behaviors in webpages.
            ieSettings.EnableBinaryBehaviors = true;
            //Assign IE settings to HTML converter
            htmlConverter.ConverterSettings = ieSettings;
            //Convert URL to PDF
            PdfDocument document = htmlConverter.Convert("https://www.google.com");
            //Save the document.
            document.Save("Sample.pdf");
            document.Close();
            </code>
            <code lang = "VB">
            'Initialize HTML to PDF converter
            Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.IE)
            'Initialize the IE converter settings
            Dim ieSettings As New IEConverterSettings()
            'Enable binary behaviors in webpages.
            ieSettings.EnableBinaryBehaviors = True
            'Assign IE settings to HTML converter
            htmlConverter.ConverterSettings = ieSettings
            'Convert URL to PDF
            Dim document As PdfDocument = htmlConverter.Convert("https://www.google.com")
            'Save the document.
            document.Save("Sample.pdf")
            document.Close()
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.HtmlConverter.IEConverterSettings.IsTaggedPDF">
            <summary>
            Gets or sets a value indicating the output PDF is tagged;
            </summary>
            <value><c>true</c> if [Tagged PDF]; otherwise, <c>false</c>. Default is false </value>
            <example>
            <code lang = "C#">
            //Initialize HTML to PDF converter
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.IE);
            //Initialize the IE converter settings
            IEConverterSettings ieSettings = new IEConverterSettings();
            //Enable tagged PDF conversion
            ieSettings.IsTaggedPDF = true;
            //Assign IE settings to HTML converter
            htmlConverter.ConverterSettings = ieSettings;
            //Convert URL to PDF
            PdfDocument document = htmlConverter.Convert("https://www.google.com");
            //Save the document.
            document.Save("Sample.pdf");
            document.Close();
            </code>
            <code lang = "VB">
            'Initialize HTML to PDF converter
            Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.IE)
            'Initialize the IE converter settings
            Dim ieSettings As New IEConverterSettings()
            'Enable tagged PDF conversion
            ieSettings.IsTaggedPDF = True
            'Assign IE settings to HTML converter
            htmlConverter.ConverterSettings = ieSettings
            'Convert URL to PDF
            Dim document As PdfDocument = htmlConverter.Convert("https://www.google.com")
            'Save the document.
            document.Save("Sample.pdf")
            document.Close()
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.HtmlConverter.IEConverterSettings.IsPDFA1B">
            <summary>
            Gets or sets a value indicating the output PDF is A1B;
            </summary>
            <value><c>true</c> if conformancelevel is PDFA1B; otherwise, <c>false</c>. Default is false </value>
            <example>
            <code lang = "C#">
            //Initialize HTML to PDF converter
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.IE);
            //Initialize the IE converter settings
            IEConverterSettings ieSettings = new IEConverterSettings();
            //Set PDF A1B conversion
            ieSettings.IsPDFA1B = true;
            //Assign IE settings to HTML converter
            htmlConverter.ConverterSettings = ieSettings;
            //Convert URL to PDF
            PdfDocument document = htmlConverter.Convert("https://www.google.com");
            //Save the document.
            document.Save("Sample.pdf");
            document.Close();
            </code>
            <code lang = "VB">
            'Initialize HTML to PDF converter
            Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.IE)
            'Initialize the IE converter settings
            Dim ieSettings As New IEConverterSettings()
            'Set PDF A1B conversion
            ieSettings.IsPDFA1B = True
            'Assign IE settings to HTML converter
            htmlConverter.ConverterSettings = ieSettings
            'Convert URL to PDF
            Dim document As PdfDocument = htmlConverter.Convert("https://www.google.com")
            'Save the document.
            document.Save("Sample.pdf")
            document.Close()
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.HtmlConverter.IEConverterSettings.EnableForm">
            <summary>
            Gets or sets enable form; If it is enabled then HTML form fields are converted to PDF form fields in the generated PDF document. The default value is false.
            </summary>
            <example>
            <code lang = "C#">
            //Initialize HTML to PDF converter
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.IE);
            //Initialize the IE converter settings
            IEConverterSettings ieSettings = new IEConverterSettings();
            //Enable HTML form to PDF form conversion
            ieSettings.EnableForm = true;
            //Assign IE settings to HTML converter
            htmlConverter.ConverterSettings = ieSettings;
            //Convert URL to PDF
            PdfDocument document = htmlConverter.Convert("https://www.google.com");
            //Save the document.
            document.Save("Sample.pdf");
            document.Close();
            </code>
            <code lang = "VB">
            'Initialize HTML to PDF converter
            Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.IE)
            'Initialize the IE converter settings
            Dim ieSettings As New IEConverterSettings()
            'Enable HTML form to PDF form conversion
            ieSettings.EnableForm = True
            'Assign IE settings to HTML converter
            htmlConverter.ConverterSettings = ieSettings
            'Convert URL to PDF
            Dim document As PdfDocument = htmlConverter.Convert("https://www.google.com")
            'Save the document.
            document.Save("Sample.pdf")
            document.Close()
            </code>
            </example>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Syncfusion.HtmlConverter.IEConverterSettings.HtmlEncoding" -->
        <member name="M:Syncfusion.HtmlConverter.IEConverterSettings.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.HtmlConverter.IEConverterSettings"/> class.
            </summary>
            <remarks>
            To know more details about IE rendering engine, refer this 
            <see href="https://help.syncfusion.com/file-formats/pdf/convert-html-to-pdf/ie">link</see>.
            </remarks>
            <example>
            <code lang = "C#">
            //Initialize HtmlToPdfConverter class with IE rendering Engine.
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(RenderEngine.IE);
            //Setting properties for IE conversion.
            IEConverterSettings ieSettings = new IEConverterSettings();
            ieSettings.AdditionalDelay = 1000;
            ieSettings.AspectRatio = AspectRatio.KeepWidth;
            ieSettings.AutoDetectPageBreak = true;
            ieSettings.ClearInternetCache = true;
            ieSettings.EnableActiveXControl = true;
            ieSettings.EnableBinaryBehaviors = true;
            ieSettings.EnableHyperLink = true;
            ieSettings.EnableJavaScript = true;
            ieSettings.IsPDFA1B = false;
            ieSettings.IsTaggedPDF = false;
            ieSettings.Margin = new PdfMargins { All = 40 };
            ieSettings.Orientation = PdfPageOrientation.Portrait;
            ieSettings.Password = "";
            ieSettings.Username = "";
            htmlConverter.ConverterSettings = ieSettings;
            //Convert HTML to PDF.
            PdfDocument pdfDocument = htmlConverter.Convert("http://www.google.com");
            //Saving and closing PDF document
            pdfDocument.Save("Output.pdf");
            pdfDocument.Close(true);
            </code>
            <code lang="VB">
            'Initialize HtmlToPdfConverter class with IE rendering Engine.
            Dim htmlConverter As New HtmlToPdfConverter(RenderEngine.IE)
            'Setting properties for IE conversion.
            Dim ieSettings As New IEConverterSettings()
            ieSettings.AdditionalDelay = 1000
            ieSettings.AspectRatio = AspectRatio.KeepWidth
            ieSettings.AutoDetectPageBreak = True
            ieSettings.ClearInternetCache = True
            ieSettings.EnableActiveXControl = True
            ieSettings.EnableBinaryBehaviors = True
            ieSettings.EnableHyperLink = True
            ieSettings.EnableJavaScript = True
            ieSettings.IsPDFA1B = False
            ieSettings.IsTaggedPDF = False
            ieSettings.Orientation = PdfPageOrientation.Portrait
            ieSettings.Password = ""
            ieSettings.Username = ""
            htmlConverter.ConverterSettings = ieSettings
            'Convert HTML to PDF.
            Dim pdfDocument As PdfDocument = htmlConverter.Convert("http://www.google.com")
            'Saving and closing PDF document
            pdfDocument.Save("Output.pdf")
            pdfDocument.Close(True)
            </code>
            </example>
        </member>
        <member name="T:Syncfusion.HtmlConverter.WebKitConverterSettings">
            <summary>
            Class which represents the settings of WebKit rendering engine
            </summary>
            <example>
            <code lang = "C#">
            //Initialize HtmlToPdfConverter class with WebKit rendering Engine.
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(RenderEngine.WebKit);
            //Setting properties for WebKit conversion.
            WebKitConverterSettings webKitSettings = new WebKitConverterSettings();
            webKitSettings.AdditionalDelay = 1000;
            webKitSettings.WebKitPath = @"/QtBinaries/";
            webKitSettings.AspectRatio = AspectRatio.None;
            webKitSettings.EnableHyperLink = true;
            webKitSettings.EnableJavaScript = true;
            webKitSettings.Margin = new PdfMargins { All = 40 };
            webKitSettings.Orientation = PdfPageOrientation.Portrait;
            webKitSettings.Password = "";
            webKitSettings.Username = "";
            htmlConverter.ConverterSettings = webKitSettings;
            //Convert HTML to PDF
            PdfDocument pdfDocument = htmlConverter.Convert("http://www.google.com");
            //Saving and closing PDF document
            pdfDocument.Save("Output.pdf");
            pdfDocument.Close(true);
            </code>
            <code lang="VB">
            'Initialize HtmlToPdfConverter class with WebKit rendering Engine.
            Dim htmlConverter As New HtmlToPdfConverter(RenderEngine.WebKit)
            'Setting properties for WebKit conversion.
            Dim webKitSettings As New WebKitConverterSettings()
            webKitSettings.AdditionalDelay = 1000
            webKitSettings.WebKitPath = @"/QtBinaries/"
            webKitSettings.AspectRatio = AspectRatio.None
            webKitSettings.EnableHyperLink = True
            webKitSettings.EnableJavaScript = True
            webKitSettings.Orientation = PdfPageOrientation.Portrait
            webKitSettings.Password = ""
            webKitSettings.Username = ""
            htmlConverter.ConverterSettings = webKitSettings
            'Convert HTML to PDF
            Dim pdfDocument As PdfDocument = htmlConverter.Convert("http://www.google.com")
            'Saving and closing PDF document
            pdfDocument.Save("Output.pdf")
            pdfDocument.Close(True)
            </code>
            </example>
            <seealso cref="T:Syncfusion.HtmlConverter.IHtmlConverterSettings"/>
            <seealso cref="T:Syncfusion.Pdf.Graphics.PdfMargins"/> class
            <seealso cref="T:Syncfusion.Pdf.PdfPageTemplateElement"/> class
            <seealso cref="T:Syncfusion.Pdf.PdfPageOrientation"/>
            <seealso cref="T:Syncfusion.Pdf.PdfPageRotateAngle"/>
            <seealso cref="T:Syncfusion.HtmlConverter.MediaType"/>
            <seealso cref="T:Syncfusion.Pdf.HtmlToPdf.SinglePageLayout"/>
        </member>
        <member name="P:Syncfusion.HtmlConverter.WebKitConverterSettings.TempPath">
            <summary>
            Gets or sets the temp path where the temporary operations are performed if any;
            </summary>
            <value> Temp path which contains internal conversion files.By default %temp%</value>
            <example>
            <code lang = "C#">
            //Initialize HTML to PDF converter 
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.WebKit);
            WebKitConverterSettings settings = new WebKitConverterSettings();
            //Set WebKit path
            settings.WebKitPath = @"/QtBinaries/";
            //Set Temporary Path to generate temporary files
            settings.TempPath = @"C:/HtmlConversion/Temp/";
            //Assign WebKit settings to HTML converter
            htmlConverter.ConverterSettings = settings;
            //Convert URL to PDF
            PdfDocument document = htmlConverter.Convert("https://www.google.com");
            //Save and close the PDF document 
            document.Save("Output.pdf");
            document.Close(true);
            </code>
            <code lang = "VB">
            'Initialize HTML converter with WebKit rendering engine
            Dim htmlConverter As HtmlToPdfConverter = New HtmlToPdfConverter(HtmlRenderingEngine.WebKit)
            Dim settings As WebKitConverterSettings = New WebKitConverterSettings
            'Set WebKit path
            settings.WebKitPath = "/QtBinaries/"
            'Set Temporary Path to generate temporary files
            settings.TempPath = "C:/HtmlConversion/Temp/"
            'Assign WebKit settings to HTML converter
            htmlConverter.ConverterSettings = settings
            'Convert URL to PDF
            Dim document As PdfDocument = htmlConverter.Convert("https://www.google.com")
            'Save and close the PDF document 
            document.Save("Output.pdf")
            document.Close(true)
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.HtmlConverter.WebKitConverterSettings.AdditionalDelay">
            <summary>
            Gets or sets the additional delay to load JavaScript; Unit is Milliseconds;
            </summary>
            <value> A integer value indicating to apply delay for loading scripts.Unit is Milliseconds; By default 0 </value>
            <example>
            <code lang = "C#">
            //Initialize HTML converter with WebKit rendering engine
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.WebKit);
            WebKitConverterSettings webKitSettings = new WebKitConverterSettings();
            //Set WebKit path
            webKitSettings.WebKitPath = @"/QtBinaries/";
            //Set additional delay; units in milliseconds;
            webKitSettings.AdditionalDelay = 3000;
            //Assign WebKit settings to HTML converter
            htmlConverter.ConverterSettings = webKitSettings;
            //Convert URL to PDF
            PdfDocument document = htmlConverter.Convert("https://www.google.com");
            //Save the document.
            document.Save("Sample.pdf");
            document.Close();
            </code>
            <code lang = "VB">
            'Initialize HTML converter with WebKit rendering engine
            Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.WebKit)
            Dim webKitSettings As New WebKitConverterSettings()
            'Set WebKit path
            webKitSettings.WebKitPath = "/QtBinaries/"
            'Set additional delay; units in milliseconds;
            webKitSettings.AdditionalDelay = 3000
            'Assign WebKit settings to HTML converter
            htmlConverter.ConverterSettings = webKitSettings
            'Convert URL to PDF
            Dim document As PdfDocument = htmlConverter.Convert("https://www.google.com")
            'Save the document.
            document.Save("Sample.pdf")
            document.Close()
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.HtmlConverter.WebKitConverterSettings.EnableHyperLink">
            <summary>
            Gets or Sets a value indicating whether to preserve the live-links in the converted document or not;
            </summary>
            <value>True if the Hyperlinks are enabled, otherwise false.Default is true </value>
            <example>
            <code lang = "C#">
            //Initialize HTML converter with WebKit rendering engine
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.WebKit);
            WebKitConverterSettings webKitSettings = new WebKitConverterSettings();
            //Set WebKit path
            webKitSettings.WebKitPath = @"/QtBinaries/"; 
            //Enable hyperlinks; By default - true
            webKitSettings.EnableHyperLink = false;
            //Assign WebKit settings to HTML converter
            htmlConverter.ConverterSettings = webKitSettings;
            //Convert URL to PDF
            PdfDocument document = htmlConverter.Convert("https://www.google.com");
            //Save the document.
            document.Save("Sample.pdf");
            document.Close();
            </code>
            <code lang = "VB">
            'Initialize HTML converter with WebKit rendering engine
            Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.WebKit)
            Dim webKitSettings As New WebKitConverterSettings()
            'Set WebKit path
            webKitSettings.WebKitPath = "/QtBinaries/"
            'Enable hyperlinks; By default - True
            webKitSettings.EnableHyperLink = False
            'Assign WebKit settings to HTML converter
            htmlConverter.ConverterSettings = webKitSettings
            'Convert URL to PDF
            Dim document As PdfDocument = htmlConverter.Convert("https://www.google.com")
            'Save the document.
            document.Save("Sample.pdf")
            document.Close()
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.HtmlConverter.WebKitConverterSettings.EnableJavaScript">
            <summary>
            Gets or Sets a value indicating whether to Enable/Disable JavaScripts in the webpage;
            </summary>
            <value>True if Javascript is enabled, otherwise,false. default is true</value>
            <example>
            <code lang = "C#">
            //Initialize HTML converter with WebKit rendering engine
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.WebKit);
            WebKitConverterSettings webKitSettings = new WebKitConverterSettings();
            //Set WebKit path
            webKitSettings.WebKitPath = @"/QtBinaries/"; 
            //Disable JavaScript; By default - true
            webKitSettings.EnableJavaScript = false;
            //Assign WebKit settings to HTML converter
            htmlConverter.ConverterSettings = webKitSettings;
            //Convert URL to PDF
            PdfDocument document = htmlConverter.Convert("https://www.google.com");
            //Save the document.
            document.Save("Sample.pdf");
            document.Close();
            </code>
            <code lang = "VB">
            'Initialize HTML converter with WebKit rendering engine
            Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.WebKit)
            Dim webKitSettings As New WebKitConverterSettings()
            'Set WebKit path
            webKitSettings.WebKitPath = "/QtBinaries/"
            'Disable JavaScript; By default True
            webKitSettings.EnableJavaScript = False
            'Assign WebKit settings to HTML converter
            htmlConverter.ConverterSettings = webKitSettings
            'Convert URL to PDF
            Dim document As PdfDocument = htmlConverter.Convert("https://www.google.com")
            'Save the document.
            document.Save("Sample.pdf")
            document.Close()
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.HtmlConverter.WebKitConverterSettings.Password">
            <summary>
            Gets or Sets the password;
            </summary>
            <value>String value representing the password of the HTML document. By default ""</value>
            <example>
            <code lang = "C#">
            //Initialize HTML converter with WebKit rendering engine
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.WebKit);
            WebKitConverterSettings webKitSettings = new WebKitConverterSettings();
            //Set WebKit path
            webKitSettings.WebKitPath = @"/QtBinaries/"; 
            // Set username and password to convert windows authenticated webpage to PDF. 
            webKitSettings.Username = "username";
            webKitSettings.Password = "password";
            //Assign WebKit settings to HTML converter
            htmlConverter.ConverterSettings = webKitSettings;
            //Convert URL to PDF
            PdfDocument document = htmlConverter.Convert("https://www.google.com");
            //Save the document.
            document.Save("Sample.pdf");
            document.Close();
            </code>
            <code lang = "VB">
            'Initialize HTML converter with WebKit rendering engine
            Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.WebKit)
            Dim webKitSettings As New WebKitConverterSettings()
            'Set WebKit path
            webKitSettings.WebKitPath = "/QtBinaries/"
            'Set username and password to convert windows authenticated webpage to PDF.
            webKitSettings.Username = "username"
            webKitSettings.Password = "password"
            'Assign WebKit settings to HTML converter
            htmlConverter.ConverterSettings = webKitSettings
            'Convert URL to PDF
            Dim document As PdfDocument = htmlConverter.Convert("https://www.google.com")
            'Save the document.
            document.Save("Sample.pdf")
            document.Close()
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.HtmlConverter.WebKitConverterSettings.Username">
            <summary>
            Gets or Sets the Username;
            </summary>
            <value>String value representing the password of the HTML document. By default ""</value>
            <example>
            <code lang = "C#">
            //Initialize HTML converter with WebKit rendering engine
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.WebKit);
            WebKitConverterSettings webKitSettings = new WebKitConverterSettings();
            //Set WebKit path
            webKitSettings.WebKitPath = @"/QtBinaries/"; 
            // Set username and password to convert windows authenticated webpage to PDF. 
            webKitSettings.Username = "username";
            webKitSettings.Password = "password";
            //Assign WebKit settings to HTML converter
            htmlConverter.ConverterSettings = webKitSettings;
            //Convert URL to PDF
            PdfDocument document = htmlConverter.Convert("https://www.google.com");
            //Save the document.
            document.Save("Sample.pdf");
            document.Close();
            </code>
            <code lang = "VB">
            'Initialize HTML converter with WebKit rendering engine
            Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.WebKit)
            Dim webKitSettings As New WebKitConverterSettings()
            'Set WebKit path
            webKitSettings.WebKitPath = "/QtBinaries/"
            'Set username and password to convert windows authenticated webpage to PDF.
            webKitSettings.Username = "username"
            webKitSettings.Password = "password"
            'Assign WebKit settings to HTML converter
            htmlConverter.ConverterSettings = webKitSettings
            'Convert URL to PDF
            Dim document As PdfDocument = htmlConverter.Convert("https://www.google.com")
            'Save the document.
            document.Save("Sample.pdf")
            document.Close()
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.HtmlConverter.WebKitConverterSettings.Margin">
            <summary>
            Gets or sets the margins to the PDF document;
            </summary>
            <value>The <see cref="T:Syncfusion.Pdf.Graphics.PdfMargins"/>, provides margins to the PDF page. By default , PDF margin is 0.</value>
            <example>
            <code lang = "C#">
            //Initialize HTML to PDF converter.
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.WebKit);
            //Initialize the WebKit converter settings.
            WebKitConverterSettings webKitSettings = new WebKitConverterSettings();
            //Set WebKitPath
            webKitSettings.WebKitPath = @"/QtBinaries/";
            //Set margins
            webKitSettings.Margin.All = 20;
            //Assign WebKit settings to HTML converter.
            htmlConverter.ConverterSettings = webKitSettings;
            //Convert HTML string to PDF.
            PdfDocument document = htmlConverter.Convert("https://www.google.com");
            //Save the document.
            document.Save("Sample.pdf");
            document.Close();
            </code>
            <code lang = "VB">
            'Initialize HTML to PDF converter.
            Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.WebKit)
            'Initialize the WebKit converter settings.
            Dim webKitSettings As New WebKitConverterSettings()
            'Set WebKitPath
            webKitSettings.WebKitPath = "/QtBinaries/"
            'Set margins
            webKitSettings.Margin.All = 20
            'Assign WebKit settings to HTML converter.
            htmlConverter.ConverterSettings = webKitSettings
            'Convert HTML string to PDF.
            Dim document As PdfDocument = htmlConverter.Convert("https://www.google.com")
            'Save the document.
            document.Save("Sample.pdf")
            document.Close()
            </code>
            </example>
            <seealso cref="T:Syncfusion.Pdf.Graphics.PdfMargins"/> class
        </member>
        <member name="P:Syncfusion.HtmlConverter.WebKitConverterSettings.PdfHeader">
            <summary>
            Gets or sets the Header to the PDF document;
            </summary>
            <value>The <see cref="T:Syncfusion.Pdf.PdfPageTemplateElement"/> to draw into the PDF page. By default null</value>
            <example>
            <code lang = "C#">
            //Initialize HTML to PDF converter
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.WebKit);
            //Initialize the WebKit converter settings
            WebKitConverterSettings webKitSettings = new WebKitConverterSettings();
            //Set WebKitPath
            webKitSettings.WebKitPath = "/QtBinaries/";
            //Create PDF page template element for header with bounds.
            PdfPageTemplateElement header = new PdfPageTemplateElement(new RectangleF(0, 0, webKitSettings.PdfPageSize.Width, 50));
            //Create font and brush for header element.
            PdfFont font = new PdfStandardFont(PdfFontFamily.Helvetica, 7);
            PdfBrush brush = new PdfSolidBrush(Color.Black);
            //Draw the header string in header template element. 
            header.Graphics.DrawString("This is header", font, brush, PointF.Empty);
            //Assign the header element to PdfHeader of WebKit settings.
            webKitSettings.PdfHeader = header;
            //Assign WebKit settings to HTML converter
            htmlConverter.ConverterSettings = webKitSettings;
            //Convert URL to PDF
            PdfDocument document = htmlConverter.Convert("https://www.google.com");
            //Save the document.
            document.Save("Sample.pdf");
            document.Close();
            </code>
            <code lang = "VB">
            'Initialize HTML to PDF converter
            Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.WebKit)
            'Initialize the WebKit converter settings
            Dim webKitSettings As New WebKitConverterSettings()
            'Set WebKitPath
            webKitSettings.WebKitPath = "/QtBinaries/"
            'Create PDF page template element for header with bounds.
            Dim header As New PdfPageTemplateElement(New RectangleF(0, 0, webKitSettings.PdfPageSize.Width, 50))
            'Create font and brush for header element.
            Dim font As PdfFont = New PdfStandardFont(PdfFontFamily.Helvetica, 7)
            Dim brush As PdfBrush = New PdfSolidBrush(Color.Black)
            'Draw the header string in header template element. 
            header.Graphics.DrawString("This is header", font, brush, PointF.Empty)
            'Assign the header element to PdfHeader of WebKit settings.
            webKitSettings.PdfHeader = header
            'Assign WebKit settings to HTML converter
            htmlConverter.ConverterSettings = webKitSettings
            'Convert URL to PDF
            Dim document As PdfDocument = htmlConverter.Convert("https://www.google.com")
            'Save the document.
            document.Save("Sample.pdf")
            document.Close()
            </code>
            </example>
            <seealso cref="T:Syncfusion.Pdf.PdfPageTemplateElement"/> class
        </member>
        <member name="P:Syncfusion.HtmlConverter.WebKitConverterSettings.PdfFooter">
            <summary>
            Gets or sets the Footer to the PDF document;
            </summary>
            <value>The <see cref="T:Syncfusion.Pdf.PdfPageTemplateElement"/> to draw into the PDF page. By default null</value>
            <example>
            <code lang = "C#">
            //Initialize HTML to PDF converter
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.WebKit);
            //Initialize the WebKit converter settings
            WebKitConverterSettings webKitSettings = new WebKitConverterSettings();
            //Set WebKitPath
            webKitSettings.WebKitPath = "/QtBinaries/";
            //Create PDF page template element for footer with bounds.
            PdfPageTemplateElement footer = new PdfPageTemplateElement(new RectangleF(0, 0, webKitSettings.PdfPageSize.Width, 50));
            //Create font and brush for header element.
            PdfFont font = new PdfStandardFont(PdfFontFamily.Helvetica, 7);
            PdfBrush brush = new PdfSolidBrush(Color.Black);
            //Draw the footer string in footer template element. 
            footer.Graphics.DrawString("This is footer", font, brush, PointF.Empty);
            //Assign the footer element to PdfFooter of WebKit settings.
            webKitSettings.PdfFooter = footer;
            //Assign WebKit settings to HTML converter
            htmlConverter.ConverterSettings = webKitSettings;
            //Convert URL to PDF
            PdfDocument document = htmlConverter.Convert("https://www.google.com");
            //Save the document.
            document.Save("Sample.pdf");
            document.Close();
            </code>
            <code lang = "VB">
            'Initialize HTML to PDF converter
            Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.WebKit)
            'Initialize the WebKit converter settings
            Dim webKitSettings As New WebKitConverterSettings()
            'Set WebKitPath
            webKitSettings.WebKitPath = "/QtBinaries/"
            'Create PDF page template element for footer with bounds.
            Dim footer As New PdfPageTemplateElement(New RectangleF(0, 0, webKitSettings.PdfPageSize.Width, 50))
            'Create font and brush for header element.
            Dim font As PdfFont = New PdfStandardFont(PdfFontFamily.Helvetica, 7)
            Dim brush As PdfBrush = New PdfSolidBrush(Color.Black)
            'Draw the footer string in footer template element. 
            footer.Graphics.DrawString("This is footer", font, brush, PointF.Empty)
            'Assign the footer element to PdfFooter of WebKit settings.
            webKitSettings.PdfFooter = footer
            'Assign WebKit settings to HTML converter
            htmlConverter.ConverterSettings = webKitSettings
            'Convert URL to PDF
            Dim document As PdfDocument = htmlConverter.Convert("https://www.google.com")
            'Save the document.
            document.Save("Sample.pdf")
            document.Close()
            </code>
            </example>
            <seealso cref="T:Syncfusion.Pdf.PdfPageTemplateElement"/> class
        </member>
        <member name="P:Syncfusion.HtmlConverter.WebKitConverterSettings.Orientation">
            <summary>
            Gets or sets the Orientation of the PDF document;
            </summary>
            <value>The <see cref="T:Syncfusion.Pdf.PdfPageOrientation"/>, provides the orientation of the PDF page.By default Portrait</value>
            <example>
            <code lang = "C#">
            //Initialize HTML to PDF converter
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.WebKit);
            //Initialize the WebKit converter settings
            WebKitConverterSettings webKitSettings = new WebKitConverterSettings();
            //Set WebKitPath
            webKitSettings.WebKitPath = "/QtBinaries/";
            //Set PDF page orientation
            webKitSettings.Orientation = PdfPageOrientation.Landscape;
            //Assign WebKit settings to HTML converter
            htmlConverter.ConverterSettings = webKitSettings;
            //Convert URL to PDF
            PdfDocument document = htmlConverter.Convert("https://www.google.com");
            //Save the document.
            document.Save("Sample.pdf");
            document.Close();
            </code>
            <code lang = "VB">
            'Initialize HTML to PDF converter
            Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.WebKit)
            'Initialize the WebKit converter settings
            Dim webKitSettings As New WebKitConverterSettings()
            'Set WebKitPath
            webKitSettings.WebKitPath = "/QtBinaries/"
            'Set PDF page orientation
            webKitSettings.Orientation = PdfPageOrientation.Landscape
            'Assign WebKit settings to HTML converter
            htmlConverter.ConverterSettings = webKitSettings
            'Convert URL to PDF
            Dim document As PdfDocument = htmlConverter.Convert("https://www.google.com")
            'Save the document.
            document.Save("Sample.pdf")
            document.Close()
            </code>
            </example>
            <seealso cref="T:Syncfusion.Pdf.PdfPageOrientation"/>
        </member>
        <member name="P:Syncfusion.HtmlConverter.WebKitConverterSettings.PdfPageSize">
            <summary>
            Gets or sets the size of the PDF page;
            </summary>
             <remarks>Default value: 595 * 842 pixels(A4 size)</remarks>
            <example>
            <code lang = "C#">
            //Initialize HTML to PDF converter
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.WebKit);
            //Initialize the WebKit converter settings
            WebKitConverterSettings webKitSettings = new WebKitConverterSettings();
            //Set WebKitPath
            webKitSettings.WebKitPath = "/QtBinaries/";
            //Set PDF page size
            webKitSettings.PdfPageSize = new SizeF(595, 842);
            //Assign WebKit settings to HTML converter
            htmlConverter.ConverterSettings = webKitSettings;
            //Convert URL to PDF
            PdfDocument document = htmlConverter.Convert("https://www.google.com");
            //Save the document.
            document.Save("Sample.pdf");
            document.Close();
            </code>
            <code lang = "VB">
            'Initialize HTML to PDF converter
            Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.WebKit)
            'Initialize the WebKit converter settings
            Dim webKitSettings As New WebKitConverterSettings()
            'Set WebKitPath
            webKitSettings.WebKitPath = "/QtBinaries/"
            'Set PDF page size
            webKitSettings.PdfPageSize = New SizeF(595, 842)
            'Assign WebKit settings to HTML converter
            htmlConverter.ConverterSettings = webKitSettings
            'Convert URL to PDF
            Dim document As PdfDocument = htmlConverter.Convert("https://www.google.com")
            'Save the document.
            document.Save("Sample.pdf")
            document.Close()
            </code>
            </example>
            <seealso cref="T:Syncfusion.Pdf.PdfPageSize"/>
        </member>
        <member name="P:Syncfusion.HtmlConverter.WebKitConverterSettings.AspectRatio">
            <summary>
            Gets or sets the aspect ratio;
            </summary>
            <value>The <see cref="P:Syncfusion.HtmlConverter.WebKitConverterSettings.AspectRatio"/> By default None </value>
            <example>
            <code lang = "C#">
            //Initialize HTML to PDF converter
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.WebKit);
            //Initialize the WebKit converter settings
            WebKitConverterSettings webKitSettings = new WebKitConverterSettings();
            //Set WebKitPath
            webKitSettings.WebKitPath = "/QtBinaries/";
            //Set AspectRatio
            webKitSettings.AspectRatio = AspectRatio.None;
            //Assign WebKit settings to HTML converter
            htmlConverter.ConverterSettings = webKitSettings;
            //Convert URL to PDF
            PdfDocument document = htmlConverter.Convert("https://www.google.com");
            //Save the document.
            document.Save("Sample.pdf");
            document.Close();
            </code>
            <code lang = "VB">
            'Initialize HTML to PDF converter
            Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.WebKit)
            'Initialize the WebKit converter settings
            Dim webKitSettings As New WebKitConverterSettings()
            'Set WebKitPath
            webKitSettings.WebKitPath = "/QtBinaries/"
            'Set AspectRatio
            webKitSettings.AspectRatio = AspectRatio.None
            'Assign WebKit settings to HTML converter
            htmlConverter.ConverterSettings = webKitSettings
            'Convert URL to PDF
            Dim document As PdfDocument = htmlConverter.Convert("https://www.google.com")
            'Save the document.
            document.Save("Sample.pdf")
            document.Close()
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.HtmlConverter.WebKitConverterSettings.PageRotateAngle">
            <summary>
            Gets or sets the number of degrees by which the page should be rotated clockwise when displayed or printed.
            </summary>
            <value>The <see cref="T:Syncfusion.Pdf.PdfPageRotateAngle"/>,provides number of degrees by which the page should be rotated clockwise when displayed or printed </value>
            <remarks>Default value: RotateAngle0 </remarks>
            <example>
            <code lang = "C#">
            //Initialize HTML to PDF converter
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.WebKit);
            //Initialize the WebKit converter settings
            WebKitConverterSettings webKitSettings = new WebKitConverterSettings();
            //Set WebKitPath
            webKitSettings.WebKitPath = "/QtBinaries/";
            //Set PDF page rotation angle
            webKitSettings.PageRotateAngle = PdfPageRotateAngle.RotateAngle90;
            //Assign WebKit settings to HTML converter
            htmlConverter.ConverterSettings = webKitSettings;
            //Convert URL to PDF
            PdfDocument document = htmlConverter.Convert("https://www.google.com");
            //Save the document.
            document.Save("Sample.pdf");
            document.Close();
            </code>
            <code lang = "VB">
            'Initialize HTML to PDF converter
            Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.WebKit)
            'Initialize the WebKit converter settings
            Dim webKitSettings As New WebKitConverterSettings()
            'Set WebKitPath
            webKitSettings.WebKitPath = "/QtBinaries/"
            'Set PDF page rotation angle
            webKitSettings.PageRotateAngle = PdfPageRotateAngle.RotateAngle90
            'Assign WebKit settings to HTML converter
            htmlConverter.ConverterSettings = webKitSettings
            'Convert URL to PDF
            Dim document As PdfDocument = htmlConverter.Convert("https://www.google.com")
            'Save the document.
            document.Save("Sample.pdf")
            document.Close()
            </code>
            </example>
            <seealso cref="T:Syncfusion.Pdf.PdfPageRotateAngle"/>
        </member>
        <member name="P:Syncfusion.HtmlConverter.WebKitConverterSettings.SplitTextLines">
            <summary>
            Gets or sets a value indicating whether [split text lines].
            </summary>
             <value><c>true</c> if [Split Text lines]; otherwise, <c>false</c>.</value>
            <example>
            <code lang = "C#">
            //Initialize HTML to PDF converter
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.WebKit);
            //Initialize the WebKit converter settings
            WebKitConverterSettings webKitSettings = new WebKitConverterSettings();
            //Set WebKitPath
            webKitSettings.WebKitPath = "/QtBinaries/";
            //Set SplitTextLines to avoid text split between pages.
            webKitSettings.SplitTextLines = false;
            //Assign WebKit settings to HTML converter
            htmlConverter.ConverterSettings = webKitSettings;
            //Convert URL to PDF
            PdfDocument document = htmlConverter.Convert("https://www.google.com");
            //Save the document.
            document.Save("Sample.pdf");
            document.Close();
            </code>
            <code lang = "VB">
            'Initialize HTML to PDF converter
            Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.WebKit)
            'Initialize the WebKit converter settings
            Dim webKitSettings As New WebKitConverterSettings()
            'Set WebKitPath
            webKitSettings.WebKitPath = "/QtBinaries/"
            'Set SplitTextLines to avoid text split between pages.
            webKitSettings.SplitTextLines = False
            'Assign WebKit settings to HTML converter
            htmlConverter.ConverterSettings = webKitSettings
            'Convert URL to PDF
            Dim document As PdfDocument = htmlConverter.Convert("https://www.google.com")
            'Save the document.
            document.Save("Sample.pdf")
            document.Close()
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.HtmlConverter.WebKitConverterSettings.SplitImages">
            <summary>
            Gets or sets a value indicating whether [split images].
            </summary>
            <value><c>true</c> if [Split Images]; otherwise, <c>false</c>.</value>
            <example>
            <code lang = "C#">
            //Initialize HTML to PDF converter
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.WebKit);
            //Initialize the WebKit converter settings
            WebKitConverterSettings webKitSettings = new WebKitConverterSettings();
            //Set WebKitPath
            webKitSettings.WebKitPath = "/QtBinaries/";
            //Set SplitImages to avoid image split between pages.
            webKitSettings.SplitImages = false;
            //Assign WebKit settings to HTML converter
            htmlConverter.ConverterSettings = webKitSettings;
            //Convert URL to PDF
            PdfDocument document = htmlConverter.Convert("https://www.google.com");
            //Save the document.
            document.Save("Sample.pdf");
            document.Close();
            </code>
            <code lang = "VB">
            'Initialize HTML to PDF converter
            Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.WebKit)
            'Initialize the WebKit converter settings
            Dim webKitSettings As New WebKitConverterSettings()
            'Set WebKitPath
            webKitSettings.WebKitPath = "/QtBinaries/"
            'Set SplitImages to avoid image split between pages.
            webKitSettings.SplitImages = False
            'Assign WebKit settings to HTML converter
            htmlConverter.ConverterSettings = webKitSettings
            'Convert URL to PDF
            Dim document As PdfDocument = htmlConverter.Convert("https://www.google.com")
            'Save the document.
            document.Save("Sample.pdf")
            document.Close()
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.HtmlConverter.WebKitConverterSettings.WebKitPath">
            <summary>
            Gets or Sets WebKit assembly path; 
            </summary>
            <value> Specifies WebKit assemblies path.By default bin folder</value>
            <example>
            <code lang = "C#">
            //Initialize HTML to PDF converter
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.WebKit);
            //Initialize the WebKit converter settings
            WebKitConverterSettings webKitSettings = new WebKitConverterSettings();
            //Set WebKitPath
            webKitSettings.WebKitPath = "/QtBinaries/";
            //Assign WebKit settings to HTML converter
            htmlConverter.ConverterSettings = webKitSettings;
            //Convert URL to PDF
            PdfDocument document = htmlConverter.Convert("https://www.google.com");
            //Save the document.
            document.Save("Sample.pdf");
            document.Close();
            </code>
            <code lang = "VB">
            'Initialize HTML to PDF converter
            Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.WebKit)
            'Initialize the WebKit converter settings
            Dim webKitSettings As New WebKitConverterSettings()
            'Set WebKitPath
            webKitSettings.WebKitPath = "/QtBinaries/"
            'Assign WebKit settings to HTML converter
            htmlConverter.ConverterSettings = webKitSettings
            'Convert URL to PDF
            Dim document As PdfDocument = htmlConverter.Convert("https://www.google.com")
            'Save the document.
            document.Save("Sample.pdf")
            document.Close()
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.HtmlConverter.WebKitConverterSettings.WebKitViewPort">
            <summary>
            WebKit view port size; 
            </summary>
            <value>By default use system ViewPort size</value>
            <example>
            <code lang = "C#">
            //Initialize HTML converter with WebKit rendering engine
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.WebKit);
            WebKitConverterSettings webKitSettings = new WebKitConverterSettings();
            //Set WebKit path
            webKitSettings.WebKitPath = @"/QtBinaries/"; 
            //Set WebKit viewport size
            webKitSettings.WebKitViewPort = new Size(800,0);         
            //Assign WebKit settings to HTML converter
            htmlConverter.ConverterSettings = webKitSettings;
            //Convert URL to PDF
            PdfDocument document = htmlConverter.Convert("https://www.google.com");    
            //Save the document.
            document.Save("Sample.pdf");
            document.Close();
            </code>
            <code lang = "VB">
            'Initialize HTML converter with WebKit rendering engine
            Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.WebKit)
            Dim webKitSettings As New WebKitConverterSettings()
            'Set WebKit path
            webKitSettings.WebKitPath = "/QtBinaries/"
            'Set WebKit viewport size
            webKitSettings.WebKitViewPort = New Size(800, 0)
            'Assign WebKit settings to HTML converter
            htmlConverter.ConverterSettings = webKitSettings
            'Convert URL to PDF
            Dim document As PdfDocument = htmlConverter.Convert("https://www.google.com")
            'Save the document.
            document.Save("Sample.pdf")
            document.Close()
            </code>
            </example>
            <seealso cref="T:System.Drawing.Size"/>
        </member>
        <member name="P:Syncfusion.HtmlConverter.WebKitConverterSettings.EnableBookmarks">
            <summary>
            A property indicating if the automatic creation of bookmarks in PDF for the H1 to H6 HTML elements is enabled or not. By default the automatic bookmarks creation is disabled
            </summary>
            <example>
            <code lang = "C#">
            //Initialize HTML converter 
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.WebKit);
            // WebKit converter settings
            WebKitConverterSettings webKitSettings = new WebKitConverterSettings();
            //Assign the WebKit binaries path
            webKitSettings.WebKitPath = @"/QtBinaries/";
            // Enable bookmarks
            webKitSettings.EnableBookmarks = true;
            //Assign the WebKit settings
            htmlConverter.ConverterSettings = webKitSettings;
            //Convert HTML to PDF
            PdfDocument document = htmlConverter.Convert("input.html");
            //Save and close the PDF document
            document.Save("Output.pdf");
            document.Close(true);
            </code>
            <code lang = "VB">
            'Initialize HTML converter 
            Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.WebKit)
            'WebKit converter settings 
            Dim webKitSettings As New WebKitConverterSettings()
            'Assign the WebKit binaries path
            webKitSettings.WebKitPath = "/QtBinaries/"
            'Enable bookmarks
            webKitSettings.EnableBookmarks = True
            'Assign the WebKit settings 
            htmlConverter.ConverterSettings = webKitSettings
            'Convert HTML to PDF 
            Dim document As PdfDocument = htmlConverter.Convert("input.html")
            'Save and close the document
            document.Save("Output.pdf")
            document.Close()
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.HtmlConverter.WebKitConverterSettings.EnableToc">
            <summary>
            A property indicating if the automatic creation of a table of contents items for the H1 to H6 HTML elements is enabled or not. By default this property is false
            </summary>
            <example>
            <code lang = "C#">
            //Initialize HTML converter 
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.WebKit);
            // WebKit converter settings
            WebKitConverterSettings webKitSettings = new WebKitConverterSettings();
            //Assign the WebKit binaries path
            webKitSettings.WebKitPath = @"/QtBinaries/";
            // Enable table of contents
            webKitSettings.EnableToc = true;
            //Assign the WebKit settings
            htmlConverter.ConverterSettings = webKitSettings;
            //Convert HTML to PDF
            PdfDocument document = htmlConverter.Convert("input.html");
            //Save and close the PDF document
            document.Save("Output.pdf");
            document.Close(true);
            </code>
            <code lang = "VB">
            'Initialize HTML converter 
            Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.WebKit)
            'WebKit converter settings 
            Dim webKitSettings As New WebKitConverterSettings()
            'Assign the WebKit binaries path 
            webKitSettings.WebKitPath = "/QtBinaries/"
            'Enable table of contents
            webKitSettings.EnableToc = True
            'Assign the WebKit settings
            htmlConverter.ConverterSettings = webKitSettings
            'Convert HTML to PDF 
            Dim document As PdfDocument = htmlConverter.Convert("input.html")
            'Save and close the document
            document.Save("Output.pdf")
            document.Close()
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.HtmlConverter.WebKitConverterSettings.Toc">
            <summary>
            Gets or sets Toc styles
            </summary>
            <example>
            <code lang = "C#">
            //Initialize HTML to PDF converter with WebKit Rendering Engine.
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.WebKit);
            //Initialize HTML to PDF converter
            WebKitConverterSettings webKitSettings = new WebKitConverterSettings();
            //Assign the WebKit binaries path
            webKitSettings.WebKitPath = @"/QtBinaries/";
            //Enable TOC
            webKitSettings.EnableToc = true;
            //Set the style for level 1(H1) items in table of contents
            HtmlToPdfTocStyle tocstyleH1 = new HtmlToPdfTocStyle();
            tocstyleH1.Font = new PdfStandardFont(PdfFontFamily.TimesRoman, 10, PdfFontStyle.Regular);
            tocstyleH1.BackgroundColor = new PdfSolidBrush(new PdfColor(Color.FromArgb(68, 114, 196)));
            tocstyleH1.ForeColor = PdfBrushes.White;
            tocstyleH1.Padding = new PdfPaddings(5, 5, 3, 3);
            webKitSettings.Toc.SetItemStyle(1, tocstyleH1);
            //Assign the WebKit settings
            htmlConverter.ConverterSettings = webKitSettings;
            //Convert HTML to PDF
            PdfDocument document = htmlConverter.Convert("input.html");
            //Save and close the PDF document
            document.Save("Output.pdf");
            document.Close(true);
            </code>
            <code lang = "VB">
            'Initialize HTML to PDF converter with WebKit Rendering Engine.
            Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.WebKit)
            'Initialize HTML to PDF converter
            Dim webKitSettings As New WebKitConverterSettings()
            'Assign the WebKit binaries path
            webKitSettings.WebKitPath = "/QtBinaries/"
            'Enable TOC
            webKitSettings.EnableToc = True
            'Set the style for level 1(H1) items in table of contents
            Dim tocstyleH1 As New HtmlToPdfTocStyle()
            tocstyleH1.Font = New PdfStandardFont(PdfFontFamily.TimesRoman, 10, PdfFontStyle.Regular)
            tocstyleH1.BackgroundColor = New PdfSolidBrush(New PdfColor(Color.FromArgb(68, 114, 196)))
            tocstyleH1.ForeColor = PdfBrushes.White
            tocstyleH1.Padding = New PdfPaddings(5, 5, 3, 3)
            webKitSettings.Toc.SetItemStyle(1, tocstyleH1)
            'Assign the WebKit settings
            htmlConverter.ConverterSettings = webKitSettings
            'Convert HTML to PDF
            Dim document As PdfDocument = htmlConverter.Convert("input.html")
            'Save and close the PDF document
            document.Save("Output.pdf")
            document.Close(True)
            </code>
            </example>
            <seealso cref="T:Syncfusion.Pdf.HtmlToPdf.HtmlToPdfToc"/> class
        </member>
        <member name="P:Syncfusion.HtmlConverter.WebKitConverterSettings.Cookies">
            <summary>
            Gets or sets cookie collection with names and values
            </summary>
            <value> The cookies Collection </value>
            <example>
            <code lang = "C#">
            //Initialize HTML converter
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.WebKit);
            // WebKit converter settings
            WebKitConverterSettings webKitSettings = new WebKitConverterSettings();
            //Assign the WebKit binaries path
            webKitSettings.WebKitPath = @"/QtBinaries/";
            // Add cookies as name and value pair
            webKitSettings.Cookies.Add("CookieName1", " CookieValue1");
            webKitSettings.Cookies.Add("CookieName2", " CookieValue2");
            //Assign the WebKit settings
            htmlConverter.ConverterSettings = webKitSettings;
            //Convert url to pdf
            PdfDocument document = htmlConverter.Convert("https://www.google.com");
            //Save and close the PDF document
            document.Save("Output.pdf");
            document.Close(true);
            </code>
            <code lang = "VB">
            'Initialize HTML converter 
            Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.WebKit)
            'WebKit converter settings 
            Dim webKitSettings As New WebKitConverterSettings()
            'Assign the WebKit binaries path 
            webKitSettings.WebKitPath = "/QtBinaries/"
            'Add cookies
            webKitSettings.Cookies.Add("Name1", "Value1")
            webKitSettings.Cookies.Add("Name2", "Value2")
            'Assign the WebKit settings 
            htmlConverter.ConverterSettings = webKitSettings
            'Convert HTML to PDF 
            Dim document As PdfDocument = htmlConverter.Convert("https://www.google.com ")
            'Save and close the document
            document.Save("Output.pdf")
            document.Close()
            </code>
            </example>
            <seealso cref="T:Syncfusion.HtmlConverter.CookieCollection"/> Class
        </member>
        <member name="P:Syncfusion.HtmlConverter.WebKitConverterSettings.HttpPostFields">
            <summary>
            Gets or sets the HTTP post collection fields.
            </summary>
            <remarks>
            Presence of elements in this collection will initiate Post request or else it will proceed with Get request.
            </remarks>
            <example>
            <code lang = "C#">
            //Initialize HTML converter
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.WebKit);
            // WebKit converter settings
            WebKitConverterSettings webKitSettings = new WebKitConverterSettings();
            //Assign the WebKit binaries path
            webKitSettings.WebKitPath = @"/QtBinaries/";
            //Add post parameters
            webKitSettings.HttpPostFields.Add("firstName", "Andrew");
            webKitSettings.HttpPostFields.Add("lastName", "Fuller");
            //Assign the WebKit settings
            htmlConverter.ConverterSettings = webKitSettings;
            //Convert HTML to PDF
            PdfDocument document = htmlConverter.Convert("http://asp.syncfusion.com/demos/http_post_get/default.aspx");
            //Save and close the PDF document
            document.Save("Output.pdf");
            document.Close(true);
            </code>
            <code lang = "VB">
            'Initialize HTML converter 
            Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.WebKit)
            'WebKit converter settings 
            Dim webKitSettings As New WebKitConverterSettings()
            'Assign the WebKit binaries path 
            webKitSettings.WebKitPath = "/QtBinaries/"
            'Add post parameters
            webKitSettings.HttpPostFields.Add("firstName", "Andrew")
            webKitSettings.HttpPostFields.Add("lastName", "Fuller")
            'Assign the WebKit settings 
            htmlConverter.ConverterSettings = webKitSettings
            'Convert HTML to PDF
            Dim document As PdfDocument = htmlConverter.Convert("http://asp.syncfusion.com/demos/http_post_get/default.aspx")
            'Save and close the document
            document.Save("Output.pdf")
            document.Close()
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.HtmlConverter.WebKitConverterSettings.WindowStatus">
            <summary>
            Gets or Sets the window status
            </summary>
            <example>
            <code lang = "C#">
            //Initialize HTML converter 
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.WebKit);
            // WebKit converter settings
            WebKitConverterSettings webKitSettings = new WebKitConverterSettings();
            //Assign the WebKit binaries path
            webKitSettings.WebKitPath = @"/QtBinaries/";
            // Set windows status.
            webKitSettings.WindowStatus = "completed";
            //Assign the WebKit settings
            htmlConverter.ConverterSettings = webKitSettings;
            //Convert HTML to PDF
            PdfDocument document = htmlConverter.Convert("input.html");
            //Save and close the PDF document
            document.Save("Output.pdf");
            document.Close(true);
            </code>
            <code lang = "VB">
            'Initialize HTML converter
            Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.WebKit)
            'WebKit converter settings
            Dim webKitSettings As New WebKitConverterSettings()
            'Assign the WebKit binaries path
            webKitSettings.WebKitPath = "/QtBinaries/"
            'Set windows status.
            webKitSettings.WindowStatus = "completed"
            'Assign the WebKit settings
            htmlConverter.ConverterSettings = webKitSettings
            'Convert HTML to PDF
            Dim document As PdfDocument = htmlConverter.Convert("input.html")
            'Save and close the PDF document
            document.Save("Output.pdf")
            document.Close()
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.HtmlConverter.WebKitConverterSettings.EnableForm">
             <summary>
             Gets or sets enable form; If it is enabled then HTML form fields are converted to PDF form fields in the generated PDF document. The default value is false.
             </summary>
             <example>
             <code lang = "C#">
             //Initialize HTML converter 
             HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.WebKit);
             // WebKit converter settings 
             WebKitConverterSettings webKitSettings = new WebKitConverterSettings();
             //Assign the WebKit binaries path
             webKitSettings.WebKitPath = @"/QtBinaries/";
             //Set enable form
             webKitSettings.EnableForm = true;
             //Assign the WebKit settings
             htmlConverter.ConverterSettings = webKitSettings;
             //Convert HTML to PDF
             PdfDocument document = htmlConverter.Convert("http://asp.syncfusion.com/demos/http_post_get/default.aspx");
             //Save and close the PDF document
             document.Save("Output.pdf");
             document.Close(true);
             </code>
             <code lang = "VB">
             'Initialize HTML converter 
             Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.WebKit)
             'WebKit converter settings 
             Dim webKitSettings As New WebKitConverterSettings()
             'Assign the WebKit binaries path 
             webKitSettings.WebKitPath = "/QtBinaries/"
             'Set enable form
             webKitSettings.EnableForm = True
             'Assign the WebKit settings
             htmlConverter.ConverterSettings = webKitSettings
             'Convert HTML to PDF 
             Dim document As PdfDocument = htmlConverter.Convert("http://asp.syncfusion.com/demos/http_post_get/default.aspx")
             'Save and close the PDF document
             document.Save("Output.pdf")
             document.Close()
             </code>
            </example>
        </member>
        <member name="P:Syncfusion.HtmlConverter.WebKitConverterSettings.EnableRepeatTableHeader">
            <summary>
            Gets or sets the repetition of table header. By enabling this property, will repeat the table header on every page break. The default value is false.
            </summary>
            <example>
            <code lang = "C#">
            //Initialize HTML converter 
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.WebKit);
            // WebKit converter settings 
            WebKitConverterSettings webKitSettings = new WebKitConverterSettings();
            //Assign the WebKit binaries path
            webKitSettings.WebKitPath = @"/QtBinaries/";
            // Enable html table header repeat on every page.
            webKitSettings.EnableRepeatTableHeader = true;
            //Assign the WebKit settings
            htmlConverter.ConverterSettings = webKitSettings;
            //Convert URL to PDF
            PdfDocument document = htmlConverter.Convert("input.html");
            //Save and close the PDF document
            document.Save("Output.pdf");
            document.Close(true);
            </code>
            <code lang = "VB">
            'Initialize HTML converter 
            Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.WebKit)
            ' WebKit converter settings 
            Dim webKitSettings As New WebKitConverterSettings()
            'Assign the WebKit binaries path
            webKitSettings.WebKitPath = "/QtBinaries/"
            ' Enable html table header repeat on every page.
            webKitSettings.EnableRepeatTableHeader = True
            'Assign the WebKit settings
            htmlConverter.ConverterSettings = webKitSettings
            'Convert URL to PDF
            Dim document As PdfDocument = htmlConverter.Convert("input.html")
            'Save and close the PDF document
            document.Save("Output.pdf")
            document.Close(True)
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.HtmlConverter.WebKitConverterSettings.EnableRepeatTableFooter">
            <summary>
            Gets or sets the repetition of table footer. By enabling this property, will repeat the table footer on every page break. The default value is false.
            </summary>
            <example>
            <code lang = "C#">
            //Initialize HTML converter 
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.WebKit);
            // WebKit converter settings 
            WebKitConverterSettings webKitSettings = new WebKitConverterSettings();
            //Assign the WebKit binaries path
            webKitSettings.WebKitPath = @"/QtBinaries/";
            //Enable html table footer repeat on every page.
            webKitSettings.EnableRepeatTableFooter = true;
            //Assign the WebKit settings
            htmlConverter.ConverterSettings = webKitSettings;
            //Convert URL to PDF
            PdfDocument document = htmlConverter.Convert("input.html");
            //Save and close the PDF document
            document.Save("Output.pdf");
            document.Close(true);
            </code>
            <code lang = "VB">
            'Initialize HTML converter 
            Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.WebKit)
            ' WebKit converter settings 
            Dim webKitSettings As New WebKitConverterSettings()
            'Assign the WebKit binaries path
            webKitSettings.WebKitPath = "/QtBinaries/"
            ' Enable html table header repeat on every page.
            webKitSettings.EnableRepeatTableHeader = True
            'Enable html table footer repeat on every page.
            webKitSettings.EnableRepeatTableFooter = True
            'Assign the WebKit settings
            htmlConverter.ConverterSettings = webKitSettings
            'Convert URL to PDF
            Dim document As PdfDocument = htmlConverter.Convert("input.html")
            'Save and close the PDF document
            document.Save("Output.pdf")
            document.Close(True)
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.HtmlConverter.WebKitConverterSettings.MediaType">
            <summary>
            Gets or sets media type of WebKit HTML converter
            </summary>
            <example>
            <code lang = "C#">
            //Initialize HTML converter with WebKit rendering engine
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.WebKit);
            WebKitConverterSettings webKitSettings = new WebKitConverterSettings();
            //Set WebKit path
            webKitSettings.WebKitPath = @"/QtBinaries/"; 
            //Set print media type
            webKitSettings.MediaType = MediaType.Print;
            //Assign WebKit settings to HTML converter
            htmlConverter.ConverterSettings = webKitSettings;
            //Convert URL to PDF
            PdfDocument document = htmlConverter.Convert("https://www.google.com");  
            //Save the document.
            document.Save("Sample.pdf");
            document.Close();
            </code>
            <code>
            'Initialize HTML converter with WebKit rendering engine
            Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.WebKit)
            Dim webKitSettings As New WebKitConverterSettings()
            'Set WebKit path
            webKitSettings.WebKitPath = "/QtBinaries/"
            'Set print media type
            webKitSettings.MediaType = MediaType.Print
            'Assign WebKit settings to HTML converter
            htmlConverter.ConverterSettings = webKitSettings
            'Convert URL to PDF
            Dim document As PdfDocument = htmlConverter.Convert("https://www.google.com")
            'Save the document.
            document.Save("Sample.pdf")
            document.Close()
            </code>
            </example>
            <seealso cref="T:Syncfusion.HtmlConverter.MediaType"/>
        </member>
        <member name="P:Syncfusion.HtmlConverter.WebKitConverterSettings.ProxySettings">
            <summary>
            Gets or sets proxy server settings for WebKit HTML conversion
            </summary>
            <example>
            <code lang = "C#">
            //Initialize HTML converter with WebKit rendering engine
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.WebKit);
            WebKitConverterSettings webKitSettings = new WebKitConverterSettings();
            //Set WebKit path
            webKitSettings.WebKitPath = @"/QtBinaries/";
            //Set manual proxy settings
            webKitSettings.ProxySettings.HostName = "127.0.0.1";
            webKitSettings.ProxySettings.PortNumber = 8080;
            webKitSettings.ProxySettings.Type = WebKitProxyType.Http;
            webKitSettings.ProxySettings.Username = "username";
            webKitSettings.ProxySettings.Password = "password";
            //Assign WebKit settings to HTML converter
            htmlConverter.ConverterSettings = webKitSettings;
            //Convert URL to PDF
            PdfDocument document = htmlConverter.Convert("https://www.google.com");
            //Save the document.
            document.Save("Sample.pdf");
            document.Close();
            </code>
            <code lang = "VB">
            'Initialize HTML converter with WebKit rendering engine
            Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.WebKit)
            Dim webKitSettings As New WebKitConverterSettings()
            'Set WebKit path
            webKitSettings.WebKitPath = "/QtBinaries/"
            'Set manual proxy settings
            webKitSettings.ProxySettings.HostName = "127.0.0.1"
            webKitSettings.ProxySettings.PortNumber = 8080
            webKitSettings.ProxySettings.Type = WebKitProxyType.Http
            webKitSettings.ProxySettings.Username = "username"
            webKitSettings.ProxySettings.Password = "password"
            'Assign WebKit settings to HTML converter
            htmlConverter.ConverterSettings = webKitSettings
            'Convert URL to PDF
            Dim document As PdfDocument = htmlConverter.Convert("https://www.google.com")
            'Save the document.
            document.Save("Sample.pdf")
            document.Close()
            </code>
            </example>
            <seealso cref="T:Syncfusion.HtmlConverter.WebKitProxySettings"/> class
        </member>
        <member name="P:Syncfusion.HtmlConverter.WebKitConverterSettings.EnableOfflineMode">
            <summary>
            Gets or sets the Enable Offline mode; default value false;
            </summary>
            <example>
            <code lang = "C#">
            //Initialize HTML converter with WebKit rendering engine
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.WebKit);
            WebKitConverterSettings webKitSettings = new WebKitConverterSettings();
            //Set WebKit path
            webKitSettings.WebKitPath = @"/QtBinaries/"; 
            //Enable offline mode
            webKitSettings.EnableOfflineMode = true;
            //Assign WebKit settings to HTML converter
            htmlConverter.ConverterSettings = webKitSettings;
            //Convert HTML to PDF
            PdfDocument document = htmlConverter.Convert("input.html");
            //Save the document.
            document.Save("Sample.pdf");
            document.Close();
            </code>
            <code lang = "VB">
            'Initialize HTML converter with WebKit rendering engine
            Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.WebKit)
            Dim webKitSettings As New WebKitConverterSettings()
            'Set WebKit path
            webKitSettings.WebKitPath = "/QtBinaries/"
            'Enable offline mode
            webKitSettings.EnableOfflineMode = True
            'Assign WebKit settings to HTML converter
            htmlConverter.ConverterSettings = webKitSettings
            'Convert HTML to PDF
            Dim document As PdfDocument = htmlConverter.Convert("input.html")
            'Save the document.
            document.Save("Sample.pdf")
            document.Close()
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.HtmlConverter.WebKitConverterSettings.SinglePageLayout">
            <summary>
            Use this option to render the whole HTML content into a single PDF page
            </summary>
            <example>
            <code lang="C#">
            //Initialize HTML to PDF converter 
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.WebKit);
            //Create a new instance for webkit converter settings.
            WebKitConverterSettings settings = new WebKitConverterSettings();
            //Set WebKit path
            settings.WebKitPath = @"/QtBinaries/";
            //Set signle page layout.
            settings.SinglePageLayout = SinglePageLayout.FitHeight;
            //Assign WebKit settings to HTML converter
            htmlConverter.ConverterSettings = settings;          
            //Convert URL to PDF
            PdfDocument document = htmlConverter.Convert("https://en.wikipedia.org/wiki/.NET_Framework");
            //Save and close the PDF document 
            document.Save("Output.pdf");
            document.Close(true);
            </code>
            <code lang="VB">
            'Initialize HTML to PDF converter 
            Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.WebKit)
            'Create a new instance for webkit converter settings.
            Dim settings As New WebKitConverterSettings()
            'Set WebKit path
            settings.WebKitPath = "/QtBinaries/"
            'Set signle page layout.
            settings.SinglePageLayout = SinglePageLayout.FitHeight
            'Assign WebKit settings to HTML converter
            htmlConverter.ConverterSettings = settings
            'Convert URL to PDF
            Dim document As PdfDocument = htmlConverter.Convert("https://en.wikipedia.org/wiki/.NET_Framework")
            'Save and close the PDF document 
            document.Save("Output.pdf")
            document.Close(True)
            </code> 
            </example>
        </member>
        <member name="P:Syncfusion.HtmlConverter.WebKitConverterSettings.TempFileName">
            <summary>
            Gets or sets the WebKit temporary process name
            </summary>
            <example>
            <code lang = "C#">
            //Initialize HTML to PDF converter 
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.WebKit);
            WebKitConverterSettings settings = new WebKitConverterSettings();
            //Set WebKit path
            settings.WebKitPath = @"/QtBinaries/";
            //Set file name for temporary files.
            settings.TempFileName = @"syncfusiontempfile";
            //Assign WebKit settings to HTML converter
            htmlConverter.ConverterSettings = settings;
            //Convert URL to PDF
            PdfDocument document = htmlConverter.Convert("https://www.google.com");
            //Save and close the PDF document 
            document.Save("Output.pdf");
            document.Close(true);
            </code>
            <code lang = "VB">
            'Initialize HTML converter with WebKit rendering engine
            Dim htmlConverter As HtmlToPdfConverter = New HtmlToPdfConverter(HtmlRenderingEngine.WebKit)
            Dim settings As WebKitConverterSettings = New WebKitConverterSettings
            'Set WebKit path
            settings.WebKitPath = "/QtBinaries/"
            'Set file name for temporary files.
            settings.TempPath = "syncfusiontempfile"
            'Assign WebKit settings to HTML converter
            htmlConverter.ConverterSettings = settings
            'Convert URL to PDF
            Dim document As PdfDocument = htmlConverter.Convert("https://www.google.com")
            'Save and close the PDF document 
            document.Save("Output.pdf")
            document.Close(true)
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.HtmlConverter.WebKitConverterSettings.BackgroundColor">
            <summary>
            Gets or sets a background color when converting a HTML document.
            </summary>
            <example>
            <code lang="C#">
            //Initialize HTML to PDF converter 
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.WebKit);
            WebKitConverterSettings settings = new WebKitConverterSettings();
            //Set WebKit path
            settings.WebKitPath = @"/QtBinaries/";
            //Set background color for conversion.
            settings.BackgroundColor = Color.Red;
            //Assign WebKit settings to HTML converter
            htmlConverter.ConverterSettings = settings;
            //Convert URL to PDF
            PdfDocument document = htmlConverter.Convert("https://www.google.com");
            //Save and close the PDF document 
            document.Save("Output.pdf");
            document.Close(true);
            </code>
            <code lang="VB">
            'Initialize HTML converter with WebKit rendering engine
            Dim htmlConverter As HtmlToPdfConverter = New HtmlToPdfConverter(HtmlRenderingEngine.WebKit)
            Dim settings As WebKitConverterSettings = New WebKitConverterSettings
            'Set WebKit path
            settings.WebKitPath = "/QtBinaries/"
            'Set background color for conversion.
            settings.BackgroundColor = "Color.Red
            'Assign WebKit settings to HTML converter
            htmlConverter.ConverterSettings = settings
            'Convert URL to PDF
            Dim document As PdfDocument = htmlConverter.Convert("https://www.google.com")
            'Save and close the PDF document 
            document.Save("Output.pdf")
            document.Close(true)
            </code>
            </example>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Syncfusion.HtmlConverter.WebKitConverterSettings.HttpRequestHeaders" -->
        <member name="P:Syncfusion.HtmlConverter.WebKitConverterSettings.Timeout">
            <summary>
            Set the maximum time in milliseconds to wait for HTML page to be loaded;
            </summary>
            <value> Specifies the timeout to the HTML converter.Unit is Milliseconds; By default 0</value>
            <example>
            <code lang = "C#">
            //Initialize HTML converter with WebKit rendering engine
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.WebKit);
            WebKitConverterSettings webKitSettings = new WebKitConverterSettings();
            //Set WebKit path
            webKitSettings.WebKitPath = @"/QtBinaries/";
            //Set timeout for conversion.
            webKitSettings.Timeout = 3000;
            //Assign WebKit settings to HTML converter
            htmlConverter.ConverterSettings = webKitSettings;
            //Convert URL to PDF
            PdfDocument document = htmlConverter.Convert("https://www.google.com");
            //Save the document.
            document.Save("Sample.pdf");
            document.Close();
            </code>
            <code lang = "VB">
            'Initialize HTML converter with WebKit rendering engine
            Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.WebKit)
            Dim webKitSettings As New WebKitConverterSettings()
            'Set WebKit path
            webKitSettings.WebKitPath = "/QtBinaries/"
            'Set timeout for conversion.
            webKitSettings.Timeout = 3000
            'Assign WebKit settings to HTML converter
            htmlConverter.ConverterSettings = webKitSettings
            'Convert URL to PDF
            Dim document As PdfDocument = htmlConverter.Convert("https://www.google.com")
            'Save the document.
            document.Save("Sample.pdf")
            document.Close()
            </code>
            </example>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Syncfusion.HtmlConverter.WebKitConverterSettings.HtmlEncoding" -->
        <member name="M:Syncfusion.HtmlConverter.WebKitConverterSettings.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.HtmlConverter.WebKitConverterSettings"/> class.
            </summary>
            <example>
            <code lang = "C#">
            //Initialize HtmlToPdfConverter class with WebKit rendering Engine.
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(RenderEngine.WebKit);
            //Setting properties for WebKit conversion.
            WebKitConverterSettings webKitSettings = new WebKitConverterSettings();
            webKitSettings.AdditionalDelay = 1000;
            webKitSettings.WebKitPath = @"/QtBinaries/";
            webKitSettings.AspectRatio = AspectRatio.None;
            webKitSettings.EnableHyperLink = true;
            webKitSettings.EnableJavaScript = true;
            webKitSettings.Margin = new PdfMargins { All = 40 };
            webKitSettings.Orientation = PdfPageOrientation.Portrait;
            webKitSettings.Password = "";
            webKitSettings.Username = "";
            htmlConverter.ConverterSettings = webKitSettings;
            //Convert HTML to PDF
            PdfDocument pdfDocument = htmlConverter.Convert("http://www.google.com");
            //Saving and closing PDF document
            pdfDocument.Save("Output.pdf");
            pdfDocument.Close(true);
            </code>
            <code lang="VB">
            'Initialize HtmlToPdfConverter class with WebKit rendering Engine.
            Dim htmlConverter As New HtmlToPdfConverter(RenderEngine.WebKit)
            'Setting properties for WebKit conversion.
            Dim webKitSettings As New WebKitConverterSettings()
            webKitSettings.AdditionalDelay = 1000
            webKitSettings.WebKitPath = @"/QtBinaries/"
            webKitSettings.AspectRatio = AspectRatio.None
            webKitSettings.EnableHyperLink = True
            webKitSettings.EnableJavaScript = True
            webKitSettings.Orientation = PdfPageOrientation.Portrait
            webKitSettings.Password = ""
            webKitSettings.Username = ""
            htmlConverter.ConverterSettings = webKitSettings
            'Convert HTML to PDF
            Dim pdfDocument As PdfDocument = htmlConverter.Convert("http://www.google.com")
            'Saving and closing PDF document
            pdfDocument.Save("Output.pdf")
            pdfDocument.Close(True)
            </code>
            </example>
            <seealso cref="T:Syncfusion.HtmlConverter.IHtmlConverterSettings"/>
            <seealso cref="T:Syncfusion.Pdf.Graphics.PdfMargins"/> class
            <seealso cref="T:Syncfusion.Pdf.PdfPageTemplateElement"/> class
            <seealso cref="T:Syncfusion.Pdf.PdfPageOrientation"/>
            <seealso cref="T:Syncfusion.Pdf.PdfPageRotateAngle"/>
            <seealso cref="T:Syncfusion.HtmlConverter.MediaType"/>
            <seealso cref="T:Syncfusion.Pdf.HtmlToPdf.SinglePageLayout"/>
        </member>
        <member name="T:Syncfusion.HtmlConverter.BlinkConverterSettings">
            <summary>
            Class which represents the settings of Blink rendering engine
            </summary>
            <example>
            <code lang = "C#">
            //Initialize HTML to PDF converter with Blink rendering engine
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.Blink);
            BlinkConverterSettings blinkConverterSettings = new BlinkConverterSettings();
            //Set the BlinkBinaries folder path
            blinkConverterSettings.BlinkPath = @"/BlinkBinaries/";
            //Assign Blink converter settings to HTML converter
            htmlConverter.ConverterSettings = blinkConverterSettings;
            //Convert URL to PDF
            PdfDocument document = htmlConverter.Convert("https://www.google.com");
            //Save and close the PDF document 
            document.Save("Output.pdf");
            document.Close(true);
            </code>
            <code lang = "VB">
            'Initialize HTML to PDF converter with Blink rendering engine
            Dim htmlConverter As HtmlToPdfConverter = New HtmlToPdfConverter(HtmlRenderingEngine.Blink)
            Dim blinkConverterSettings As BlinkConverterSettings = New BlinkConverterSettings()
            'Set the BlinkBinaries folder path
            blinkConverterSettings.BlinkPath = "/BlinkBinaries/"
            'Assign Blink converter settings to HTML converter
            htmlConverter.ConverterSettings = blinkConverterSettings
            'Convert URL to PDF
            Dim document As PdfDocument = htmlConverter.Convert("https://www.google.com")
            'Save and close the PDF document 
            document.Save("Output.pdf")
            document.Close(True)
            </code>
            </example>
            <seealso cref="T:Syncfusion.Pdf.Graphics.PdfMargins"/> class
            <seealso cref="T:Syncfusion.Pdf.PdfPageTemplateElement"/> class
            <seealso cref="T:Syncfusion.HtmlConverter.MediaType"/>
            <seealso cref="T:Syncfusion.Pdf.PdfPageRotateAngle"/>
        </member>
        <member name="P:Syncfusion.HtmlConverter.BlinkConverterSettings.TempPath">
            <summary>
            Gets or sets the temp path where the temporary operations are performed if any.
            </summary>
            <value> Temp path which contains internal conversion files.By default %temp%</value>
            <example>
            <code lang = "C#">
            //Initialize the HTML to PDF converter with Blink rendering engine
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.Blink);
            BlinkConverterSettings blinkConverterSettings = new BlinkConverterSettings();
            //Set the BlinkBinaries folder path
            blinkConverterSettings.BlinkPath = @"/BlinkBinaries/";
            //Set Temporary Path to generate temporary files
            blinkConverterSettings.TempPath = @"C:/HtmlConversion/Temp/";
            //Assign Blink converter settings to HTML converter
            htmlConverter.ConverterSettings = blinkConverterSettings;
            //Convert URL to PDF
            htmlConverter.Convert("https://www.google.com");
            //Save and close the PDF document
            document.Save("Output.pdf");
            document.Close(true);
            </code>
            <code lang = "VB">
            'Initialize the HTML to PDF converter with Blink rendering engine
            Dim htmlConverter As HtmlToPdfConverter = New HtmlToPdfConverter(HtmlRenderingEngine.Blink)
            Dim blinkConverterSettings As BlinkConverterSettings = New BlinkConverterSettings()
            'Set the BlinkBinaries folder path
            blinkConverterSettings.BlinkPath = "/BlinkBinaries/"
            'Set Temporary Path to generate temporary files
            blinkConverterSettings.TempPath = "C:/HtmlConversion/Temp/"
            'Assign Blink converter settings to HTML converter
            htmlConverter.ConverterSettings = blinkConverterSettings
            'Convert URL to PDF
            Dim document As PdfDocument = htmlConverter.Convert("https://www.google.com")
            'Save and close the PDF document
            document.Save("Output.pdf")
            document.Close(True)
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.HtmlConverter.BlinkConverterSettings.TempFileName">
            <summary>
            Gets or sets the TempFileName for the conversion
            </summary>
            <example>
            <code lang = "C#">
            //Initialize the HTML to PDF converter with Blink rendering engine
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.Blink);
            BlinkConverterSettings blinkConverterSettings = new BlinkConverterSettings();
            //Set the BlinkBinaries folder path
            blinkConverterSettings.BlinkPath = @"/BlinkBinaries/";
            //Set name to the Temporary files
            blinkConverterSettings.TempFileName = @"syncfusiontempfile";
            //Assign Blink converter settings to HTML converter
            htmlConverter.ConverterSettings = blinkConverterSettings;
            //Convert URL to PDF
            htmlConverter.Convert("https://www.google.com");
            //Save and close the PDF document
            document.Save("Output.pdf");
            document.Close(true);
            </code>
            <code lang = "VB">
            'Initialize the HTML to PDF converter with Blink rendering engine
            Dim htmlConverter As HtmlToPdfConverter = New HtmlToPdfConverter(HtmlRenderingEngine.Blink)
            Dim blinkConverterSettings As BlinkConverterSettings = New BlinkConverterSettings()
            'Set the BlinkBinaries folder path
            blinkConverterSettings.BlinkPath = "/BlinkBinaries/"
            'Set name to the Temporary files
            blinkConverterSettings.TempFileName = "syncfusiontempfile"
            'Assign Blink converter settings to HTML converter
            htmlConverter.ConverterSettings = blinkConverterSettings
            'Convert URL to PDF
            Dim document As PdfDocument = htmlConverter.Convert("https://www.google.com")
            'Save and close the PDF document
            document.Save("Output.pdf")
            document.Close(True)
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.HtmlConverter.BlinkConverterSettings.AdditionalDelay">
            <summary>
            Gets or sets the additional delay to load JavaScript; 
            </summary>
            <value> Specifies the delay to load the scripts.Unit is Milliseconds; By default 0</value>
            <example>
            <code lang = "C#">
            //Initialize the HTML to PDF converter with Blink rendering engine
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.Blink);
            BlinkConverterSettings blinkConverterSettings = new BlinkConverterSettings();
            //Set the BlinkBinaries folder path
            blinkConverterSettings.BlinkPath = @"/BlinkBinaries/";
            // Set additional delay; units in milliseconds
            blinkConverterSettings.AdditionalDelay = 3000;
            //Assign Blink converter settings to HTML converter
            htmlConverter.ConverterSettings = blinkConverterSettings;
            //Convert URL to PDF
            PdfDocument document = htmlConverter.Convert("https://www.google.com")
            //Save and close the PDF document
            document.Save("Output.pdf");
            document.Close(true);
            </code>
            <code lang = "VB">
            'Initialize the HTML to PDF converter with Blink rendering engine
            Dim htmlConverter As HtmlToPdfConverter = New HtmlToPdfConverter(HtmlRenderingEngine.Blink)
            Dim blinkConverterSettings As BlinkConverterSettings = New BlinkConverterSettings()
            'Set the BlinkBinaries folder path
            blinkConverterSettings.BlinkPath = "/BlinkBinaries/"
            'Set additional delay; units in milliseconds
            blinkConverterSettings.AdditionalDelay = 3000
            'Assign Blink converter settings to HTML converter
            htmlConverter.ConverterSettings = blinkConverterSettings
            'Convert URL to PDF
            Dim document As PdfDocument = htmlConverter.Convert("https://www.google.com")
            'Save and close the PDF document
            document.Save("Output.pdf")
            document.Close(True)
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.HtmlConverter.BlinkConverterSettings.EnableHyperLink">
            <summary>
            Gets or Sets a value indicating whether to preserve the live-links in the converted document or not.
            </summary>
            <value>True if the Hyperlinks are enabled, otherwise false.Default is true </value>
            <example>
            <code lang = "C#">
            //Initialize the HTML to PDF converter with Blink rendering engine
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.Blink);
            BlinkConverterSettings blinkConverterSettings = new BlinkConverterSettings();
            //Set the BlinkBinaries folder path
            blinkConverterSettings.BlinkPath = @"/BlinkBinaries/";
            //Enable hyperlinks; By default - true
            blinkConverterSettings.EnableHyperLink = false;
            //Assign Blink converter settings to HTML converter
            htmlConverter.ConverterSettings = blinkConverterSettings;
            //Convert URL to PDF
            PdfDocument document = htmlConverter.Convert("https://www.google.com")
            //Save and close the PDF document
            document.Save("Output.pdf");
            document.Close(true);
            </code>
            <code lang = "VB">
            'Initialize the HTML to PDF converter with Blink rendering engine
            Dim htmlConverter As HtmlToPdfConverter = NewHtmlToPdfConverter(HtmlRenderingEngine.Blink)
            Dim blinkConverterSettings As BlinkConverterSettings = New BlinkConverterSettings()
            'Set the BlinkBinaries folder path
            blinkConverterSettings.BlinkPath = "/BlinkBinaries/"
            'Enable hyperlinks; By default - True
            blinkConverterSettings.EnableHyperLink = False
            'Assign Blink converter settings to HTML converter
            htmlConverter.ConverterSettings = blinkConverterSettings
            'Convert URL to PDF
            Dim document As PdfDocument = htmlConverter.Convert("https://www.google.com")
            'Save and close the PDF document
            document.Save("Output.pdf")
            document.Close(True)
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.HtmlConverter.BlinkConverterSettings.EnableJavaScript">
            <summary>
            Gets or Sets a value indicating whether to Enable/Disable JavaScripts in the webpage.
            </summary>
            <value>True if Javascript is enabled, otherwise,false. default is true</value>
            <example>
            <code lang = "C#">
            //Initialize the HTML to PDF converter with Blink rendering engine
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.Blink);
            BlinkConverterSettings blinkConverterSettings = new BlinkConverterSettings();
            //Set the BlinkBinaries folder path
            blinkConverterSettings.BlinkPath = @"/BlinkBinaries/";
            //Disable JavaScript; By default, true
            blinkConverterSettings.EnableJavaScript = false;
            //Assign Blink converter settings to HTML converter
            htmlConverter.ConverterSettings = blinkConverterSettings;
            //Convert URL to PDF
            PdfDocument document = htmlConverter.Convert("https://www.google.com")
            //Save and close the PDF document
            document.Save("Output.pdf");
            document.Close(true);
            </code>
            <code lang = "C#">
            'Initialize the HTML to PDF converter with Blink rendering engine
            Dim htmlConverter As HtmlToPdfConverter = New HtmlToPdfConverter(HtmlRenderingEngine.Blink)
            Dim blinkConverterSettings As BlinkConverterSettings = New BlinkConverterSettings()
            'Set the BlinkBinaries folder path
            blinkConverterSettings.BlinkPath = "/BlinkBinaries/"
            'Disable JavaScript; By default True
            blinkConverterSettings.EnableJavaScript = False
            'Assign Blink converter settings to HTML converter
            htmlConverter.ConverterSettings = blinkConverterSettings
            'Convert URL to PDF
            Dim document As PdfDocument = htmlConverter.Convert("https://www.google.com")
            'Save and close the PDF document
            document.Save("Output.pdf")
            document.Close(True)
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.HtmlConverter.BlinkConverterSettings.EnableOfflineMode">
            <summary>
            Gets or sets the Enable Offline mode; default value false;
            </summary>
            <example>
            <code lang = "C#">
            //Initialize the HTML to PDF converter with Blink rendering engine
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.Blink);
            BlinkConverterSettings blinkConverterSettings = new BlinkConverterSettings();
            //Set the BlinkBinaries folder path
            blinkConverterSettings.BlinkPath = @"/BlinkBinaries/";
            //Enable offline mode
            blinkConverterSettings.EnableOfflineMode = true;
            //Assign Blink converter settings to HTML converter
            htmlConverter.ConverterSettings = blinkConverterSettings;
            //Convert URL to PDF
            PdfDocument document = htmlConverter.Convert("https://www.google.com")
            //Save and close the PDF document
            document.Save("Output.pdf");
            document.Close(true);
            </code>
            <code lang = "VB">
            'Initialize the HTML to PDF converter with Blink rendering engine
            Dim htmlConverter As HtmlToPdfConverter = New HtmlToPdfConverter(HtmlRenderingEngine.Blink)
            Dim blinkConverterSettings As BlinkConverterSettings = New BlinkConverterSettings()
            'Set the BlinkBinaries folder path
            blinkConverterSettings.BlinkPath = "/BlinkBinaries/"
            'Enable offline mode
            blinkConverterSettings.EnableOfflineMode = True
            'Assign Blink converter settings to HTML converter
            htmlConverter.ConverterSettings = blinkConverterSettings
            'Convert URL to PDF
            Dim document As PdfDocument = htmlConverter.Convert("https://www.google.com")
            'Save and close the PDF document
            document.Save("Output.pdf")
            document.Close(True)
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.HtmlConverter.BlinkConverterSettings.Password">
            <summary>
            Gets or Sets the password;
            </summary>
            <value>String value representing the password of the HTML document. By default ""</value>
            <example>
            <code lang = "C#">
            // Initialize the HTML to PDF converter with Blink rendering engine
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.Blink);
            BlinkConverterSettings blinkConverterSettings = new BlinkConverterSettings();
            //Set the BlinkBinaries folder path
            blinkConverterSettings.BlinkPath = @"/BlinkBinaries/";
            blinkConverterSettings.Username = "username";
            blinkConverterSettings.Password = "password";
            //Assign Blink converter settings to HTML converter
            htmlConverter.ConverterSettings = blinkConverterSettings;
            //Convert URL to PDF
            PdfDocument document = htmlConverter.Convert("https://www.example.com")
            //Save and close the PDF document
            document.Save("Output.pdf");
            document.Close(true);
            </code>
            <code lang = "VB">
            'Initialize the HTML to PDF converter with Blink rendering engine
            Dim htmlConverter As HtmlToPdfConverter = New HtmlToPdfConverter(HtmlRenderingEngine.Blink)
            Dim blinkConverterSettings As BlinkConverterSettings = New BlinkConverterSettings()
            'Set the BlinkBinaries folder path
            blinkConverterSettings.BlinkPath = "/BlinkBinaries/"
            blinkConverterSettings.Username = "username"
            blinkConverterSettings.Password = "password"
            'Assign Blink converter settings to HTML converter
            htmlConverter.ConverterSettings = blinkConverterSettings
            'Convert URL to PDF
            Dim document As PdfDocument = htmlConverter.Convert("https://www.example.com")
            'Save and close the PDF document
            document.Save("Output.pdf")
            document.Close(True)
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.HtmlConverter.BlinkConverterSettings.Username">
            <summary>
            Gets or Sets the Username;
            </summary>
            <value>String value representing the user name of the HTML document. By default ""</value>
            <example>
            <code lang = "C#">
            // Initialize the HTML to PDF converter with Blink rendering engine
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.Blink);
            BlinkConverterSettings blinkConverterSettings = new BlinkConverterSettings();
            //Set the BlinkBinaries folder path
            blinkConverterSettings.BlinkPath = @"/BlinkBinaries/";
            blinkConverterSettings.Username = "username";
            blinkConverterSettings.Password = "password";
            //Assign Blink converter settings to HTML converter
            htmlConverter.ConverterSettings = blinkConverterSettings;
            //Convert URL to PDF
            PdfDocument document = htmlConverter.Convert("https://www.example.com")
            //Save and close the PDF document
            document.Save("Output.pdf");
            document.Close(true);
            </code>
            <code lang = "VB">
            'Initialize the HTML to PDF converter with Blink rendering engine
            Dim htmlConverter As HtmlToPdfConverter = New HtmlToPdfConverter(HtmlRenderingEngine.Blink)
            Dim blinkConverterSettings As BlinkConverterSettings = New BlinkConverterSettings()
            'Set the BlinkBinaries folder path
            blinkConverterSettings.BlinkPath = "/BlinkBinaries/"
            blinkConverterSettings.Username = "username"
            blinkConverterSettings.Password = "password"
            'Assign Blink converter settings to HTML converter
            htmlConverter.ConverterSettings = blinkConverterSettings
            'Convert URL to PDF
            Dim document As PdfDocument = htmlConverter.Convert("https://www.example.com")
            'Save and close the PDF document
            document.Save("Output.pdf")
            document.Close(True)
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.HtmlConverter.BlinkConverterSettings.Margin">
            <summary>
            Gets or sets the margins of the page.
            </summary>
            <value>The <see cref="T:Syncfusion.Pdf.Graphics.PdfMargins"/>, provides margins to the PDF page. By default , PDF margin is 0.</value>
            <example>
            <code lang = "C#">
            //Initialize HTML to PDF converter.
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.Blink);
            //Initialize the Blink converter settings.
            BlinkConverterSettings blinkSettings = new BlinkConverterSettings();
            //Set BlinkPath
            blinkSettings.BlinkPath = @"/BlinkBinaries/";
            //Set margins
            blinkSettings.Margin.All = 20;
            //Assign Blink settings to HTML converter.
            htmlConverter.ConverterSettings = blinkSettings;
            //Convert HTML string to PDF.
            PdfDocument document = htmlConverter.Convert("https://www.google.com");
            //Save the document.
            document.Save("Sample.pdf");
            document.Close();
            </code>
            <code lang = "VB">
            'Initialize HTML to PDF converter.
            Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.Blink)
            'Initialize the Blink converter settings.
            Dim blinkSettings As New BlinkConverterSettings()
            'Set BlinkPath
            blinkSettings.BlinkPath = "/BlinkBinaries/"
            'Set margins
            blinkSettings.Margin.All = 20
            'Assign Blink settings to HTML converter.
            htmlConverter.ConverterSettings = blinkSettings
            'Convert HTML string to PDF.
            Dim document As PdfDocument = htmlConverter.Convert("https://www.google.com")
            'Save the document.
            document.Save("Sample.pdf")
            document.Close()
            </code>
            </example>
            <seealso cref="T:Syncfusion.Pdf.Graphics.PdfMargins"/>
        </member>
        <member name="P:Syncfusion.HtmlConverter.BlinkConverterSettings.PdfHeader">
            <summary>
            Gets or sets the Header to the PDF document;
            </summary>
            <value>The <see cref="T:Syncfusion.Pdf.PdfPageTemplateElement"/> to draw into the PDF page. By default null</value>
            <example>
            <code lang = "C#">
            //Initialize HTML to PDF converter
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.Blink);
            //Initialize the Blink converter settings
            BlinkConverterSettings blinkSettings = new BlinkConverterSettings();
            //Set BlinkPath
            blinkSettings.BlinkPath = "/BlinkBinaries/";
            //Create PDF page template element for header with bounds.
            PdfPageTemplateElement header = new PdfPageTemplateElement(new RectangleF(0, 0, blinkSettings.PdfPageSize.Width, 50));
            //Create font and brush for header element.
            PdfFont font = new PdfStandardFont(PdfFontFamily.Helvetica, 7);
            PdfBrush brush = new PdfSolidBrush(Color.Black);
            //Draw the header string in header template element. 
            header.Graphics.DrawString("This is header", font, brush, PointF.Empty);
            //Assign the header element to PdfHeader of Blink settings.
            blinkSettings.PdfHeader = header;
            //Assign Blink settings to HTML converter
            htmlConverter.ConverterSettings = blinkSettings;
            //Convert URL to PDF
            PdfDocument document = htmlConverter.Convert("https://www.google.com");
            //Save the document.
            document.Save("Sample.pdf");
            document.Close();
            </code>
            <code lang = "VB">
            'Initialize HTML to PDF converter
            Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.Blink)
            'Initialize the Blink converter settings
            Dim blinkSettings As New BlinkConverterSettings()
            'Set BlinkPath
            blinkSettings.BlinkPath = "/BlinkBinaries/"
            'Create PDF page template element for header with bounds.
            Dim header As New PdfPageTemplateElement(New RectangleF(0, 0, blinkSettings.PdfPageSize.Width, 50))
            'Create font and brush for header element.
            Dim font As PdfFont = New PdfStandardFont(PdfFontFamily.Helvetica, 7)
            Dim brush As PdfBrush = New PdfSolidBrush(Color.Black)
            'Draw the header string in header template element. 
            header.Graphics.DrawString("This is header", font, brush, PointF.Empty)
            'Assign the header element to PdfHeader of Blink settings.
            blinkSettings.PdfHeader = header
            'Assign Blink settings to HTML converter
            htmlConverter.ConverterSettings = blinkSettings
            'Convert URL to PDF
            Dim document As PdfDocument = htmlConverter.Convert("https://www.google.com")
            'Save the document.
            document.Save("Sample.pdf")
            document.Close()
            </code>
            </example>
            <seealso cref="T:Syncfusion.Pdf.PdfPageTemplateElement"/> class
        </member>
        <member name="P:Syncfusion.HtmlConverter.BlinkConverterSettings.PdfFooter">
            <summary>
            Gets or sets the Footer to the PDF document;
            </summary>
            <value>The <see cref="T:Syncfusion.Pdf.PdfPageTemplateElement"/> to draw into the PDF page. By default null</value>
            <example>
            <code lang = "C#">
            //Initialize HTML to PDF converter
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.Blink);
            //Initialize the Blink converter settings
            BlinkConverterSettings blinkSettings = new BlinkConverterSettings();
            //Set BlinkPath
            blinkSettings.BlinkPath = "/BlinkBinaries/";
            //Create PDF page template element for footer with bounds.
            PdfPageTemplateElement footer = new PdfPageTemplateElement(new RectangleF(0, 0, blinkSettings.PdfPageSize.Width, 50));
            //Create font and brush for header element.
            PdfFont font = new PdfStandardFont(PdfFontFamily.Helvetica, 7);
            PdfBrush brush = new PdfSolidBrush(Color.Black);
            //Draw the footer string in footer template element. 
            footer.Graphics.DrawString("This is footer", font, brush, PointF.Empty);
            //Assign the footer element to PdfFooter of Blink settings.
            blinkSettings.PdfFooter = footer;
            //Assign Blink settings to HTML converter
            htmlConverter.ConverterSettings = blinkSettings;
            //Convert URL to PDF
            PdfDocument document = htmlConverter.Convert("https://www.google.com");
            //Save the document.
            document.Save("Sample.pdf");
            document.Close();
            </code>
            <code lang = "VB">
            'Initialize HTML to PDF converter
            Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.Blink)
            'Initialize the Blink converter settings
            Dim blinkSettings As New BlinkConverterSettings()
            'Set BlinkPath
            blinkSettings.BlinkPath = "/BlinkBinaries/"
            'Create PDF page template element for footer with bounds.
            Dim footer As New PdfPageTemplateElement(New RectangleF(0, 0, blinkSettings.PdfPageSize.Width, 50))
            'Create font and brush for header element.
            Dim font As PdfFont = New PdfStandardFont(PdfFontFamily.Helvetica, 7)
            Dim brush As PdfBrush = New PdfSolidBrush(Color.Black)
            'Draw the footer string in footer template element. 
            footer.Graphics.DrawString("This is footer", font, brush, PointF.Empty)
            'Assign the footer element to PdfFooter of Blink settings.
            blinkSettings.PdfFooter = footer
            'Assign Blink settings to HTML converter
            htmlConverter.ConverterSettings = blinkSettings
            'Convert URL to PDF
            Dim document As PdfDocument = htmlConverter.Convert("https://www.google.com")
            'Save the document.
            document.Save("Sample.pdf")
            document.Close()
            </code>
            </example>
            <seealso cref="T:Syncfusion.Pdf.PdfPageTemplateElement"/> class
        </member>
        <member name="P:Syncfusion.HtmlConverter.BlinkConverterSettings.Orientation">
            <summary>
            Gets or sets the Orientation of the PDF document;
            </summary>
            <value>The <see cref="T:Syncfusion.Pdf.PdfPageOrientation"/>, provides the orientation of the PDF page. By default Portrait</value>
            <example>
            <code lang = "C#">
            //Initialize HTML to PDF converter
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.Blink);
            //Initialize the Blink converter settings
            BlinkConverterSettings blinkSettings = new BlinkConverterSettings();
            //Set BlinkPath
            blinkSettings.BlinkPath = "/BlinkBinaries/";
            //Set PDF page orientation
            blinkSettings.Orientation = PdfPageOrientation.Landscape;
            //Assign Blink settings to HTML converter
            htmlConverter.ConverterSettings = blinkSettings;
            //Convert URL to PDF
            PdfDocument document = htmlConverter.Convert("https://www.google.com");
            //Save the document.
            document.Save("Sample.pdf");
            document.Close();
            </code>
            <code lang = "VB">
            'Initialize HTML to PDF converter
            Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.Blink)
            'Initialize the Blink converter settings
            Dim blinkSettings As New BlinkConverterSettings()
            'Set BlinkPath
            blinkSettings.BlinkPath = "/BlinkBinaries/"
            'Set PDF page orientation
            blinkSettings.Orientation = PdfPageOrientation.Landscape
            'Assign Blink settings to HTML converter
            htmlConverter.ConverterSettings = blinkSettings
            'Convert URL to PDF
            Dim document As PdfDocument = htmlConverter.Convert("https://www.google.com")
            'Save the document.
            document.Save("Sample.pdf")
            document.Close()
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.HtmlConverter.BlinkConverterSettings.PdfPageSize">
            <summary>
            Gets or sets the size of the PDF page; 
            </summary>
            <remarks>Default value: 595 * 842 pixels(A4 size)</remarks>
            <example>
            <code lang = "C#">
            //Initialize HTML to PDF converter
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.Blink);
            //Initialize the Blink converter settings
            BlinkConverterSettings blinkSettings = new BlinkConverterSettings();
            //Set BlinkPath
            blinkSettings.BlinkPath = "/BlinkBinaries/";
            //Set PDF page size
            blinkSettings.PdfPageSize = new SizeF(595, 842);
            //Assign Blink settings to HTML converter
            htmlConverter.ConverterSettings = blinkSettings;
            //Convert URL to PDF
            PdfDocument document = htmlConverter.Convert("https://www.google.com");
            //Save the document.
            document.Save("Sample.pdf");
            document.Close();
            </code>
            <code lang = "VB">
            'Initialize HTML to PDF converter
            Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.Blink)
            'Initialize the Blink converter settings
            Dim blinkSettings As New BlinkConverterSettings()
            'Set BlinkPath
            blinkSettings.BlinkPath = "/BlinkBinaries/"
            'Set PDF page size
            blinkSettings.PdfPageSize = New SizeF(595, 842)
            'Assign Blink settings to HTML converter
            htmlConverter.ConverterSettings = blinkSettings
            'Convert URL to PDF
            Dim document As PdfDocument = htmlConverter.Convert("https://www.google.com")
            'Save the document.
            document.Save("Sample.pdf")
            document.Close()
            </code>
            </example>
            <seealso cref="T:Syncfusion.Pdf.PdfPageSize"/>
        </member>
        <member name="P:Syncfusion.HtmlConverter.BlinkConverterSettings.PageRotateAngle">
            <summary>
            Gets or sets the number of degrees by which the page should be rotated clockwise when displayed or printed.
            </summary>
            <value>The <see cref="T:Syncfusion.Pdf.PdfPageRotateAngle"/>,provides number of degrees by which the page should be rotated clockwise when displayed or printed </value>
            <remarks>Default value: RotateAngle0 </remarks>
            <example>
            <code lang = "C#">
            //Initialize HTML to PDF converter
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.Blink);
            //Initialize the Blink converter settings
            BlinkConverterSettings blinkSettings = new BlinkConverterSettings();
            //Set BlinkPath
            blinkSettings.BlinkPath = "/BlinkBinaries/";
            //Set PDF page rotation angle
            blinkSettings.PageRotateAngle = PdfPageRotateAngle.RotateAngle90;
            //Assign Blink settings to HTML converter
            htmlConverter.ConverterSettings = blinkSettings;
            //Convert URL to PDF
            PdfDocument document = htmlConverter.Convert("https://www.google.com");
            //Save the document.
            document.Save("Sample.pdf");
            document.Close();
            </code>
            <code lang = "VB">
            'Initialize HTML to PDF converter
            Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.Blink)
            'Initialize the Blink converter settings
            Dim blinkSettings As New BlinkConverterSettings()
            'Set BlinkPath
            blinkSettings.BlinkPath = "/BlinkBinaries/"
            'Set PDF page rotation angle
            blinkSettings.PageRotateAngle = PdfPageRotateAngle.RotateAngle90
            'Assign Blink settings to HTML converter
            htmlConverter.ConverterSettings = blinkSettings
            'Convert URL to PDF
            Dim document As PdfDocument = htmlConverter.Convert("https://www.google.com")
            'Save the document.
            document.Save("Sample.pdf")
            document.Close()
            </code>
            </example>
            <seealso cref="T:Syncfusion.Pdf.PdfPageRotateAngle"/>
        </member>
        <member name="P:Syncfusion.HtmlConverter.BlinkConverterSettings.BlinkPath">
            <summary>
            Gets or Sets Blink folder path; 
            </summary>
            <value> Specifies Blink binaries path.By default bin folder</value>
            <example>
            <code lang = "C#">
            //Initialize HTML to PDF converter with Blink rendering engine
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.Blink);
            BlinkConverterSettings blinkConverterSettings = new BlinkConverterSettings();
            //Set the BlinkBinaries folder path
            blinkConverterSettings.BlinkPath = @"/BlinkBinaries/";
            //Assign Blink converter settings to HTML converter
            htmlConverter.ConverterSettings = blinkConverterSettings;
            //Convert URL to PDF
            PdfDocument document = htmlConverter.Convert("https://www.google.com");
            //Save and close the PDF document 
            document.Save("Output.pdf");
            document.Close(true);
            </code>
            <code lang = "VB">
            'Initialize HTML to PDF converter with Blink rendering engine
            Dim htmlConverter As HtmlToPdfConverter = New HtmlToPdfConverter(HtmlRenderingEngine.Blink)
            Dim blinkConverterSettings As BlinkConverterSettings = New BlinkConverterSettings()
            'Set the BlinkBinaries folder path
            blinkConverterSettings.BlinkPath = "/BlinkBinaries/"
            'Assign Blink converter settings to HTML converter
            htmlConverter.ConverterSettings = blinkConverterSettings
            'Convert URL to PDF
            Dim document As PdfDocument = htmlConverter.Convert("https://www.google.com")
            'Save and close the PDF document 
            document.Save("Output.pdf")
            document.Close(True)
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.HtmlConverter.BlinkConverterSettings.MediaType">
            <summary>
            Gets or sets media type of Blink rendering engine
            </summary>
            <example>
            <code lang = "C#">
            //Initialize the HTML to PDF converter with Blink rendering engine
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.Blink);
            BlinkConverterSettings blinkConverterSettings = new BlinkConverterSettings();
            //Set the BlinkBinaries folder path
            blinkConverterSettings.BlinkPath = @"/BlinkBinaries/";
            //Set print media type
            blinkConverterSettings.MediaType = MediaType.Print;
            //Assign Blink converter settings to HTML converter
            htmlConverter.ConverterSettings = blinkConverterSettings;
            //Convert URL to PDF
            PdfDocument document = htmlConverter.Convert("https://www.google.com")
            //Save and close the PDF document
            document.Save("Output.pdf");
            document.Close(true);
            </code>
            <code lang = "VB">
            'Initialize the HTML to PDF converter with Blink rendering engine
            Dim htmlConverter As HtmlToPdfConverter = New HtmlToPdfConverter(HtmlRenderingEngine.Blink)
            Dim blinkConverterSettings As BlinkConverterSettings = New BlinkConverterSettings()
            'Set the BlinkBinaries folder path
            blinkConverterSettings.BlinkPath = "/BlinkBinaries/"
            'Set print media type
            blinkConverterSettings.MediaType = MediaType.Print
            'Assign Blink converter settings to HTML converter
            htmlConverter.ConverterSettings = blinkConverterSettings
            'Convert URL to PDF
            Dim document As PdfDocument = htmlConverter.Convert("https://www.google.com")
            'Save and close the PDF document
            document.Save("Output.pdf")
            document.Close(True)
            </code>
            </example>
            <seealso cref="T:Syncfusion.HtmlConverter.MediaType"/>
        </member>
        <member name="P:Syncfusion.HtmlConverter.BlinkConverterSettings.ViewPortSize">
            <summary>
            Blink view port size; HTML Content will be scaled based on the given viewport size.
            </summary>
            <value>By default 1024x0 ViewPort size</value>
            <example>
            <code lang = "C#">
            //Initialize the HTML to PDF converter with Blink rendering engine
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.Blink);
            BlinkConverterSettings blinkConverterSettings = new BlinkConverterSettings();
            //Set the BlinkBinaries folder path
            blinkConverterSettings.BlinkPath = @"/BlinkBinaries/";
            //Set Blink viewport size
            blinkConverterSettings.ViewPortSize = new Size(800, 0);
            //Assign Blink converter settings to HTML converter
            htmlConverter.ConverterSettings = blinkConverterSettings;
            //Convert URL to PDF
            PdfDocument document = htmlConverter.Convert("https://www.google.com")
            //Save and close the PDF document
            document.Save("Output.pdf");
            document.Close(true);
            </code>
            <code lang = "VB">
            'Initialize the HTML to PDF converter with Blink rendering engine
            Dim htmlConverter As HtmlToPdfConverter = New HtmlToPdfConverter(HtmlRenderingEngine.Blink)
            Dim blinkConverterSettings As BlinkConverterSettings = New BlinkConverterSettings()
            'Set the BlinkBinaries folder path
            blinkConverterSettings.BlinkPath = "/BlinkBinaries/"
            'Set Blink viewport size
            blinkConverterSettings.ViewPortSize = New Size(800, 0)
            'Assign Blink converter settings to HTML converter
            htmlConverter.ConverterSettings = blinkConverterSettings
            'Convert URL to PDF
            Dim document As PdfDocument = htmlConverter.Convert("https://www.google.com")
            'Save and close the PDF document
            document.Save("Output.pdf")
            document.Close(True)
            </code>
            </example>
            <seealso cref="T:System.Drawing.Size"/>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Syncfusion.HtmlConverter.BlinkConverterSettings.HtmlEncoding" -->
        <member name="P:Syncfusion.HtmlConverter.BlinkConverterSettings.AspectRatio">
            <summary>
            Gets or sets the aspect ratio.
            </summary>
            <remarks>
            This property does not have any effect with Blink rendering engine.
            </remarks>
        </member>
        <member name="P:Syncfusion.HtmlConverter.BlinkConverterSettings.SplitTextLines">
            <summary>
             Gets or sets a value indicating whether the text can be split across the PDF pages.
            </summary>
            <remarks>
            This property does not have any effect with Blink rendering engine.
            </remarks>
        </member>
        <member name="P:Syncfusion.HtmlConverter.BlinkConverterSettings.SplitImages">
            <summary>
            Gets or sets a value indicating whether the images can be split across the PDF pages.
            </summary>
            <remarks>
            This property does not have any effect with Blink rendering engine.
            </remarks>
        </member>
        <member name="P:Syncfusion.HtmlConverter.BlinkConverterSettings.HttpPostFields">
            <summary>
            Gets or sets the HTTP post collection fields.
            </summary>
            <remarks>
            Presence of elements in this collection will initiate Post request or else it will proceed with Get request.
            </remarks>
            <example>
            <code lang = "C#">
            //Initialize HTML converter
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.Blink);
            // Blink converter settings
            BlinkConverterSettings blinkSettings = new BlinkConverterSettings();
            //Assign the Blink binaries path
            blinkSettings.BlinkPath = @"/BlinkBinaries/";
            //Add post parameters
            blinkSettings.HttpPostFields.Add("firstName", "Andrew");
            blinkSettings.HttpPostFields.Add("lastName", "Fuller");
            //Assign the Blink settings
            htmlConverter.ConverterSettings = blinkSettings;
            //Convert HTML to PDF
            PdfDocument document = htmlConverter.Convert("http://asp.syncfusion.com/demos/http_post_get/default.aspx");
            //Save and close the PDF document
            document.Save("Output.pdf");
            document.Close(true);
            </code>
            <code lang = "VB">
            'Initialize HTML converter 
            Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.Blink)
            'Blink converter settings 
            Dim blinkSettings As New BlinkConverterSettings()
            'Assign the Blink binaries path 
            blinkSettings.BlinkPath = "/BlinkBinaries/"
            'Add post parameters
            blinkSettings.HttpPostFields.Add("firstName", "Andrew")
            blinkSettings.HttpPostFields.Add("lastName", "Fuller")
            'Assign the Blink settings 
            htmlConverter.ConverterSettings = blinkSettings
            'Convert HTML to PDF
            Dim document As PdfDocument = htmlConverter.Convert("http://asp.syncfusion.com/demos/http_post_get/default.aspx")
            'Save and close the document
            document.Save("Output.pdf")
            document.Close()
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.HtmlConverter.BlinkConverterSettings.ProxySettings">
            <summary>
            Gets or sets proxy server settings for Blink HTML conversion
            </summary>
            <example>
            <code lang = "C#">
            //Initialize HTML converter with Blink rendering engine
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.Blink);
            BlinkConverterSettings BlinkSettings = new BlinkConverterSettings();
            //Set Blink path
            BlinkSettings.BlinkPath = @"/BlinkBinaries/";
            //Set manual proxy settings
            BlinkSettings.ProxySettings.HostName = "127.0.0.1";
            BlinkSettings.ProxySettings.PortNumber = 8080;
            BlinkSettings.ProxySettings.Type = BlinkProxyType.Http;
            //Assign Blink settings to HTML converter
            htmlConverter.ConverterSettings = BlinkSettings;
            //Convert URL to PDF
            PdfDocument document = htmlConverter.Convert("https://www.google.com");
            //Save the document.
            document.Save("Sample.pdf");
            document.Close();
            </code>
            <code lang = "VB">
            'Initialize HTML converter with Blink rendering engine
            Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.Blink)
            Dim BlinkSettings As New BlinkConverterSettings()
            'Set Blink path
            BlinkSettings.BlinkPath = "/BlinkBinaries/"
            'Set manual proxy settings
            BlinkSettings.ProxySettings.HostName = "127.0.0.1"
            BlinkSettings.ProxySettings.PortNumber = 8080
            BlinkSettings.ProxySettings.Type = BlinkProxyType.Http
            'Assign Blink settings to HTML converter
            htmlConverter.ConverterSettings = BlinkSettings
            'Convert URL to PDF
            Dim document As PdfDocument = htmlConverter.Convert("https://www.google.com")
            'Save the document.
            document.Save("Sample.pdf")
            document.Close()
            </code>
            </example>
            <seealso cref="T:Syncfusion.HtmlConverter.BlinkProxySettings"/> class
        </member>
        <!-- Badly formed XML comment ignored for member "P:Syncfusion.HtmlConverter.BlinkConverterSettings.HttpRequestHeaders" -->
        <member name="P:Syncfusion.HtmlConverter.BlinkConverterSettings.Cookies">
            <summary>
            Gets or sets cookie collection with names and values
            </summary>
            <value> The cookies Collection </value>
            <example>
            <code lang = "C#">
            // Initialize the HTML to PDF converter with Blink rendering engine
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.Blink);
            BlinkConverterSettings blinkConverterSettings = new BlinkConverterSettings();
            //Set the BlinkBinaries folder path
            blinkConverterSettings.BlinkPath = @"/BlinkBinaries/";
            // Add cookies as name and value pair
            blinkConverterSettings.Cookies.Add("CookieName1", " CookieValue1");
            blinkConverterSettings.Cookies.Add("CookieName2", " CookieValue2");
            //Assign Blink converter settings to HTML converter
            htmlConverter.ConverterSettings = blinkConverterSettings;
            //Convert URL to PDF
            PdfDocument document = htmlConverter.Convert("https://www.example.com");
            //Save and close the PDF document
            document.Save("Output.pdf");
            document.Close(true);
            </code>
            <code lang = "VB">
            'Initialize the HTML to PDF converter with Blink rendering engine
            Dim htmlConverter As HtmlToPdfConverter = New HtmlToPdfConverter(HtmlRenderingEngine.Blink)
            Dim blinkConverterSettings As BlinkConverterSettings = New BlinkConverterSettings()
            'Set the BlinkBinaries folder path
            blinkConverterSettings.BlinkPath = "/BlinkBinaries/"
            'Add cookies
            blinkConverterSettings.Cookies.Add("Name1", "Value1")
            blinkConverterSettings.Cookies.Add("Name2", "Value2")
            'Assign Blink converter settings to HTML converter
            htmlConverter.ConverterSettings = blinkConverterSettings
            'Convert URL to PDF
            Dim document As PdfDocument = htmlConverter.Convert("https://www.example.com")
            'Save and close the PDF document
            document.Save("Output.pdf")
            document.Close(True)
            </code>
            </example>
            <seealso cref="T:Syncfusion.HtmlConverter.CookieCollection"/> Class
        </member>
        <member name="P:Syncfusion.HtmlConverter.BlinkConverterSettings.WindowStatus">
            <summary>
            Gets or Sets the window status
            </summary>
            <example>
            <code lang = "C#">
            // Initialize the HTML to PDF converter with Blink rendering engine
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.Blink);
            BlinkConverterSettings blinkConverterSettings = new BlinkConverterSettings();
            //Set the BlinkBinaries folder path
            blinkConverterSettings.BlinkPath = @"/BlinkBinaries/";
            // Set windows status.
            blinkConverterSettings.WindowStatus = "completed";
            //Assign Blink converter settings to HTML converter
            htmlConverter.ConverterSettings = blinkConverterSettings;
            //Convert URL to PDF
            PdfDocument document = htmlConverter.Convert("input.html");
            //Save and close the PDF document
            document.Save("Output.pdf");
            document.Close(true);
            </code>
            <code lang = "VB">
            'Initialize HTML to PDF converter with Blink rendering engine
            Dim htmlConverter As HtmlToPdfConverter = New HtmlToPdfConverter(HtmlRenderingEngine.Blink)
            Dim blinkConverterSettings As BlinkConverterSettings = New BlinkConverterSettings()
            'Set the BlinkBinaries folder path
            blinkConverterSettings.BlinkPath = "/BlinkBinaries/"
            'Set windows status.
            blinkConverterSettings.WindowStatus = "completed"
            'Assign Blink converter settings to HTML converter
            htmlConverter.ConverterSettings = blinkConverterSettings
            'Convert URL to PDF
            Dim document As PdfDocument = htmlConverter.Convert("input.html")
            'Save and close the PDF document
            document.Save("Output.pdf")
            document.Close(True)
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.HtmlConverter.BlinkConverterSettings.SinglePageLayout">
            <summary>
            Use this option to render the whole HTML content into a single PDF page
            </summary>
            <example>
            <code lang="C#">
            //Initialize HTML to PDF converter 
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.Blink);
            //Initialize Blinkconverter settings
            BlinkConverterSettings settings = new BlinkConverterSettings();
            //Set Blink path
            settings.BlinkPath = "/BlinkBinaries/";
            //Set single page layout
            settings.SinglePageLayout = SinglePageLayout.FitWidth;
            //Assign Blink settings to HTML converter
            htmlConverter.ConverterSettings = settings;
            //Convert URL to PDF
            PdfDocument document = htmlConverter.Convert("https://www.syncfusion.com/");
            //Save and close the PDF document 
            document.Save("Sample.pdf");
            document.Close(true);
            </code>
            <code lang="VB">
            'Initialize HTML to PDF converter 
            Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.Blink)
            'Initialize Blinkconverter settings
            Dim settings As New BlinkConverterSettings()
            'Set Blink path
            settings.BlinkPath = "/BlinkBinaries/"
            'Set single page layout
            settings.SinglePageLayout = SinglePageLayout.FitWidth
            'Assign Blink settings to HTML converter
            htmlConverter.ConverterSettings = settings
            'Convert URL to PDF
            Dim document As PdfDocument = htmlConverter.Convert("https://www.syncfusion.com/")
            'Save and close the PDF document 
            document.Save("Sample.pdf")
            document.Close(True)
            </code> 
            </example>
        </member>
        <member name="P:Syncfusion.HtmlConverter.BlinkConverterSettings.CommandLineArguments">
            <summary>
            Gets or sets the Blink command line arguments.
            </summary>
            <example>
            <code lang = "C#">
            Initialize HTML converter
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.Blink);
            //Initialize Blink converter settings
            BlinkConverterSettings BlinkSettings = new BlinkConverterSettings();
            //Assign the Blink path
            BlinkSettings.BlinkPath = @"/BlinkBinaries/";
            //Add Blink command line arguments 
            BlinkSettings.CommandLineArguments.Add("--no-proxy-server");
            htmlConverter.ConverterSettings = BlinkSettings;
            //Convert url to pdf
            PdfDocument document = htmlConverter.Convert("https://www.google.com");
            //Save and close the PDF document
            document.Save("Output.pdf");
            document.Close(true);
            </code>
            <code lang= "VB">
            'Initialize HTML converter
            Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.Blink)
            'Initialize Blink converter settings
            Dim BlinkSettings As New BlinkConverterSettings()
            'Assign the Blink path
            BlinkSettings.BlinkPath = "/BlinkBinaries/"
            'Add Blink command line arguments 
            BlinkSettings.CommandLineArguments.Add("--no-proxy-server")
            htmlConverter.ConverterSettings = BlinkSettings
            'Convert url to pdf
            Dim document As PdfDocument = htmlConverter.Convert("https://www.google.com")
            'Save and close the PDF document
            document.Save("Output.pdf")
            document.Close(True)
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.HtmlConverter.BlinkConverterSettings.EnableForm">
            <summary>
            Gets or sets enable form; If it is enabled then HTML form fields are converted to PDF form fields in the generated PDF document. The default value is false.
            </summary>
             <example>
             <code lang="C#">
             //Initialize HTML to PDF converter 
             HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.Blink);
             //Initialize Blinkconverter settings
             BlinkConverterSettings settings = new BlinkConverterSettings();
             //Set Blink path
             settings.BlinkPath = "/BlinkBinaries/";
             //Set enable form
             settings.EnableForm = true;
             //Assign Blink settings to HTML converter
             htmlConverter.ConverterSettings = settings;
             //Convert URL to PDF
             PdfDocument document = htmlConverter.Convert("https://www.syncfusion.com/");
             //Save and close the PDF document 
             document.Save("Sample.pdf");
             document.Close(true);
             </code>
             <code lang="VB">
             'Initialize HTML to PDF converter 
             Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.Blink)
             'Initialize Blinkconverter settings
             Dim settings As New BlinkConverterSettings()
             'Set Blink path
             settings.BlinkPath = "/BlinkBinaries/"
             'Set enable form
             settings.EnableForm = true
             'Assign Blink settings to HTML converter
             htmlConverter.ConverterSettings = settings
             'Convert URL to PDF
             Dim document As PdfDocument = htmlConverter.Convert("https://www.syncfusion.com/")
             'Save and close the PDF document 
             document.Save("Sample.pdf")
             document.Close(True)
             </code> 
             </example>
        </member>
        <member name="P:Syncfusion.HtmlConverter.BlinkConverterSettings.EnableBookmarks">
            <summary>
            A property indicating if the automatic creation of bookmarks in PDF for the H1 to H6 HTML elements is enabled or not. By default the automatic bookmarks creation is disabled.
            </summary>
             <example>
             <code lang="C#">
             //Initialize HTML to PDF converter 
             HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.Blink);
             //Initialize Blinkconverter settings
             BlinkConverterSettings settings = new BlinkConverterSettings();
             //Set Blink path
             settings.BlinkPath = "/BlinkBinaries/";
             //Set enable bookmarks
             settings.EnableBookmarks = true;
             //Assign Blink settings to HTML converter
             htmlConverter.ConverterSettings = settings;
             //Convert URL to PDF
             PdfDocument document = htmlConverter.Convert("https://www.syncfusion.com/");
             //Save and close the PDF document 
             document.Save("Sample.pdf");
             document.Close(true);
             </code>
             <code lang="VB">
             'Initialize HTML to PDF converter 
             Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.Blink)
             'Initialize Blinkconverter settings
             Dim settings As New BlinkConverterSettings()
             'Set Blink path
             settings.BlinkPath = "/BlinkBinaries/"
             'Set enable bookmarks
             settings.EnableBookmarks = true
             'Assign Blink settings to HTML converter
             htmlConverter.ConverterSettings = settings
             'Convert URL to PDF
             Dim document As PdfDocument = htmlConverter.Convert("https://www.syncfusion.com/")
             'Save and close the PDF document 
             document.Save("Sample.pdf")
             document.Close(True)
             </code> 
             </example>
        </member>
        <member name="P:Syncfusion.HtmlConverter.BlinkConverterSettings.EnableToc">
            <summary>
            A property indicating if the automatic creation of a table of contents items for the H1 to H6 HTML elements is enabled or not. By default this property is false
            </summary>
             <example>
             <code lang="C#">
             //Initialize HTML to PDF converter 
             HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.Blink);
             //Initialize Blinkconverter settings
             BlinkConverterSettings settings = new BlinkConverterSettings();
             //Set Blink path
             settings.BlinkPath = "/BlinkBinaries/";
             //Set enable toc
             settings.EnableToc = true;
             //Assign Blink settings to HTML converter
             htmlConverter.ConverterSettings = settings;
             //Convert URL to PDF
             PdfDocument document = htmlConverter.Convert("https://www.syncfusion.com/");
             //Save and close the PDF document 
             document.Save("Sample.pdf");
             document.Close(true);
             </code>
             <code lang="VB">
             'Initialize HTML to PDF converter 
             Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.Blink)
             'Initialize Blinkconverter settings
             Dim settings As New BlinkConverterSettings()
             'Set Blink path
             settings.BlinkPath = "/BlinkBinaries/"
             'Set enable toc
             settings.EnableToc = true
             'Assign Blink settings to HTML converter
             htmlConverter.ConverterSettings = settings
             'Convert URL to PDF
             Dim document As PdfDocument = htmlConverter.Convert("https://www.syncfusion.com/")
             'Save and close the PDF document 
             document.Save("Sample.pdf")
             document.Close(True)
             </code> 
             </example>
        </member>
        <member name="P:Syncfusion.HtmlConverter.BlinkConverterSettings.Toc">
            <summary>
            Gets or sets Toc styles
            </summary>
            <example>
            <code lang = "C#">
            //Initialize HTML to PDF converter with Blink Rendering Engine.
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.Blink);
            //Initialize HTML to PDF converter
            BlinkConverterSettings blinkSettings = new BlinkConverterSettings();
            //Assign the Blink binaries path
            blinkSettings.BlinkPath = @"/BlinkBinaries/";
            //Enable TOC
            blinkSettings.EnableToc = true;
            //Set the style for level 1(H1) items in table of contents
            HtmlToPdfTocStyle tocstyleH1 = new HtmlToPdfTocStyle();
            tocstyleH1.Font = new PdfStandardFont(PdfFontFamily.TimesRoman, 10, PdfFontStyle.Regular);
            tocstyleH1.BackgroundColor = new PdfSolidBrush(new PdfColor(Color.FromArgb(68, 114, 196)));
            tocstyleH1.ForeColor = PdfBrushes.White;
            tocstyleH1.Padding = new PdfPaddings(5, 5, 3, 3);
            blinkSettings.Toc.SetItemStyle(1, tocstyleH1);
            //Assign the Blink settings
            htmlConverter.ConverterSettings = blinkSettings;
            //Convert HTML to PDF
            PdfDocument document = htmlConverter.Convert("input.html");
            //Save and close the PDF document
            document.Save("Output.pdf");
            document.Close(true);
            </code>
            <code lang = "VB">
            'Initialize HTML to PDF converter with Blink Rendering Engine.
            Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.Blink)
            'Initialize HTML to PDF converter
            Dim blinkSettings As New BlinkConverterSettings()
            'Assign the Blink binaries path
            blinkSettings.BlinkPath = "/BlinkBinaries/"
            'Enable TOC
            blinkSettings.EnableToc = True
            'Set the style for level 1(H1) items in table of contents
            Dim tocstyleH1 As New HtmlToPdfTocStyle()
            tocstyleH1.Font = New PdfStandardFont(PdfFontFamily.TimesRoman, 10, PdfFontStyle.Regular)
            tocstyleH1.BackgroundColor = New PdfSolidBrush(New PdfColor(Color.FromArgb(68, 114, 196)))
            tocstyleH1.ForeColor = PdfBrushes.White
            tocstyleH1.Padding = New PdfPaddings(5, 5, 3, 3)
            blinkSettings.Toc.SetItemStyle(1, tocstyleH1)
            'Assign the Blink settings
            htmlConverter.ConverterSettings = blinkSettings
            'Convert HTML to PDF
            Dim document As PdfDocument = htmlConverter.Convert("input.html")
            'Save and close the PDF document
            document.Save("Output.pdf")
            document.Close(True)
            </code>
            </example>
            <seealso cref="T:Syncfusion.Pdf.HtmlToPdf.HtmlToPdfToc"/> class
        </member>
        <member name="P:Syncfusion.HtmlConverter.BlinkConverterSettings.Scale">
            <summary>
            Gets or sets the scaling factor for HTML to PDF conversion.
            </summary>
            <remarks>Scaling factor range should from 0.1 to 2.0, otherwise the conversion gets failed</remarks>
            /// <example>
            <code lang="C#">
            //Initialize HTML to PDF converter 
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.Blink);
            //Initialize Blinkconverter settings
            BlinkConverterSettings settings = new BlinkConverterSettings();
            //Set Blink path
            settings.BlinkPath = "/BlinkBinaries/";
            //Set scaling factor
            settings.Scale = 1.0F;
            //Assign Blink settings to HTML converter
            htmlConverter.ConverterSettings = settings;
            //Convert URL to PDF
            PdfDocument document = htmlConverter.Convert("https://www.syncfusion.com/");
            //Save and close the PDF document 
            document.Save("Sample.pdf");
            document.Close(true);
            </code>
            <code lang="VB">
            'Initialize HTML to PDF converter 
            Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.Blink)
            'Initialize Blinkconverter settings
            Dim settings As New BlinkConverterSettings()
            'Set Blink path
            settings.BlinkPath = "/BlinkBinaries/"
            'Set scaling factor
            settings.Scale = 1.0F
            'Assign Blink settings to HTML converter
            htmlConverter.ConverterSettings = settings
            'Convert URL to PDF
            Dim document As PdfDocument = htmlConverter.Convert("https://www.syncfusion.com/")
            'Save and close the PDF document 
            document.Save("Sample.pdf")
            document.Close(True)
            </code> 
            </example>
        </member>
        <member name="M:Syncfusion.HtmlConverter.BlinkConverterSettings.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.HtmlConverter.BlinkConverterSettings"/> class.
            </summary>
            <example>
            <code lang = "C#">
            //Initialize HTML to PDF converter with Blink rendering engine
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.Blink);
            BlinkConverterSettings blinkConverterSettings = new BlinkConverterSettings();
            //Set the BlinkBinaries folder path
            blinkConverterSettings.BlinkPath = @"/BlinkBinaries/";
            //Assign Blink converter settings to HTML converter
            htmlConverter.ConverterSettings = blinkConverterSettings;
            //Convert URL to PDF
            PdfDocument document = htmlConverter.Convert("https://www.google.com");
            //Save and close the PDF document 
            document.Save("Output.pdf");
            document.Close(true);
            </code>
            <code lang = "VB">
            'Initialize HTML to PDF converter with Blink rendering engine
            Dim htmlConverter As HtmlToPdfConverter = New HtmlToPdfConverter(HtmlRenderingEngine.Blink)
            Dim blinkConverterSettings As BlinkConverterSettings = New BlinkConverterSettings()
            'Set the BlinkBinaries folder path
            blinkConverterSettings.BlinkPath = "/BlinkBinaries/"
            'Assign Blink converter settings to HTML converter
            htmlConverter.ConverterSettings = blinkConverterSettings
            'Convert URL to PDF
            Dim document As PdfDocument = htmlConverter.Convert("https://www.google.com")
            'Save and close the PDF document 
            document.Save("Output.pdf")
            document.Close(True)
            </code>
            </example>
            <seealso cref="T:Syncfusion.Pdf.Graphics.PdfMargins"/> class
            <seealso cref="T:Syncfusion.Pdf.PdfPageTemplateElement"/> class
            <seealso cref="T:Syncfusion.HtmlConverter.MediaType"/>
            <seealso cref="T:Syncfusion.Pdf.PdfPageRotateAngle"/>
        </member>
        <member name="T:Syncfusion.HtmlConverter.HtmlRenderingEngine">
            <summary>
            Specifies the Render Engine.
            </summary>
            <remarks>
            To know more details about rendering engines, refer this 
            <see href="https://help.syncfusion.com/file-formats/pdf/converting-html-to-pdf">link</see>.
            </remarks>
            <example>
            <code lang="C#">
            //Initialize the HTML to PDF converter 
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.WebKit);
            //Initialize the WebKit converter settings
            WebKitConverterSettings settings = new WebKitConverterSettings();
            //Set WebKit path
            settings.WebKitPath = @"/QtBinaries/";
            //Assign WebKit settings to the HTML converter
            htmlConverter.ConverterSettings = settings;
            //Convert URL to PDF
            PdfDocument document = htmlConverter.Convert("https://www.google.com");
            //Save and close the PDF document 
            document.Save("Output.pdf");
            document.Close(true);
            </code>
            <code lang="VB">
            'Initialize the HTML to PDF converter 
            Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.WebKit)
            'Initialize the WebKit converter settings
            Dim settings As New WebKitConverterSettings()
            'Set WebKit path
            settings.WebKitPath = "/QtBinaries/"
            'Assign WebKit settings to the HTML converter
            htmlConverter.ConverterSettings = settings
            'Convert URL to PDF
            Dim document As PdfDocument = htmlConverter.Convert("https://www.google.com")
            'Save and close the PDF document 
            document.Save("Output.pdf")
            document.Close(True)
            </code>
            </example>
            <seealso cref="T:Syncfusion.HtmlConverter.HtmlToPdfConverter"/>
            <seealso cref="T:Syncfusion.HtmlConverter.WebKitConverterSettings"/>
            <seealso cref="T:Syncfusion.Pdf.PdfDocument"/>
        </member>
        <member name="F:Syncfusion.HtmlConverter.HtmlRenderingEngine.IE">
            <summary>
            IE engine convert the HTML
            </summary>
        </member>
        <member name="F:Syncfusion.HtmlConverter.HtmlRenderingEngine.WebKit">
            <summary>
            WebKit engine convert the HTML
            </summary>
        </member>
        <member name="F:Syncfusion.HtmlConverter.HtmlRenderingEngine.Blink">
            <summary>
            Blink engine convert the HTML
            </summary>
        </member>
        <member name="M:Syncfusion.HtmlConverter.WebKitConverter.DeleteFile(System.String)">
            <summary>
            Delete the file
            </summary>
        </member>
        <member name="M:Syncfusion.HtmlConverter.WebKitConverter.CheckConversionDone(System.String)">
            <summary>
            check conversion is success or not in surrogate process and throws the relevent exception
            </summary> 
        </member>
        <member name="M:Syncfusion.HtmlConverter.WebKitConverter.ConvertToImage(System.String)">
            <summary>
            Converts html to image.
            </summary>
            <returns>Converted image's stream.</returns>
        </member>
        <member name="M:Syncfusion.HtmlConverter.WebKitConverter.ConvertToImage(System.String,System.String)">
            <summary>
            Converts html to image.
            </summary>
            <returns>Converted image's stream.</returns>
        </member>
        <member name="M:Syncfusion.HtmlConverter.WebKitConverter.ConvertHtmlToPDF(System.String[],System.String[],System.String[],System.String[],System.String[])">
            <summary>
            Entry point for the x64 process and process the OCR
            </summary>
        </member>
        <member name="M:Syncfusion.HtmlConverter.WebKitConverter.ConvertHtmlToImage(System.String[],System.String[],System.String[],System.String[],System.String[])">
            <summary>
            Entry point for HTML to Image conversion
            </summary>
        </member>
        <member name="M:Syncfusion.HtmlConverter.WebKitConverter.ConvertHtmlToSvg(System.String[],System.String[],System.String[],System.String[])">
            <summary>
            Entry point for HTML to SVG conversion
            </summary>
        </member>
        <member name="M:Syncfusion.HtmlConverter.WebKitConverter.ConvertHtmlToMhtml(System.String[],System.String[],System.String[],System.String[])">
            <summary>
            Entry point for HTML to MHTML conversion
            </summary>
        </member>
        <member name="T:Syncfusion.HtmlConverter.MediaType">
            <summary>
            Specifies the media type of WebKit converter
            </summary>
            <example>
            <code lang = "C#">
            //Initialize HTML converter with WebKit rendering engine
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.WebKit);
            WebKitConverterSettings webKitSettings = new WebKitConverterSettings();
            //Set WebKit path
            webKitSettings.WebKitPath = @"/QtBinaries/"; 
            //Set print media type
            webKitSettings.MediaType = MediaType.Print;
            //Assign WebKit settings to HTML converter
            htmlConverter.ConverterSettings = webKitSettings;
            //Convert URL to PDF
            PdfDocument document = htmlConverter.Convert("https://www.google.com");  
            //Save the document.
            document.Save("Sample.pdf");
            document.Close();
            </code>
            <code>
            'Initialize HTML converter with WebKit rendering engine
            Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.WebKit)
            Dim webKitSettings As New WebKitConverterSettings()
            'Set WebKit path
            webKitSettings.WebKitPath = "/QtBinaries/"
            'Set print media type
            webKitSettings.MediaType = MediaType.Print
            'Assign WebKit settings to HTML converter
            htmlConverter.ConverterSettings = webKitSettings
            'Convert URL to PDF
            Dim document As PdfDocument = htmlConverter.Convert("https://www.google.com")
            'Save the document.
            document.Save("Sample.pdf")
            document.Close()
            </code>
            </example>
        </member>
        <member name="F:Syncfusion.HtmlConverter.MediaType.Print">
            <summary>
            Print media type
            </summary>
        </member>
        <member name="F:Syncfusion.HtmlConverter.MediaType.Screen">
            <summary>
            Screen media type
            </summary>
        </member>
        <member name="T:Syncfusion.HtmlConverter.WebKitProxyType">
            <summary>
            Type of proxy server
            </summary>
            <example>
            <code lang = "C#">
            //Initialize HTML converter
            HtmlToPdfConverter htmlConverter = new HtmlToPdfConverter(HtmlRenderingEngine.WebKit);
            //Initialize WebKit converter settings
            WebKitConverterSettings webKitSettings = new WebKitConverterSettings();
            //Assign the WebKit path
            webKitSettings.WebKitPath = @"/QtBinaries/";
            //Set manual proxy with proxy server host and port number.
            webKitSettings.ProxySettings.HostName = "127.0.0.1";
            webKitSettings.ProxySettings.PortNumber = 8080;
            //Set proxy server type
            webKitSettings.ProxySettings.Type = WebKitProxyType.Http;
            //Assign WebKit settings to HTML converter
            htmlConverter.ConverterSettings = webKitSettings;
            //Convert url to pdf
            PdfDocument document = htmlConverter.Convert("https://www.google.com");
            //Save and close the PDF document
            document.Save("Output.pdf");
            document.Close(true);
            </code>
            <code lang= "VB">
            'Initialize HTML converter
            Dim htmlConverter As New HtmlToPdfConverter(HtmlRenderingEngine.WebKit)
            'Initialize WebKit converter settings
            Dim webKitSettings As New WebKitConverterSettings()
            'Assign the WebKit path
            webKitSettings.WebKitPath = "/QtBinaries/"
            'Set manual proxy with proxy server host and port number.
            webKitSettings.ProxySettings.HostName = "127.0.0.1"
            webKitSettings.ProxySettings.PortNumber = 8080
            'Set proxy server type
            webKitSettings.ProxySettings.Type = WebKitProxyType.Http
            'Assign WebKit settings to HTML converter
            htmlConverter.ConverterSettings = webKitSettings
            'Convert url to pdf
            Dim document As PdfDocument = htmlConverter.Convert("https://www.google.com")
            'Save and close the PDF document
            document.Save("Output.pdf")
            document.Close(True)
            </code>
            </example>
            <seealso cref="T:Syncfusion.HtmlConverter.WebKitProxySettings"/>
            <seealso cref="T:Syncfusion.HtmlConverter.WebKitConverterSettings"/>
        </member>
        <member name="F:Syncfusion.HtmlConverter.WebKitProxyType.None">
            <summary>
            No proxy type
            </summary>
        </member>
        <member name="F:Syncfusion.HtmlConverter.WebKitProxyType.Http">
            <summary>
            Http proxy type
            </summary>
        </member>
        <member name="F:Syncfusion.HtmlConverter.WebKitProxyType.HttpCaching">
            <summary>
            Http caching proxy type
            </summary>
        </member>
        <member name="F:Syncfusion.HtmlConverter.WebKitProxyType.Socks5">
            <summary>
            Socks5 proxy type
            </summary>
        </member>
        <member name="T:Syncfusion.HtmlConverter.Natives.Native">
            <summary>
            Contains native function declarations.
            </summary>
        </member>
        <member name="F:Syncfusion.HtmlConverter.Natives.Native.PRF_CHECKVISIBLE">
            <summary>
            Windows message.
            </summary>
        </member>
        <member name="F:Syncfusion.HtmlConverter.Natives.Native.PRF_CHILDREN">
            <summary>
            Windows message.
            </summary>
        </member>
        <member name="F:Syncfusion.HtmlConverter.Natives.Native.PRF_CLIENT">
            <summary>
            Windows message.
            </summary>
        </member>
        <member name="F:Syncfusion.HtmlConverter.Natives.Native.PRF_ERASEBKGND">
            <summary>
            Windows message.
            </summary>
        </member>
        <member name="F:Syncfusion.HtmlConverter.Natives.Native.PRF_NONCLIENT">
            <summary>
            Windows message.
            </summary>
        </member>
        <member name="F:Syncfusion.HtmlConverter.Natives.Native.PRF_OWNED">
            <summary>
            Windows message.
            </summary>
        </member>
        <member name="F:Syncfusion.HtmlConverter.Natives.Native.PW_CLIENTONLY">
            <summary>
            Windows message.
            </summary>
        </member>
        <member name="F:Syncfusion.HtmlConverter.Natives.Native.WM_PRINT">
            <summary>
            Windows message.
            </summary>
        </member>
        <member name="F:Syncfusion.HtmlConverter.Natives.Native.WM_PRINTCLIENT">
            <summary>
            Windows message.
            </summary>
        </member>
        <member name="F:Syncfusion.HtmlConverter.Natives.Native.S_OK">
            <summary>
            HRESULT S_OK constant.
            </summary>
        </member>
        <member name="F:Syncfusion.HtmlConverter.Natives.Native.S_FALSE">
            <summary>
            HRESULT S_OK constant.
            </summary>
        </member>
        <member name="M:Syncfusion.HtmlConverter.Natives.Native.#ctor">
            <summary>
            Creates new object.
            </summary>
        </member>
        <member name="T:Syncfusion.HtmlConverter.Natives.DOCHOSTUITYPE">
            <summary>
            System enum.
            </summary>
        </member>
        <member name="T:Syncfusion.HtmlConverter.Natives.DOCHOSTUIDBLCLK">
            <summary>
            System enum.
            </summary>
        </member>
        <member name="T:Syncfusion.HtmlConverter.Natives.DOCHOSTUIFLAG">
            <summary>
            System enum.
            </summary>
        </member>
        <member name="T:Syncfusion.HtmlConverter.Natives.INVOKE_PARAMS">
            <summary>
            System enum.
            </summary>
        </member>
        <member name="T:Syncfusion.HtmlConverter.Natives.tagMSG">
            <summary>
            System struct.
            </summary>
        </member>
        <member name="T:Syncfusion.HtmlConverter.Natives.ICustomDoc">
            <summary>
            System interface.
            </summary>
        </member>
        <member name="T:Syncfusion.HtmlConverter.Natives.IOleObject">
            <summary>
            System interface.
            </summary>
        </member>
        <member name="M:Syncfusion.HtmlConverter.Natives.IOleObject.SetClientSite(Syncfusion.HtmlConverter.Natives.IOleClientSite)">
            <summary>
            System method.
            </summary>
        </member>
        <member name="M:Syncfusion.HtmlConverter.Natives.IOleObject.GetClientSite(Syncfusion.HtmlConverter.Natives.IOleClientSite)">
            <summary>
            System method.
            </summary>
        </member>
        <member name="M:Syncfusion.HtmlConverter.Natives.IOleObject.SetHostNames(System.Object,System.Object)">
            <summary>
            System method.
            </summary>
        </member>
        <member name="M:Syncfusion.HtmlConverter.Natives.IOleObject.Close(System.UInt32)">
            <summary>
            System method.
            </summary>
        </member>
        <member name="M:Syncfusion.HtmlConverter.Natives.IOleObject.SetMoniker(System.UInt32,System.Object)">
            <summary>
            System method.
            </summary>
        </member>
        <member name="M:Syncfusion.HtmlConverter.Natives.IOleObject.GetMoniker(System.UInt32,System.UInt32,System.Object)">
            <summary>
            System method.
            </summary>
        </member>
        <member name="M:Syncfusion.HtmlConverter.Natives.IOleObject.InitFromData(System.Runtime.InteropServices.ComTypes.IDataObject,System.Boolean,System.UInt32)">
            <summary>
            System method.
            </summary>
        </member>
        <member name="M:Syncfusion.HtmlConverter.Natives.IOleObject.GetClipboardData(System.UInt32,System.Runtime.InteropServices.ComTypes.IDataObject)">
            <summary>
            System method.
            </summary>
        </member>
        <member name="M:Syncfusion.HtmlConverter.Natives.IOleObject.DoVerb(System.UInt32,System.UInt32,System.Object,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            System method.
            </summary>
        </member>
        <member name="M:Syncfusion.HtmlConverter.Natives.IOleObject.EnumVerbs(System.Object)">
            <summary>
            System method.
            </summary>
        </member>
        <member name="M:Syncfusion.HtmlConverter.Natives.IOleObject.Update">
            <summary>
            System method.
            </summary>
        </member>
        <member name="M:Syncfusion.HtmlConverter.Natives.IOleObject.IsUpToDate">
            <summary>
            System method.
            </summary>
        </member>
        <member name="M:Syncfusion.HtmlConverter.Natives.IOleObject.GetUserClassID(System.UInt32)">
            <summary>
            System method.
            </summary>
        </member>
        <member name="M:Syncfusion.HtmlConverter.Natives.IOleObject.GetUserType(System.UInt32,System.UInt32)">
            <summary>
            System method.
            </summary>
        </member>
        <member name="M:Syncfusion.HtmlConverter.Natives.IOleObject.SetExtent(System.UInt32,System.UInt32)">
            <summary>
            System method.
            </summary>
        </member>
        <member name="M:Syncfusion.HtmlConverter.Natives.IOleObject.GetExtent(System.UInt32,System.UInt32)">
            <summary>
            System method.
            </summary>
        </member>
        <member name="M:Syncfusion.HtmlConverter.Natives.IOleObject.Advise(System.Object,System.UInt32)">
            <summary>
            System method.
            </summary>
        </member>
        <member name="M:Syncfusion.HtmlConverter.Natives.IOleObject.Unadvise(System.UInt32)">
            <summary>
            System method.
            </summary>
        </member>
        <member name="M:Syncfusion.HtmlConverter.Natives.IOleObject.EnumAdvise(System.Object)">
            <summary>
            System method.
            </summary>
        </member>
        <member name="M:Syncfusion.HtmlConverter.Natives.IOleObject.GetMiscStatus(System.UInt32,System.UInt32)">
            <summary>
            System method.
            </summary>
        </member>
        <member name="M:Syncfusion.HtmlConverter.Natives.IOleObject.SetColorScheme(System.Object)">
            <summary>
            System method.
            </summary>
        </member>
        <member name="T:Syncfusion.HtmlConverter.Natives.IOleClientSite">
            <summary>
            System interface.
            </summary>
        </member>
        <member name="M:Syncfusion.HtmlConverter.Natives.IOleClientSite.SaveObject">
            <summary>
            System method.
            </summary>
        </member>
        <member name="M:Syncfusion.HtmlConverter.Natives.IOleClientSite.GetMoniker(System.UInt32,System.UInt32,System.Object)">
            <summary>
            System method.
            </summary>
        </member>
        <member name="M:Syncfusion.HtmlConverter.Natives.IOleClientSite.GetContainer(System.Object)">
            <summary>
            System method.
            </summary>
        </member>
        <member name="M:Syncfusion.HtmlConverter.Natives.IOleClientSite.ShowObject">
            <summary>
            System method.
            </summary>
        </member>
        <member name="M:Syncfusion.HtmlConverter.Natives.IOleClientSite.OnShowWindow(System.Boolean)">
            <summary>
            System method.
            </summary>
        </member>
        <member name="M:Syncfusion.HtmlConverter.Natives.IOleClientSite.RequestNewObjectLayout">
            <summary>
            System method.
            </summary>
        </member>
        <member name="M:Syncfusion.HtmlConverter.Natives.KernelApi.SetDllDirectory(System.String)">
            <summary>
            Adds a directory to the search path used to locate DLLs for the application.
            </summary>
            <param name="lpPathName">The directory to be added to the search path. If this parameter is an empty string (""), the call removes the current directory from the default DLL search order. If this parameter is NULL, the function restores the default search order.</param>
            <returns>If the function succeeds, the return value is nonzero.</returns>
        </member>
        <member name="M:Syncfusion.HtmlConverter.Natives.KernelApi.WaitForSingleObject(System.IntPtr,System.UInt32)">
            <summary>
            Waits until the specified object is in the signaled state or the time-out interval elapses.
            </summary>
            <param name="hHandle">A handle to the object. If this handle is closed while the wait is still pending, 
            the function's behavior is undefined.</param>
            <param name="dwMilliseconds">The time-out interval, in milliseconds. If a nonzero value is specified, 
            the function waits until the object is signaled or the interval elapses. 
            If dwMilliseconds is zero, the function does not enter a wait state if the object is not signaled; 
            it always returns immediately. If dwMilliseconds is INFINITE, the function will return only when the object is signaled</param>
            <returns>If the function succeeds, the return value indicates the event that caused the function to return.</returns>
        </member>
        <member name="M:Syncfusion.HtmlConverter.Natives.KernelApi.CloseHandle(System.IntPtr)">
            <summary>
            Closes an open object handle.
            </summary>
            <param name="handle">A valid handle to an open object.</param>
            <returns>If the function succeeds, the return value is nonzero.</returns>
        </member>
        <member name="F:Syncfusion.HtmlConverter.Natives.AdvApi.status">
            <summary>
            The ImpersonateLoggedOnUser function lets the calling thread impersonate the security context of a logged-on user. 
            The user is represented by a token handle.
            </summary>
            <param name="hToken">A handle to a primary or impersonation access token that represents a logged-on user. .</param>
            <returns>If the function succeeds, the return value is nonzero.</returns>
        </member>
        <member name="M:Syncfusion.HtmlConverter.Natives.AdvApi.DuplicateToken(System.IntPtr,System.Int32,System.IntPtr@)">
            <summary>
            The DuplicateToken function creates a new access token that duplicates one already in existence.
            </summary>
            <param name="hToken">A handle to an access token opened with TOKEN_DUPLICATE access.</param>
            <param name="impersonationLevel">Specifies a SECURITY_IMPERSONATION_LEVEL enumerated type that supplies the impersonation level of the new token.</param>
            <param name="hNewToken">A pointer to a variable that receives a handle to the duplicate token. This handle has TOKEN_IMPERSONATE and TOKEN_QUERY access to the new token.</param>
            <returns>If the function succeeds, the return value is nonzero  .</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Syncfusion.HtmlConverter.Natives.AdvApi.CreateProcessAsUser(System.IntPtr,System.String,System.String,System.IntPtr,System.IntPtr,System.Boolean,System.Int32,System.IntPtr,System.String,Syncfusion.HtmlConverter.Natives.Structures.STARTUPINFO@,Syncfusion.HtmlConverter.Natives.Structures.PROCESS_INFORMATION@)" -->
        <member name="F:Syncfusion.HtmlConverter.Natives.ProcessInteroperability.INFINITE">
            <summary>
            Holds the Infinite value
            </summary>
        </member>
        <member name="F:Syncfusion.HtmlConverter.Natives.ProcessInteroperability.WAIT_FAILED">
            <summary>
            Holds the Infinite value for wait failed
            </summary>
        </member>
        <member name="F:Syncfusion.HtmlConverter.Natives.ProcessInteroperability.x86Platform">
            <summary>
            Holds the value of the target platform
            </summary>
        </member>
        <member name="M:Syncfusion.HtmlConverter.Natives.ProcessInteroperability.LaunchSurrogateProcess(System.String)">
            <summary>
            Launch the 32 bit surrogate process
            </summary>
            <param name="strCommand">Path of the surrogate process</param>
        </member>
        <member name="M:Syncfusion.HtmlConverter.Natives.ProcessInteroperability.CreateSurrogateProcess(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,Syncfusion.HtmlConverter.WebKitProxySettings,System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.String)">
            <summary>
            Create a 32 bit surrogate process application
            </summary>
        </member>
        <member name="T:Syncfusion.HtmlConverter.Natives.WinApis">
            <summary>
            Windows API constants and functions
            </summary>
        </member>
        <member name="T:Syncfusion.HtmlConverter.Natives.Iid_Clsids">
            <summary>
            GUID representation of IIDs and CLSIDs
            </summary>
        </member>
        <member name="P:System.Strings.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:System.Strings.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:System.Strings.net_securityprotocolnotsupported">
            <summary>
              Looks up a localized string similar to The requested security protocol is not supported..
            </summary>
        </member>
        <member name="P:System.Strings.net_uri_NotAbsolute">
            <summary>
              Looks up a localized string similar to This operation is not supported for a relative URI..
            </summary>
        </member>
        <member name="P:System.Strings.net_WebSockets_AcceptUnsupportedProtocol">
            <summary>
              Looks up a localized string similar to The WebSocket client request requested &apos;{0}&apos; protocol(s), but server is only accepting &apos;{1}&apos; protocol(s)..
            </summary>
        </member>
        <member name="P:System.Strings.net_Websockets_AlreadyOneOutstandingOperation">
            <summary>
              Looks up a localized string similar to There is already one outstanding &apos;{0}&apos; call for this WebSocket instance. ReceiveAsync and SendAsync can be called simultaneously, but at most one outstanding operation for each of them is allowed at the same time..
            </summary>
        </member>
        <member name="P:System.Strings.net_WebSockets_AlreadyStarted">
            <summary>
              Looks up a localized string similar to The WebSocket has already been started..
            </summary>
        </member>
        <member name="P:System.Strings.net_WebSockets_Argument_InvalidMessageType">
            <summary>
              Looks up a localized string similar to The message type &apos;{0}&apos; is not allowed for the &apos;{1}&apos; operation. Valid message types are: &apos;{2}, {3}&apos;. To close the WebSocket, use the &apos;{4}&apos; operation instead. .
            </summary>
        </member>
        <member name="P:System.Strings.net_WebSockets_ArgumentOutOfRange_TooSmall">
            <summary>
              Looks up a localized string similar to The argument must be a value greater than {0}..
            </summary>
        </member>
        <member name="P:System.Strings.net_WebSockets_Generic">
            <summary>
              Looks up a localized string similar to An internal WebSocket error occurred. Please see the innerException, if present, for more details. .
            </summary>
        </member>
        <member name="P:System.Strings.net_WebSockets_InvalidCharInProtocolString">
            <summary>
              Looks up a localized string similar to The WebSocket protocol &apos;{0}&apos; is invalid because it contains the invalid character &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:System.Strings.net_WebSockets_InvalidCloseStatusCode">
            <summary>
              Looks up a localized string similar to The close status code &apos;{0}&apos; is reserved for system use only and cannot be specified when calling this method..
            </summary>
        </member>
        <member name="P:System.Strings.net_WebSockets_InvalidCloseStatusDescription">
            <summary>
              Looks up a localized string similar to The close status description &apos;{0}&apos; is too long. The UTF8-representation of the status description must not be longer than {1} bytes..
            </summary>
        </member>
        <member name="P:System.Strings.net_WebSockets_InvalidEmptySubProtocol">
            <summary>
              Looks up a localized string similar to Empty string is not a valid subprotocol value. Please use \&quot;null\&quot; to specify no value..
            </summary>
        </member>
        <member name="P:System.Strings.net_WebSockets_InvalidResponseHeader">
            <summary>
              Looks up a localized string similar to The &apos;{0}&apos; header value &apos;{1}&apos; is invalid..
            </summary>
        </member>
        <member name="P:System.Strings.net_WebSockets_InvalidState">
            <summary>
              Looks up a localized string similar to The WebSocket is in an invalid state (&apos;{0}&apos;) for this operation. Valid states are: &apos;{1}&apos;.
            </summary>
        </member>
        <member name="P:System.Strings.net_WebSockets_InvalidState_ClosedOrAborted">
            <summary>
              Looks up a localized string similar to The &apos;{0}&apos; instance cannot be used for communication because it has been transitioned into the &apos;{1}&apos; state..
            </summary>
        </member>
        <member name="P:System.Strings.net_WebSockets_NoDuplicateProtocol">
            <summary>
              Looks up a localized string similar to Duplicate protocols are not allowed: &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:System.Strings.net_WebSockets_NotConnected">
            <summary>
              Looks up a localized string similar to The WebSocket is not connected..
            </summary>
        </member>
        <member name="P:System.Strings.net_WebSockets_ReasonNotNull">
            <summary>
              Looks up a localized string similar to The close status description &apos;{0}&apos; is invalid. When using close status code &apos;{1}&apos; the description must be null..
            </summary>
        </member>
        <member name="P:System.Strings.net_WebSockets_Scheme">
            <summary>
              Looks up a localized string similar to Only Uris starting with &apos;ws://&apos; or &apos;wss://&apos; are supported..
            </summary>
        </member>
        <member name="P:System.Strings.net_WebSockets_UnsupportedPlatform">
            <summary>
              Looks up a localized string similar to The WebSocket protocol is not supported on this platform..
            </summary>
        </member>
        <member name="P:System.Strings.net_webstatus_ConnectFailure">
            <summary>
              Looks up a localized string similar to Unable to connect to the remote server.
            </summary>
        </member>
        <member name="P:System.Strings.NotReadableStream">
            <summary>
              Looks up a localized string similar to The base stream is not readable..
            </summary>
        </member>
        <member name="P:System.Strings.NotWriteableStream">
            <summary>
              Looks up a localized string similar to The base stream is not writeable..
            </summary>
        </member>
    </members>
</doc>
