<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Syncfusion.GridCommon.WinForms</name>
    </assembly>
    <members>
        <member name="T:Syncfusion.WinForms.GridCommon.Collections.ComponentModel.NamespaceDoc">
            <summary>
            Contains classes used to dispose the instances and also contains some common event arguments.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.GridCommon.Collections.ComponentModel.NonFinalizeDisposable">
            <summary>
            This is a base class for Disposable. It implements the IDisposable interface
            as suggested in the .NET documentation using the Disposable pattern but it does not
            implement a finalizer. If you need finalization you need to derive from Disposable
            or add a finalizer to your derived class and manually call Dispose from the Finalizer.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.ComponentModel.NonFinalizeDisposable.Dispose">
            <overload>
            Releases all resources used by the Component.
            </overload>
            <summary>
            Releases all resources used by the Component.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.ComponentModel.NonFinalizeDisposable.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the Component and optionally releases the managed resources.
            </summary>
            <param name="disposing"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</param>
            <remarks>See the documentation for the System.ComponentModel.Component class and its Dispose member.</remarks>
        </member>
        <member name="T:Syncfusion.WinForms.GridCommon.Collections.ComponentModel.Disposable">
            <summary>
            This class provides a base class that implements the IDisposable interface
            as suggested in the .NET documentation using the Disposable pattern.
            </summary>
            <remarks>If you derive from this class, you only need to override the protected
            Dispose method and check the disposing parameter.</remarks>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.ComponentModel.Disposable.Finalize">
            <summary>
            <see cref="M:System.Object.Finalize"/>.<para/>
            In C# and C++, finalizers are expressed using destructor syntax.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.GridCommon.Collections.ComponentModel.DisposableWithEvent">
            <summary>
            This class provides a base class that implements the IDisposable interface
            as suggested in the .NET documentation using the Disposable pattern. After the
            object was disposed a <see cref="E:Syncfusion.WinForms.GridCommon.Collections.ComponentModel.DisposableWithEvent.Disposed"/> event is raised.
            </summary>
            <remarks>If you derive from this class, you only need to override the protected
            Dispose method and check the disposing parameter.</remarks>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.ComponentModel.DisposableWithEvent.Dispose">
            <overload>
            Releases all resources used by the Component.
            </overload>
            <summary>
            Releases all resources used by the Component.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.ComponentModel.DisposableWithEvent.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the Component and optionally releases the managed resources.
            </summary>
            <param name="disposing"><see langword="true"/> to release both managed and unmanaged resources; <see langword="false"/> to release only unmanaged resources.</param>
            <remarks>See the documentation for the <see cref="T:System.ComponentModel.Component"/> class and its Dispose member.</remarks>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.ComponentModel.DisposableWithEvent.OnDisposed(System.EventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.WinForms.GridCommon.Collections.ComponentModel.DisposableWithEvent.Disposed"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.Collections.ComponentModel.DisposableWithEvent.IsDisposed">
            <summary>
            Allows to detect if object is disposed or not. True indicates object is disposed,
            otherwise indicates object is still alive and ready for use.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.Collections.ComponentModel.DisposableWithEvent.IsDisposing">
            <summary>
            Returns True if object is executing the <see cref="M:Syncfusion.WinForms.GridCommon.Collections.ComponentModel.DisposableWithEvent.Dispose"/> or <see cref="M:Syncfusion.WinForms.GridCommon.Collections.ComponentModel.DisposableWithEvent.Dispose(System.Boolean)"/> method call.
            </summary>
        </member>
        <member name="E:Syncfusion.WinForms.GridCommon.Collections.ComponentModel.DisposableWithEvent.Disposed">
            <summary>
            Occurs after the object was disposed.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.GridCommon.Collections.ComponentModel.IDisposedEvent">
            <summary>
            An interface for the <see cref="E:Syncfusion.WinForms.GridCommon.Collections.ComponentModel.IDisposedEvent.Disposed"/> event.
            </summary>
        </member>
        <member name="E:Syncfusion.WinForms.GridCommon.Collections.ComponentModel.IDisposedEvent.Disposed">
            <summary>
            Occurs when Dispose was called.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.GridCommon.Collections.Generic.NamespaceDoc">
            <summary>
            Contains classes and interfaces to maintain the row heights and column widths in a tree structure.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTableEntry`1">
            <summary>
            A leaf in the tree with value and optional sort key.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.GridCommon.Collections.TreeTableNode">
            <summary>
            A branch or leaf in the tree.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.GridCommon.Collections.ITreeTableNode">
            <summary>
            A branch or leaf in the tree.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.ITreeTableNode.GetPosition">
            <summary>
            returns the position in the tree.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.ITreeTableNode.GetCount">
            <summary>
            Returns the number of child nodes (+1 for the current node).
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.ITreeTableNode.IsEmpty">
            <summary>
            Indicates whether leaf is empty.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.ITreeTableNode.IsEntry">
            <summary>
            Indicates whether this is a leaf.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.ITreeTableNode.GetLevel">
            <summary>
            Returns the tree level of this node.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.ITreeTableNode.GetMinimum">
            <summary>
            Returns the minimum value (of the leftmost leaf) of the branch in a sorted tree.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.ITreeTableNode.InvalidateCounterBottomUp(System.Boolean)">
            <summary>
            Walk up parent branches and reset counters.
            </summary>
            <param name="notifyParentRecordSource"></param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.ITreeTableNode.InvalidateSummariesBottomUp(System.Boolean)">
            <summary>
            Walk up parent branches and reset summaries.
            </summary>
            <param name="notifyParentRecordSource"></param>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.Collections.ITreeTableNode.Parent">
            <summary>
            Gets / sets the parent branch.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableNode.GetPosition">
            <summary>
            Returns the position in the tree.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableNode.GetMinimum">
            <summary>
            Returns the minimum value (of the most-left leaf) of the branch in a sorted tree.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableNode.IsEmpty">
            <summary>
            Indicates whether leaf is empty.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableNode.IsEntry">
            <summary>
            Indicates whether this is a leaf.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableNode.GetCount">
            <summary>
            Returns the number of child nodes (+1 for the current node).
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableNode.GetLevel">
            <summary>
            Returns the tree level of this node.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableNode.GetNodeInfo">
            <summary>
            Returns the Debug / text information about the node.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableNode.ToString">
            <summary>
            Returns the Debug / text information about the node.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableNode.InvalidateCounterBottomUp(System.Boolean)">
            <summary>
            Walks up parent branches and reset counters.
            </summary>
            <param name="notifyParentRecordSource"></param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableNode.InvalidateSummariesBottomUp(System.Boolean)">
            <summary>
            Walks up parent branches and reset summaries.
            </summary>
            <param name="notifyParentRecordSource"></param>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.Collections.TreeTableNode.Tree">
            <summary>
            Gets / sets the tree this node belongs to.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.Collections.TreeTableNode.Parent">
            <summary>
            Gets / sets the parent branch.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.GridCommon.Collections.ITreeTableEntry">
            <summary>
            A leaf with value and optional sort key.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.ITreeTableEntry.GetSortKey">
            <summary>
            Returns the sort key of this leaf.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.ITreeTableEntry.CreateBranch(Syncfusion.WinForms.GridCommon.Collections.TreeTable)">
            <summary>
            Creates a branch that can hold this entry when new leaves are inserted into the tree.
            </summary>
            <param name="tree"></param>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.Collections.ITreeTableEntry.Value">
            <summary>
            Gets / sets the value attached to this leaf.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTableEntry`1.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the Component and optionally releases the managed resources.
            </summary>
            <param name="disposing"><see langword="true"/> to release both managed and unmanaged resources; <see langword="false"/> to release only unmanaged resources.</param>
            <remarks>See the documentation for the System.ComponentModel.Component class and its Dispose member.</remarks>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTableEntry`1.GetSortKey">
            <summary>
            Returns the sort key of this leaf.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTableEntry`1.GetMinimum">
            <summary>
            Returns the minimum value (of the most-left leaf) of the branch in a sorted tree.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTableEntry`1.GetCount">
            <summary>
            Returns the number of child nodes (+1 for the current node).
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTableEntry`1.CreateBranch(Syncfusion.WinForms.GridCommon.Collections.TreeTable)">
            <summary>
            Creates a branch that can hold this entry when new leaves are inserted into the tree.
            </summary>
            <param name="tree"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTableEntry`1.GetNodeInfo">
            <summary>
            Returns the Debug / text information about the node.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTableEntry`1.IsEntry">
            <summary>
            Indicates whether this is a leaf.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTableEntry`1.Value">
            <summary>
            Gets or sets the value attached to this leaf.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTable`1">
            <summary>
            A tree table.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.GridCommon.Collections.ITreeTable">
            <summary>
            Tree table interface definition.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.ITreeTable.BeginInit">
            <summary>
            Optimizes insertion of many elements when tree is initialized for the first time.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.ITreeTable.EndInit">
            <summary>
            Ends optimization of insertion of elements when tree is initialized for the first time.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.ITreeTable.GetNextEntry(Syncfusion.WinForms.GridCommon.Collections.ITreeTableEntry)">
            <summary>
            Optimized access to a subsequent entry.
            </summary>
            <param name="current"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.ITreeTable.GetPreviousEntry(Syncfusion.WinForms.GridCommon.Collections.ITreeTableEntry)">
            <summary>
            Optimized access to a previous entry.
            </summary>
            <param name="current"></param>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.Collections.ITreeTable.Sorted">
            <summary>
            Indicates whether this is a sorted tree.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.Collections.ITreeTable.Comparer">
            <summary>
            A comparer used by sorted trees.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.Collections.ITreeTable.Root">
            <summary>
            Returns the root node.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.Collections.ITreeTable.IsInitializing">
            <summary>
            Indicates whether BeginInit was called.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTable`1.#ctor(System.Boolean)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTable`1"/>.
            </summary>
            <param name="sorted"></param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTable`1.Dispose">
            <summary>
            Disposes of the object.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTable`1.BeginInit">
            <summary>
            Optimizes insertion of many items when thisTree is initialized for the first time.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTable`1.EndInit">
            <summary>
            Ends optimization of insertion of items when thisTree is initialized for the first time.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTable`1.GetNextEntry(Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTableEntry{`0})">
            <summary>
            Optimized access to a subsequent entry.
            </summary>
            <param name="current"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTable`1.GetPreviousEntry(Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTableEntry{`0})">
            <summary>
            Optimized access to the previous entry.
            </summary>
            <param name="current"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTable`1.Insert(System.Int32,Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTableEntry{`0})">
            <summary>
            Inserts an item into the collection at the specified index.
            </summary>
            <param name="index">The zero-based index at which the item should be inserted.</param>
            <param name="item">The item to insert. The value must not be a NULL reference (Nothing in Visual Basic). </param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTable`1.Remove(Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTableEntry{`0})">
            <summary>
            Removes the specified item from the collection.
            </summary>
            <param name="item">The item to remove from the collection. If the value is NULL or the item is not contained
            in the collection, the method will do nothing.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTable`1.RemoveAt(System.Int32)">
            <summary>
            Removes the item at the specified index of the collection.
            </summary>
            <param name="index">The zero-based index of the item to remove. </param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTable`1.IndexOf(Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTableEntry{`0})">
            <summary>
            Returns the zero-based index of the occurrence of the item in the collection.
            </summary>
            <param name="item">The item to locate in the collection. The value can be a NULL reference (Nothing in Visual Basic). </param>
            <returns>The zero-based index of the occurrence of the item within the entire collection, if found; otherwise -1.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTable`1.Add(Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTableEntry{`0})">
            <summary>
            Adds a value to the end of the collection.
            </summary>
            <param name="item">The item to be added to the end of the collection. The value must not be a NULL reference (Nothing in Visual Basic). </param>
            <returns>The zero-based collection index at which the value has been added.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTable`1.Clear">
            <summary>
            Removes all items from the collection.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTable`1.Contains(Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTableEntry{`0})">
            <summary>
            Determines if the item belongs to this collection.
            </summary>
            <param name="item">The object to locate in the collection. The value can be a NULL reference (Nothing in Visual Basic).</param>
            <returns>True if item is found in the collection; otherwise False.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTable`1.CopyTo(Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTableEntry{`0}[],System.Int32)">
            <summary>
            Copies the entire collection to a compatible one-dimensional array, starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional array that is the destination of the items copied from the  ArrayList. The array must have zero-based indexing. </param>
            <param name="index">The zero-based index in an array at which copying begins. </param>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTable`1.InternalTree">
            <summary>
            The non-generic tree table with actual implementation.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTable`1.Root">
            <summary>
            Gets the root node.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTable`1.Sorted">
            <summary>
            Indicates whether thisTree is sorted.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTable`1.Comparer">
            <summary>
            Gets or sets the comparer used by sorted trees.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTable`1.IsInitializing">
            <summary>
            Indicates whether BeginInit was called.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTable`1.Item(System.Int32)">
            <summary>
            Gets or sets the item at the zero-based index.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTable`1.Count">
            <summary>
            Gets the number of items contained in the collection.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTable`1.IsReadOnly">
            <summary>
            Gets a value indicating whether the collection is read-only.
            </summary>
            <value></value>
            <returns>true if the collection is read-only; otherwise, false.
            </returns>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTable`1.IsFixedSize">
            <summary>
            Gets a value indicating whether the collection has a fixed size.
            </summary>
            <value></value>
            <returns>true if the collection has a fixed size; otherwise, false.
            </returns>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTable`1.IsSynchronized">
            <summary>
            Returns False.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.GridCommon.Collections.TreeTableEnumerator">
            <summary>
            Strongly typed enumerator for <see cref="T:Syncfusion.WinForms.GridCommon.Collections.TreeTable"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableEnumerator.#ctor(Syncfusion.WinForms.GridCommon.Collections.ITreeTable)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.WinForms.GridCommon.Collections.TreeTableEnumerator"/>.
            </summary>
            <param name="tree"></param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableEnumerator.Reset">
            <summary>
            Resets the enumerator.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableEnumerator.MoveNext">
            <summary>
            Indicates whether to move to the next node.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableEnumerator.Dispose">
            <summary>
            Call the Dispose and SuppressFinalize method for dipose the instance of <see cref="T:Syncfusion.WinForms.GridCommon.Collections.TreeTableEnumerator"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableEnumerator.Dispose(System.Boolean)">
            <summary>
            Dispose the live resources used by the <see cref="T:Syncfusion.WinForms.GridCommon.Collections.TreeTableEnumerator"/> class.
            </summary>
            <param name="disposing">Dispose the instance, if it is True</param>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.Collections.TreeTableEnumerator.System#Collections#IEnumerator#Current">
            <summary>
            Returns the current enumerator.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.Collections.TreeTableEnumerator.Current">
            <summary>
            Returns the current node.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTableEnumerator`1.Dispose(System.Boolean)">
            <summary>
            Dispose the live resources used by the <see cref="T:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTableEnumerator`1"/> class.
            </summary>
            <param name="disposing">Dispose the instance, if it is True</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericBinaryTreeCollection`1.GetNext(`0)">
            <summary>
            Returns the next item in the collection.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericBinaryTreeCollection`1.GetPrevious(`0)">
            <summary>
            Returns the previous item in the collection.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericBinaryTreeCollection`1.IsInitializing">
            <summary>
            Indicates whether BeginInit was called.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericBinaryTreeCollectionEnumerator`1">
            <summary>
            Enumerator class for items of a <see cref="T:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericBinaryTreeCollection`1"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericBinaryTreeCollectionEnumerator`1.#ctor(Syncfusion.WinForms.GridCommon.Collections.Generic.GenericBinaryTreeCollection{`0})">
            <summary>
            Initalizes the enumerator and attaches it to the collection.
            </summary>
            <param name="collection">The parent collection to enumerate.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericBinaryTreeCollectionEnumerator`1.Reset">
            <summary>
            Sets the enumerator to its initial position, which is before the first item in the collection.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericBinaryTreeCollectionEnumerator`1.MoveNext">
            <summary>
            Advances the enumerator to the next item of the collection.
            </summary>
            <returns>
            True if the enumerator was successfully advanced to the next item; False if the enumerator has passed the end of the collection.
            </returns>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericBinaryTreeCollectionEnumerator`1.Current">
            <summary>
            Gets the current item in the collection.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTableWithCounterEntry`2">
            <summary>
            A tree leaf with value and summary information.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.GridCommon.Collections.TreeTableWithCounterEntry">
            <summary>
            A tree leaf with value, sort key and counter information.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.GridCommon.Collections.TreeTableWithSummaryEntry">
            <summary>
            A tree leaf with value and summary information.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.GridCommon.Collections.TreeTableEntry">
            <summary>
            A leaf in the tree with value and optional sort key.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableEntry.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the Component and optionally releases the managed resources.
            </summary>
            <param name="disposing"><see langword="true"/> to release both managed and unmanaged resources; <see langword="false"/> to release only unmanaged resources.</param>
            <remarks>See the documentation for the System.ComponentModel.Componentclass and its Dispose member.</remarks>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableEntry.GetSortKey">
            <summary>
            Returns the sort key of this leaf.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableEntry.GetMinimum">
            <summary>
            Returns the minimum value (of the most-left leaf) of the branch in a sorted tree.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableEntry.GetCount">
            <summary>
            Returns the number of child nodes (+1 for the current node).
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableEntry.CreateBranch(Syncfusion.WinForms.GridCommon.Collections.TreeTable)">
            <summary>
            Creates a branch that can hold this entry when new leaves are inserted into the tree.
            </summary>
            <param name="tree"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableEntry.GetNodeInfo">
            <summary>
            Returns the Debug / text information about the node.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableEntry.IsEntry">
            <summary>
            Indicates whether this is a leaf.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.Collections.TreeTableEntry.Value">
            <summary>
            Gets / sets the value attached to this leaf.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.GridCommon.Collections.ITreeTableSummaryNode">
            <summary>
            Interface definition for a node that has one or more summaries.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.ITreeTableSummaryNode.GetSummaries(Syncfusion.WinForms.GridCommon.Collections.ITreeTableEmptySummaryArraySource)">
            <summary>
            Returns an array of summary objects.
            </summary>
            <param name="emptySummaries">The empty summaries.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.ITreeTableSummaryNode.InvalidateSummariesTopDown(System.Boolean)">
            <summary>
            Marks all summaries dirty in this node and child nodes.
            </summary>
            <param name="notifyEntrySummary">if set to <c>true</c> notify entry summary.</param>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.Collections.ITreeTableSummaryNode.HasSummaries">
            <summary>
            Indicates whether node has summaries.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableWithSummaryEntry.CreateBranch(Syncfusion.WinForms.GridCommon.Collections.TreeTable)">
            <summary>
            Creates a branch that can hold this entry when new leaves are inserted into the tree.
            </summary>
            <param name="tree"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableWithSummaryEntry.GetSummaries(Syncfusion.WinForms.GridCommon.Collections.ITreeTableEmptySummaryArraySource)">
            <summary>
            Returns an array of summary objects.
            </summary>
            <param name="emptySummaries">The empty summaries.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableWithSummaryEntry.OnGetSummaries(Syncfusion.WinForms.GridCommon.Collections.ITreeTableEmptySummaryArraySource)">
            <summary>
            Called from <see cref="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableWithSummaryEntry.GetSummaries(Syncfusion.WinForms.GridCommon.Collections.ITreeTableEmptySummaryArraySource)"/> when called the first time after summaries were invalidated.
            </summary>
            <param name="emptySummaries">The empty summaries.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableWithSummaryEntry.GetSummaryArraySource">
            <summary>
            Returns the value as <see cref="T:Syncfusion.WinForms.GridCommon.Collections.ITreeTableSummaryArraySource"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableWithSummaryEntry.InvalidateSummariesBottomUp(System.Boolean)">
            <summary>
            Walks up parent branches and reset summaries.
            </summary>
            <param name="notifyParentRecordSource"></param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableWithSummaryEntry.InvalidateSummariesTopDown(System.Boolean)">
            <summary>
            Marks all summaries dirty in this node and child nodes.
            </summary>
            <param name="notifySummaryArraySource">if set to <c>true</c> notify summary array source.</param>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.Collections.TreeTableWithSummaryEntry.TreeTableWithSummary">
            <summary>
            Returns the tree this leaf belongs to.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.Collections.TreeTableWithSummaryEntry.Parent">
            <summary>
            Gets / sets the parent branch.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.Collections.TreeTableWithSummaryEntry.HasSummaries">
            <summary>
            Indicates whether the node has summaries.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.GridCommon.Collections.ITreeTableCounterNode">
            <summary>
            Interface definition for a node that has counters and summaries.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.ITreeTableCounterNode.GetCounterTotal">
            <summary>
            The total of this node's counter and child nodes.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.ITreeTableCounterNode.GetCounterPosition">
            <summary>
            The cumulative position of this node.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.ITreeTableCounterNode.InvalidateCounterTopDown(System.Boolean)">
            <summary>
            Marks all counters dirty in this node and child nodes.
            </summary>
            <param name="notifyCounterSource">if set to <c>true</c> notify counter source.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableWithCounterEntry.CreateBranch(Syncfusion.WinForms.GridCommon.Collections.TreeTable)">
            <summary>
            Creates a branch that can hold this entry when new leaves are inserted into the tree.
            </summary>
            <param name="tree"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableWithCounterEntry.GetCounterPosition">
            <summary>
            Returns the cumulative position of this node.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableWithCounterEntry.GetCounterSource">
            <summary>
            Returns the value as <see cref="T:Syncfusion.WinForms.GridCommon.Collections.ITreeTableCounterSource"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableWithCounterEntry.IsCounterDirty">
            <summary>
            Indicates whether the counter was set dirty.
            </summary>
            <returns>True if dirty; False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableWithCounterEntry.GetCounterTotal">
            <summary>
            Returns the total of this node's counter and child nodes.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableWithCounterEntry.InvalidateCounter">
            <summary>
            Reset cached counter.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableWithCounterEntry.InvalidateCounterBottomUp(System.Boolean)">
            <summary>
            Invalidates the counter bottom up.
            </summary>
            <param name="notifyCounterSource">if set to <c>true</c> notify counter source.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableWithCounterEntry.InvalidateCounterTopDown(System.Boolean)">
            <summary>
            Marks all summaries dirty in this node and child nodes.
            </summary>
            <param name="notifyCounterSource">if set to <c>true</c> notify counter source.</param>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.Collections.TreeTableWithCounterEntry.TreeTableWithCounter">
            <summary>
            Returns the tree this leaf belongs to.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.Collections.TreeTableWithCounterEntry.Parent">
            <summary>
            Gets / sets the parent branch.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTableWithCounterEntry`2.GetCounterPosition">
            <summary>
            Returns the cumulative position of this node.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTableWithCounterEntry`2.GetCounterTotal">
            <summary>
            Returns the total of this node's counter and child nodes.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTableWithCounterEntry`2.Value">
            <summary>
            Gets or sets the value attached to this leaf.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTableWithCounter`2.#ctor(`1,System.Boolean)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTableWithCounter`2"/>.
            </summary>
            <param name="sorted"></param>
             <param name="startPos"></param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTableWithCounter`2.Dispose">
            <summary>
            Disposes of the object.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTableWithCounter`2.Dispose(System.Boolean)">
            <summary>
            Dispose the live resources used by the <see cref="T:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTableWithCounter`2"/> class.
            </summary>
            <param name="disposing">Dispose the instance, if it is True</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTableWithCounter`2.BeginInit">
            <summary>
            Optimizes insertion of many items when thisTree is initialized for the first time.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTableWithCounter`2.EndInit">
            <summary>
            Ends optimization of insertion of items when thisTree is initialized for the first time.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTableWithCounter`2.GetNextEntry(Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTableWithCounterEntry{`0,`1})">
            <summary>
            Optimized access to a subsequent entry.
            </summary>
            <param name="current"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTableWithCounter`2.GetPreviousEntry(Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTableWithCounterEntry{`0,`1})">
            <summary>
            Optimized access to the previous entry.
            </summary>
            <param name="current"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTableWithCounter`2.Insert(System.Int32,Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTableWithCounterEntry{`0,`1})">
            <summary>
            Inserts an item into the collection at the specified index.
            </summary>
            <param name="index">The zero-based index at which the item should be inserted.</param>
            <param name="item">The item to insert. The value must not be a NULL reference (Nothing in Visual Basic). </param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTableWithCounter`2.Remove(Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTableWithCounterEntry{`0,`1})">
            <summary>
            Removes the specified item from the collection.
            </summary>
            <param name="item">The item to remove from the collection. If the value is NULL or the item is not contained
            in the collection, the method will do nothing.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTableWithCounter`2.RemoveAt(System.Int32)">
            <summary>
            Removes the item at the specified index of the collection.
            </summary>
            <param name="index">The zero-based index of the item to remove. </param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTableWithCounter`2.IndexOf(Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTableWithCounterEntry{`0,`1})">
            <summary>
            Returns the zero-based index of the occurrence of the item in the collection.
            </summary>
            <param name="item">The item to locate in the collection. The value can be a NULL reference (Nothing in Visual Basic). </param>
            <returns>The zero-based index of the occurrence of the item within the entire collection, if found; otherwise -1.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTableWithCounter`2.Add(Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTableWithCounterEntry{`0,`1})">
            <summary>
            Adds a value to the end of the collection.
            </summary>
            <param name="item">The item to be added to the end of the collection. The value must not be a NULL reference (Nothing in Visual Basic). </param>
            <returns>The zero-based collection index at which the value has been added.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTableWithCounter`2.Clear">
            <summary>
            Removes all items from the collection.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTableWithCounter`2.Contains(Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTableWithCounterEntry{`0,`1})">
            <summary>
            Determines if the item belongs to this collection.
            </summary>
            <param name="item">The object to locate in the collection. The value can be a NULL reference (Nothing in Visual Basic).</param>
            <returns>True if item is found in the collection; otherwise False.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTableWithCounter`2.CopyTo(Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTableWithCounterEntry{`0,`1}[],System.Int32)">
            <summary>
            Copies the entire collection to a compatible one-dimensional array, starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional array that is the destination of the items copied from the  ArrayList. The array must have zero-based indexing. </param>
            <param name="index">The zero-based index in an array at which copying begins. </param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTableWithCounter`2.InvalidateSummariesTopDown(System.Boolean)">
            <summary>
            Marks all summaries dirty.
            </summary>
            <param name="notifySummariesSource">if set to <c>true</c> notify summaries source.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTableWithCounter`2.GetSummaries(Syncfusion.WinForms.GridCommon.Collections.ITreeTableEmptySummaryArraySource)">
            <summary>
            Returns an array of summary objects.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTableWithCounter`2.InvalidateCounterTopDown(System.Boolean)">
            <summary>
            Marks all counters dirty.
            </summary>
            <param name="notifyCounterSource"></param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTableWithCounter`2.GetCounterTotal">
            <summary>
            Returns the total of all counters in this tree.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTableWithCounter`2.GetStartCounterPosition">
            <summary>
            Returns the starting counter for this tree.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTableWithCounter`2.GetEntryAtCounterPosition(`1,System.Int32)">
            <summary>
            Overloaded. Returns an entry at the specified counter position. A cookie defines the type of counter.
            </summary>
            <param name="searchPosition">The search position.</param>
            <param name="cookie">The cookie.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTableWithCounter`2.GetEntryAtCounterPosition(`1,System.Int32,System.Boolean)">
            <summary>
            Returns an entry at the specified counter position. A cookie defines the type of counter.
            </summary>
            <param name="searchPosition">The search position.</param>
            <param name="cookie">The cookie.</param>
            <param name="preferLeftMost">Indicates if the leftmost entry should be returned if multiple tree elements have the
            same searchPosition.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTableWithCounter`2.GetNextNotEmptyCounterEntry(Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTableWithCounterEntry{`0,`1},System.Int32)">
            <summary>
            Returns the subsequent entry in the collection for which the specific counter is not empty.
            A cookie defines the type of counter.
            </summary>
            <param name="current">The current.</param>
            <param name="cookie">The cookie.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTableWithCounter`2.GetPreviousNotEmptyCounterEntry(Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTableWithCounterEntry{`0,`1},System.Int32)">
            <summary>
            Returns the previous entry in the collection for which the specific counter is not empty.
            A cookie defines the type of counter.
            </summary>
            <param name="current">The current.</param>
            <param name="cookie">The cookie.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTableWithCounter`2.GetNextVisibleEntry(Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTableWithCounterEntry{`0,`1})">
            <summary>
            Returns the next entry in the collection for which CountVisible counter is not empty.
            </summary>
            <param name="current">The current.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTableWithCounter`2.GetPreviousVisibleEntry(Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTableWithCounterEntry{`0,`1})">
            <summary>
            Returns the previous entry in the collection for which CountVisible counter is not empty.
            </summary>
            <param name="current">The current.</param>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTableWithCounter`2.InternalTree">
            <summary>
            The internal thisTree table.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTableWithCounter`2.Root">
            <summary>
            Gets the root node.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTableWithCounter`2.Sorted">
            <summary>
            Indicates whether thisTree is sorted.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTableWithCounter`2.Comparer">
            <summary>
            Gets or sets the comparer used by sorted trees.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTableWithCounter`2.IsInitializing">
            <summary>
            Indicates whether BeginInit was called.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTableWithCounter`2.Item(System.Int32)">
            <summary>
            Gets or sets the item at the zero-based index.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTableWithCounter`2.Count">
            <summary>
            Gets the number of items contained in the collection.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTableWithCounter`2.IsReadOnly">
            <summary>
            Gets a value indicating whether the collection is read-only.
            </summary>
            <value></value>
            <returns>true if the collection is read-only; otherwise, false.
            </returns>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTableWithCounter`2.IsFixedSize">
            <summary>
            Gets a value indicating whether the collection has a fixed size.
            </summary>
            <value></value>
            <returns>true if the collection has a fixed size; otherwise, false.
            </returns>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTableWithCounter`2.IsSynchronized">
            <summary>
            Returns False.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTableWithCounter`2.HasSummaries">
            <summary>
            Indicates whether the tree has summaries.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericBinaryTreeWithCounterCollection`2">
            <summary>
            A collection of items maintained in a binary tree
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericBinaryTreeWithCounterCollection`2.Dispose">
            <summary>
            Disposes of the object and releases internal objects.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericBinaryTreeWithCounterCollection`2.GetNext(`0)">
            <summary>
            Returns the next item in the collection.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericBinaryTreeWithCounterCollection`2.GetPrevious(`0)">
            <summary>
            Returns the previous item in the collection.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericBinaryTreeWithCounterCollection`2.GetEnumerator">
            <summary>
            Returns an enumerator for the entire collection.
            </summary>
            <returns>An Enumerator for the entire collection.</returns>
            <remarks>Enumerators only allow reading the data in the collection. 
            Enumerators cannot be used to modify the underlying collection.</remarks>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericBinaryTreeWithCounterCollection`2.InvalidateSummariesTopDown(System.Boolean)">
            <summary>
            Marks all summaries dirty.
            </summary>
            <param name="notifySummariesSource">if set to <c>true</c> notify summaries source.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericBinaryTreeWithCounterCollection`2.GetSummaries(Syncfusion.WinForms.GridCommon.Collections.ITreeTableEmptySummaryArraySource)">
            <summary>
            Returns an array of summary objects.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericBinaryTreeWithCounterCollection`2.InvalidateCounterTopDown(System.Boolean)">
            <summary>
            Marks all counters dirty.
            </summary>
            <param name="notifyCounterSource"></param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericBinaryTreeWithCounterCollection`2.GetCounterTotal">
            <summary>
            Returns the total of all counters in this tree.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericBinaryTreeWithCounterCollection`2.GetStartCounterPosition">
            <summary>
            Returns the starting counter for this tree.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericBinaryTreeWithCounterCollection`2.GetItemAtCounterPosition(`1,System.Int32)">
            <summary>
            Overloaded. Returns an entry at the specified counter position. A cookie defines the type of counter.
            </summary>
            <param name="searchPosition">The search position.</param>
            <param name="cookie">The cookie.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericBinaryTreeWithCounterCollection`2.GetItemAtCounterPosition(`1,System.Int32,System.Boolean)">
            <summary>
            Returns an entry at the specified counter position. A cookie defines the type of counter.
            </summary>
            <param name="searchPosition">The search position.</param>
            <param name="cookie">The cookie.</param>
            <param name="preferLeftMost">Indicates if the leftmost entry should be returned if multiple tree elements have the
            same searchPosition.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericBinaryTreeWithCounterCollection`2.GetNextNotEmptyCounterItem(`0,System.Int32)">
            <summary>
            Returns the subsequent entry in the collection for which the specific counter is not empty.
            A cookie defines the type of counter.
            </summary>
            <param name="current">The current.</param>
            <param name="cookie">The cookie.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericBinaryTreeWithCounterCollection`2.GetPreviousNotEmptyCounterItem(`0,System.Int32)">
            <summary>
            Returns the previous entry in the collection for which the specific counter is not empty.
            A cookie defines the type of counter.
            </summary>
            <param name="current">The current.</param>
            <param name="cookie">The cookie.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericBinaryTreeWithCounterCollection`2.GetNextVisibleItem(`0)">
            <summary>
            Returns the next entry in the collection for which CountVisible counter is not empty.
            </summary>
            <param name="current">The current.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericBinaryTreeWithCounterCollection`2.GetPreviousVisibleItem(`0)">
            <summary>
            Returns the previous entry in the collection for which CountVisible counter is not empty.
            </summary>
            <param name="current">The current.</param>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericBinaryTreeWithCounterCollection`2.IsInitializing">
            <summary>
            Indicates whether BeginInit was called.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericBinaryTreeWithCounterCollection`2.HasSummaries">
            <summary>
            Indicates whether the tree has summaries.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericBinaryTreeWithCounterCollectionEnumerator`2">
            <summary>
            Enumerator class for items of a <see cref="T:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericBinaryTreeWithCounterCollectionEnumerator`2"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericBinaryTreeWithCounterCollectionEnumerator`2.#ctor(Syncfusion.WinForms.GridCommon.Collections.Generic.GenericBinaryTreeWithCounterCollection{`0,`1})">
            <summary>
            Initalizes the enumerator and attaches it to the collection.
            </summary>
            <param name="collection">The parent collection to enumerate.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericBinaryTreeWithCounterCollectionEnumerator`2.Reset">
            <summary>
            Sets the enumerator to its initial position, which is before the first item in the collection.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericBinaryTreeWithCounterCollectionEnumerator`2.MoveNext">
            <summary>
            Advances the enumerator to the next item of the collection.
            </summary>
            <returns>
            True if the enumerator was successfully advanced to the next item; False if the enumerator has passed the end of the collection.
            </returns>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericBinaryTreeWithCounterCollectionEnumerator`2.Current">
            <summary>
            Gets the current item in the collection.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTableWithSummaryEntry`1">
            <summary>
            A tree leaf with value and summary information.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTableWithSummaryEntry`1.Value">
            <summary>
            Gets or sets the value attached to this leaf.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTableWithSummary`1.#ctor(System.Boolean)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTableWithSummary`1"/>.
            </summary>
            <param name="sorted"></param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTableWithSummary`1.Dispose">
            <summary>
            Disposes of the object.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTableWithSummary`1.Dispose(System.Boolean)">
            <summary>
            Dispose the live resources used by the <see cref="T:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTableWithSummary`1"/> class.
            </summary>
            <param name="disposing">Dispose the instance, if it is True</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTableWithSummary`1.BeginInit">
            <summary>
            Optimizes insertion of many items when thisTree is initialized for the first time.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTableWithSummary`1.EndInit">
            <summary>
            Ends optimization of insertion of items when thisTree is initialized for the first time.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTableWithSummary`1.GetNextEntry(Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTableWithSummaryEntry{`0})">
            <summary>
            Optimized access to a subsequent entry.
            </summary>
            <param name="current"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTableWithSummary`1.GetPreviousEntry(Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTableWithSummaryEntry{`0})">
            <summary>
            Optimized access to the previous entry.
            </summary>
            <param name="current"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTableWithSummary`1.Insert(System.Int32,Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTableWithSummaryEntry{`0})">
            <summary>
            Inserts an item into the collection at the specified index.
            </summary>
            <param name="index">The zero-based index at which the item should be inserted.</param>
            <param name="item">The item to insert. The value must not be a NULL reference (Nothing in Visual Basic). </param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTableWithSummary`1.Remove(Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTableWithSummaryEntry{`0})">
            <summary>
            Removes the specified item from the collection.
            </summary>
            <param name="item">The item to remove from the collection. If the value is NULL or the item is not contained
            in the collection, the method will do nothing.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTableWithSummary`1.RemoveAt(System.Int32)">
            <summary>
            Removes the item at the specified index of the collection.
            </summary>
            <param name="index">The zero-based index of the item to remove. </param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTableWithSummary`1.IndexOf(Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTableWithSummaryEntry{`0})">
            <summary>
            Returns the zero-based index of the occurrence of the item in the collection.
            </summary>
            <param name="item">The item to locate in the collection. The value can be a NULL reference (Nothing in Visual Basic). </param>
            <returns>The zero-based index of the occurrence of the item within the entire collection, if found; otherwise -1.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTableWithSummary`1.Add(Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTableWithSummaryEntry{`0})">
            <summary>
            Adds a value to the end of the collection.
            </summary>
            <param name="item">The item to be added to the end of the collection. The value must not be a NULL reference (Nothing in Visual Basic). </param>
            <returns>The zero-based collection index at which the value has been added.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTableWithSummary`1.Clear">
            <summary>
            Removes all items from the collection.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTableWithSummary`1.Contains(Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTableWithSummaryEntry{`0})">
            <summary>
            Determines if the item belongs to this collection.
            </summary>
            <param name="item">The object to locate in the collection. The value can be a NULL reference (Nothing in Visual Basic).</param>
            <returns>True if item is found in the collection; otherwise False.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTableWithSummary`1.CopyTo(Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTableWithSummaryEntry{`0}[],System.Int32)">
            <summary>
            Copies the entire collection to a compatible one-dimensional array, starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional array that is the destination of the items copied from the  ArrayList. The array must have zero-based indexing. </param>
            <param name="index">The zero-based index in an array at which copying begins. </param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTableWithSummary`1.InvalidateSummariesTopDown(System.Boolean)">
            <summary>
            Marks all summaries dirty.
            </summary>
            <param name="notifySummariesSource">if set to <c>true</c> notify summaries source.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTableWithSummary`1.GetSummaries(Syncfusion.WinForms.GridCommon.Collections.ITreeTableEmptySummaryArraySource)">
            <summary>
            Returns an array of summary objects.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTableWithSummary`1.InternalTree">
            <summary>
            The internal thisTree table.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTableWithSummary`1.Root">
            <summary>
            Gets the root node.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTableWithSummary`1.Sorted">
            <summary>
            Indicates whether thisTree is sorted.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTableWithSummary`1.Comparer">
            <summary>
            Gets or sets the comparer used by sorted trees.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTableWithSummary`1.IsInitializing">
            <summary>
            Indicates whether BeginInit was called.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTableWithSummary`1.Item(System.Int32)">
            <summary>
            Gets or sets the item at the zero-based index.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTableWithSummary`1.Count">
            <summary>
            Gets the number of items contained in the collection.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTableWithSummary`1.IsReadOnly">
            <summary>
            Gets a value indicating whether the collection is read-only.
            </summary>
            <value></value>
            <returns>true if the collection is read-only; otherwise, false.
            </returns>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTableWithSummary`1.IsFixedSize">
            <summary>
            Gets a value indicating whether the collection has a fixed size.
            </summary>
            <value></value>
            <returns>true if the collection has a fixed size; otherwise, false.
            </returns>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTableWithSummary`1.IsSynchronized">
            <summary>
            Returns False.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericTreeTableWithSummary`1.HasSummaries">
            <summary>
            Indicates whether the tree has summaries.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericBinaryTreeWithSummaryCollection`1">
            <summary>
            A collection of items maintained in a binary tree
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericBinaryTreeWithSummaryCollection`1.Dispose">
            <summary>
            Disposes of the object and releases internal objects.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericBinaryTreeWithSummaryCollection`1.GetNext(`0)">
            <summary>
            Returns the next item in the collection.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericBinaryTreeWithSummaryCollection`1.GetPrevious(`0)">
            <summary>
            Returns the previous item in the collection.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericBinaryTreeWithSummaryCollection`1.GetEnumerator">
            <summary>
            Returns an enumerator for the entire collection.
            </summary>
            <returns>An Enumerator for the entire collection.</returns>
            <remarks>Enumerators only allow reading the data in the collection. 
            Enumerators cannot be used to modify the underlying collection.</remarks>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericBinaryTreeWithSummaryCollection`1.InvalidateSummariesTopDown(System.Boolean)">
            <summary>
            Marks all summaries dirty.
            </summary>
            <param name="notifySummariesSource">if set to <c>true</c> notify summaries source.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericBinaryTreeWithSummaryCollection`1.GetSummaries(Syncfusion.WinForms.GridCommon.Collections.ITreeTableEmptySummaryArraySource)">
            <summary>
            Returns an array of summary objects.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericBinaryTreeWithSummaryCollection`1.IsInitializing">
            <summary>
            Indicates whether BeginInit was called.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericBinaryTreeWithSummaryCollection`1.HasSummaries">
            <summary>
            Indicates whether the tree has summaries.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericBinaryTreeWithSummaryCollectionEnumerator`1">
            <summary>
            Enumerator class for items of a <see cref="T:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericBinaryTreeWithSummaryCollection`1"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericBinaryTreeWithSummaryCollectionEnumerator`1.#ctor(Syncfusion.WinForms.GridCommon.Collections.Generic.GenericBinaryTreeWithSummaryCollection{`0})">
            <summary>
            Initalizes the enumerator and attaches it to the collection.
            </summary>
            <param name="collection">The parent collection to enumerate.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericBinaryTreeWithSummaryCollectionEnumerator`1.Reset">
            <summary>
            Sets the enumerator to its initial position, which is before the first item in the collection.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericBinaryTreeWithSummaryCollectionEnumerator`1.MoveNext">
            <summary>
            Advances the enumerator to the next item of the collection.
            </summary>
            <returns>
            True if the enumerator was successfully advanced to the next item; False if the enumerator has passed the end of the collection.
            </returns>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.Collections.Generic.GenericBinaryTreeWithSummaryCollectionEnumerator`1.Current">
            <summary>
            Gets the current item in the collection.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.GridCommon.Collections.NamespaceDoc">
            <summary>
            Contains classes and interfaces to maintain the row heights and column widths in a balanced tree structure.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.GridCommon.Collections.TreeTableNodeColor">
            <summary>
            Used by TreeTable to balance the tree with algorithm based on Red-Black tree.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.GridCommon.Collections.TreeTableNodeColor.Red">
            <summary>
            Red.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.GridCommon.Collections.TreeTableNodeColor.Black">
            <summary>
            Black.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.GridCommon.Collections.ITreeTableBranch">
            <summary>
            A branch with left and right leaves or branches.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.ITreeTableBranch.SetLeft(Syncfusion.WinForms.GridCommon.Collections.ITreeTableNode,System.Boolean,System.Boolean)">
            <summary>
            Sets the left node.
            </summary>
            <param name="value">The new node.</param>
            <param name="inAddMode">Indicates whether tree-table is in add-mode.</param>
            <param name="isSortedTree">Indicates whether tree-table is sorted.</param>
            <remarks>
            Call this method instead of simply setting <see cref="P:Syncfusion.WinForms.GridCommon.Collections.ITreeTableBranch.Left"/> property if you want
            to avoid the round-trip call to check whether the tree is in add-mode
            or if tree-table is sorted.
            </remarks>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.ITreeTableBranch.SetRight(Syncfusion.WinForms.GridCommon.Collections.ITreeTableNode,System.Boolean)">
            <summary>
            Sets the right node.
            </summary>
            <param name="value">The new node.</param>
            <param name="inAddMode">Specifies if tree-table is in add-mode.</param>
            <remarks>
            Call this method instead of simply setting <see cref="P:Syncfusion.WinForms.GridCommon.Collections.ITreeTableBranch.Right"/> property if you want
            to avoid the round-trip call to check whether the tree is in add-mode
            or if tree-table is sorted.
            </remarks>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.ITreeTableBranch.GetLeftB">
            <summary>
            Returns the left branch cast to ITreeTableBranch.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.ITreeTableBranch.GetRightB">
            <summary>
            Returns the right branch cast to ITreeTableBranch.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.ITreeTableBranch.GetEntryPositionOfChild(Syncfusion.WinForms.GridCommon.Collections.ITreeTableNode)">
            <summary>
            Returns the position in the tree table of the specified child node.
            </summary>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.ITreeTableBranch.InvalidateCountBottomUp">
            <summary>
            Sets this object's child node Count dirty and
            marks parent nodes' child node Count dirty.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.ITreeTableBranch.InvalidateCountTopDown">
            <summary>
            Sets this object's child node Count dirty and steps
            through all child branches and marks their child node Count dirty.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.ITreeTableBranch.InvalidateMinimumBottomUp">
            <summary>
            Sets this object's child node Minimum dirty and
            marks parent nodes' child node Minimum dirty.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.ITreeTableBranch.InvalidateMinimumTopDown">
            <summary>
            Sets this object's child node Minimum dirty and steps
            through all child branches and marks their child node Minimum dirty.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.Collections.ITreeTableBranch.Left">
            <summary>
            Gets / sets the left node.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.Collections.ITreeTableBranch.Right">
            <summary>
            Gets / sets the right node.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.Collections.ITreeTableBranch.Color">
            <summary>
            Gets / sets the Red-Black tree color.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.GridCommon.Collections.TreeTableBranch">
            <summary>
            A branch in a tree.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableBranch.#ctor(Syncfusion.WinForms.GridCommon.Collections.TreeTable)">
            <summary>
            Initializes a new branch.
            </summary>
            <param name="tree"></param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableBranch.GetMinimum">
            <summary>
            Returns the minimum value (of the most-left leaf) of the branch in a sorted tree.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableBranch.GetLeftB">
            <summary>
            Returns the left node cast to ITreeTableBranch.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableBranch.GetRightB">
            <summary>
            Returns the right node cast to ITreeTableBranch.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableBranch.SetLeft(Syncfusion.WinForms.GridCommon.Collections.ITreeTableNode,System.Boolean,System.Boolean)">
            <summary>
            Sets the left node.
            </summary>
            <param name="value">The new node.</param>
            <param name="inAddMode">Indicates whether tree-table is in add-mode.</param>
            <param name="isSorted">Indicates whether tree-table is sorted.</param>
            <remarks>
            Call this method instead of simply setting <see cref="P:Syncfusion.WinForms.GridCommon.Collections.TreeTableBranch.Left"/> property if you want
            to avoid the round-trip call to check whether the tree is in add-mode
            or if tree-table is sorted.
            </remarks>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableBranch.SetRight(Syncfusion.WinForms.GridCommon.Collections.ITreeTableNode,System.Boolean)">
            <summary>
            Sets the right node.
            </summary>
            <param name="value">The new node.</param>
            <param name="inAddMode">Indicates whether tree-table is in add-mode.</param>
            <remarks>
            Call this method instead of simply setting <see cref="P:Syncfusion.WinForms.GridCommon.Collections.TreeTableBranch.Right"/> property if you want
            to avoid the round-trip call to check whether the tree is in add-mode
            or if tree-table is sorted.
            </remarks>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableBranch.GetEntryPositionOfChild(Syncfusion.WinForms.GridCommon.Collections.ITreeTableNode)">
            <summary>
            Returns the position in the tree table of the specific child node.
            </summary>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableBranch.GetCount">
            <summary>
            Returns the number of child nodes (+1 for the current node).
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableBranch.IsEntry">
            <summary>
            Indicates whether this is a leaf.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableBranch.InvalidateCountBottomUp">
            <summary>
            Sets this object's child node count dirty and
            walks up parent nodes and marks their child node count dirty.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableBranch.InvalidateCountTopDown">
            <summary>
            Sets this object's child node count dirty and steps
            through all child branches and marks their child node count dirty.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableBranch.InvalidateMinimumBottomUp">
            <summary>
            Sets this object's child node minimum dirty and
            marks parent nodes' child node minimum dirty.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableBranch.InvalidateMinimumTopDown">
            <summary>
            Sets this object's child node minimum dirty and steps
            through all child branches and marks their child node minimum dirty.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.Collections.TreeTableBranch.Color">
            <summary>
            Gets / sets Red-Black tree algorithm helper.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.Collections.TreeTableBranch.Left">
            <summary>
            Gets / sets the left leaf or branch.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.Collections.TreeTableBranch.Right">
            <summary>
            Gets / sets the right tree or branch.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.GridCommon.Collections.TreeTableEmpty">
            <summary>
            An empty node.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.GridCommon.Collections.ITreeTableSource">
            <summary>
            This object owns a <see cref="T:Syncfusion.WinForms.GridCommon.Collections.ITreeTable"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.ITreeTableSource.GetTreeTable">
            <summary>
            Returns a reference to an inner tree table.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.WinForms.GridCommon.Collections.TreeTable">
            <summary>
            A tree table.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTable.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the Component and optionally releases the managed resources.
            </summary>
            <param name="disposing"><see langword="true"/> to release both managed and unmanaged resources; <see langword="false"/> to release only unmanaged resources.</param>
            <remarks>See the documentation for the <see cref="N:System.ComponentModel"/> class and its Dispose member.</remarks>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTable.#ctor(System.Boolean)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.WinForms.GridCommon.Collections.TreeTable"/>.
            </summary>
            <param name="sorted"></param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTable.SetNodeAt(System.Int32,Syncfusion.WinForms.GridCommon.Collections.ITreeTableNode)">
            <summary>
            Sets the node at the specified index.
            </summary>
            <param name="index">Index value where the node is to be inserted.</param>
            <param name="value">Value of the node that is to be inserted.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTable.GetPreviousEntry(Syncfusion.WinForms.GridCommon.Collections.ITreeTableEntry)">
            <summary>
            Optimized access to the previous entry.
            </summary>
            <param name="current"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTable.GetNextEntry(Syncfusion.WinForms.GridCommon.Collections.ITreeTableEntry)">
            <summary>
            Optimized access to a subsequent entry.
            </summary>
            <param name="current"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTable.Insert(System.Int32,Syncfusion.WinForms.GridCommon.Collections.ITreeTableNode)">
            <summary>
            Inserts a node at the specified index.
            </summary>
            <param name="index">Index value where the node is to be inserted.</param>
            <param name="value">Value of the node to insert.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTable.Remove(Syncfusion.WinForms.GridCommon.Collections.ITreeTableNode)">
            <summary>
            Removes the specified node.
            </summary>
            <param name="value">Node value to look for and remove.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTable.ResetCache">
            <summary>
            Resets the cache.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTable.Contains(Syncfusion.WinForms.GridCommon.Collections.ITreeTableNode)">
            <summary>
            Indicates whether the node belongs to this tree.
            </summary>
            <param name="value">Node value to search for.</param>
            <returns>True if node belongs to this tree; false otherwise.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTable.IndexOf(Syncfusion.WinForms.GridCommon.Collections.ITreeTableNode)">
            <summary>
            Returns the position of a node.
            </summary>
            <param name="value">Node value to look for.</param>
            <returns>Index of the node if found.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTable.Add(Syncfusion.WinForms.GridCommon.Collections.ITreeTableNode)">
            <summary>
            Appends a node.
            </summary>
            <param name="value">Node value to append.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTable.BeginInit">
            <summary>
            Optimizes insertion of many elements when tree is initialized for the first time.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTable.EndInit">
            <summary>
            Ends optimization of insertion of elements when tree is initialized for the first time.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTable.AddSorted(Syncfusion.WinForms.GridCommon.Collections.ITreeTableNode)">
            <summary>
            Adds a node into a sorted tree.
            </summary>
            <param name="value">Node value to add.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTable.AddIfNotExists(System.Object,Syncfusion.WinForms.GridCommon.Collections.ITreeTableEntry)">
            <summary>
            Adds a node in a sorted tree only if no node with the same value has not been added yet.
            </summary>
            <param name="key"></param>
            <param name="value">Node value to add.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTable.IndexOfKey(System.Object)">
            <summary>
            Finds a node in a sorted tree.
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTable.FindKey(System.Object)">
            <summary>
            Finds a node in a sorted tree that matches the specified key.
            </summary>
            <param name="key">The key to search.</param>
            <returns>The node; NULL if not found.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTable.FindHighestSmallerOrEqualKey(System.Object)">
            <summary>
            Finds the node in a sorted tree is just one entry ahead of the
            node with the specified key. It searches for the largest possible
            key that is smaller than the specified key.
            </summary>
            <param name="key">The key to search.</param>
            <returns>The node; NULL if not found.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTable.RemoveAt(System.Int32)">
            <summary>
            Removes a node at the specified position.
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTable.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            Inserts a node at the specified index.
            </summary>
            <param name="index"></param>
            <param name="value"></param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTable.System#Collections#IList#Remove(System.Object)">
            <summary>
            Removes the node with the specified value.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTable.System#Collections#IList#Contains(System.Object)">
            <summary>
            Indicates whether the node belongs to this tree.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTable.Clear">
            <summary>
            Clears all nodes in the tree.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTable.System#Collections#IList#IndexOf(System.Object)">
            <summary>
            Returns the index of the specified node.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTable.System#Collections#IList#Add(System.Object)">
            <summary>
            Adds the specified node to the tree.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTable.GetCount">
            <summary>
            Returns the number of leaves.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTable.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the element from this collection into an array.
            </summary>
            <param name="array">The destination array.</param>
            <param name="index">The starting index in thedestination array.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTable.CopyTo(Syncfusion.WinForms.GridCommon.Collections.ITreeTableNode[],System.Int32)">
            <summary>
            Copies the elements from this collection into an array.
            </summary>
            <param name="array">The destination array.</param>
            <param name="index">The starting index in the destination array.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTable.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTable.GetEnumerator">
            <summary>
            Returns a <see cref="T:Syncfusion.WinForms.GridCommon.Collections.TreeTableEnumerator"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.Collections.TreeTable.lastIndexLeaf">
            <summary>
            Gets or sets the last index leaf.
            </summary>
            <value>The last index leaf.</value>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.Collections.TreeTable.Comparer">
            <summary>
            Gets / sets the comparer used by sorted trees.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.Collections.TreeTable.Tag">
            <summary>
            Gets / sets the tag that can be associated with this object.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.Collections.TreeTable.Sorted">
            <summary>
            Indicates whether tree is sorted.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.Collections.TreeTable.Root">
            <summary>
            Gets / sets the root node.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.Collections.TreeTable.Item(System.Int32)">
            <summary>
            Gets / sets an item at the specified index.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.Collections.TreeTable.IsInitializing">
            <summary>
            Indicates whether BeginInit was called.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.Collections.TreeTable.IsReadOnly">
            <summary>
            Indicates whether the tree is Read-only.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.Collections.TreeTable.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets / sets the item with the specified index.
            </summary>
            <param name="index">Index value of the item.</param>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.Collections.TreeTable.IsFixedSize">
            <summary>
            Indicates whether the nodes can be added or removed.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.Collections.TreeTable.IsSynchronized">
            <summary>
            Not supported.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.Collections.TreeTable.Count">
            <summary>
            Returns the number of leaves.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.Collections.TreeTable.SyncRoot">
            <summary>
            Not implemented.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.GridCommon.Collections.ITreeTableEntrySource">
            <summary>
            An object that holds an <see cref="T:Syncfusion.WinForms.GridCommon.Collections.ITreeTableEntry"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.Collections.ITreeTableEntrySource.Entry">
            <summary>
            Gets a reference to the <see cref="T:Syncfusion.WinForms.GridCommon.Collections.ITreeTableEntry"/>.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.GridCommon.Collections.TreeTableEntrySourceCollection">
            <summary>
            A collection of <see cref="T:Syncfusion.WinForms.GridCommon.Collections.ITreeTableEntrySource"/> objects
            that are internally using a <see cref="T:Syncfusion.WinForms.GridCommon.Collections.ITreeTable"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableEntrySourceCollection.#ctor">
            <summary>
            Overloaded. Initializes a new <see cref="T:Syncfusion.WinForms.GridCommon.Collections.TreeTableEntrySourceCollection"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableEntrySourceCollection.#ctor(System.Boolean)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.WinForms.GridCommon.Collections.TreeTableEntrySourceCollection"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableEntrySourceCollection.#ctor(Syncfusion.WinForms.GridCommon.Collections.ITreeTable)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.WinForms.GridCommon.Collections.TreeTableEntrySourceCollection"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableEntrySourceCollection.BeginInit">
            <summary>
            Optimizes insertion of many elements when tree is initialized for the first time.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableEntrySourceCollection.EndInit">
            <summary>
            Ends optimization of insertion of elements when tree is initialized for the first time.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableEntrySourceCollection.Contains(Syncfusion.WinForms.GridCommon.Collections.ITreeTableEntrySource)">
            <summary>
            Indicates whether object belongs to this collection.
            </summary>
            <param name="value">The value of the object.</param>
            <returns>True if object belongs to the collection; false otherwise.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableEntrySourceCollection.IndexOf(Syncfusion.WinForms.GridCommon.Collections.ITreeTableEntrySource)">
            <summary>
            Returns the position of a object in the collection.
            </summary>
            <param name="value">The value of the object.</param>
            <returns>The position of the object.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableEntrySourceCollection.CopyTo(Syncfusion.WinForms.GridCommon.Collections.ITreeTableEntrySource[],System.Int32)">
            <summary>
            Copies the contents of the collection to an array.
            </summary>
            <param name="array">Destination array.</param>
            <param name="index">Starting index of the destination array.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableEntrySourceCollection.GetEnumerator">
            <summary>
            Returns a strongly typed enumerator.
            </summary>
            <returns>A strongly types enumerator.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableEntrySourceCollection.Insert(System.Int32,Syncfusion.WinForms.GridCommon.Collections.ITreeTableEntrySource)">
            <summary>
            Inserts an object at the specified index.
            </summary>
            <param name="index">Index value where the object is to be inserted.</param>
            <param name="value">Value of the object to insert.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableEntrySourceCollection.Add(Syncfusion.WinForms.GridCommon.Collections.ITreeTableEntrySource)">
            <summary>
            Appends an object.
            </summary>
            <param name="value">The value of the object to append.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableEntrySourceCollection.Remove(Syncfusion.WinForms.GridCommon.Collections.ITreeTableEntrySource)">
            <summary>
            Removes the object.
            </summary>
            <param name="value">The value of the object to remove.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableEntrySourceCollection.RemoveAt(System.Int32)">
            <summary>
            Removes a node at the specified index.
            </summary>
            <param name="index">Index value of the node to remove.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableEntrySourceCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            Inserts the object at the specified index.
            </summary>
            <param name="index">Index value of the object to insert.</param>
            <param name="value">Value of the object to insert.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableEntrySourceCollection.System#Collections#IList#Remove(System.Object)">
            <summary>
            Removes the specified object.
            </summary>
            <param name="value">Value of the object to remove.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableEntrySourceCollection.System#Collections#IList#Contains(System.Object)">
            <summary>
            Indicate whether the specified object belongs to this collection.
            </summary>
            <param name="value">Object value to look for.</param>
            <returns>True if object belongs to the collection; false otherwise.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableEntrySourceCollection.Clear">
            <summary>
            Clears all nodes in the tree.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableEntrySourceCollection.System#Collections#IList#IndexOf(System.Object)">
            <summary>
            Returns the index of the specified object.
            </summary>
            <param name="value">Value of the object.</param>
            <returns>Index value of the object.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableEntrySourceCollection.System#Collections#IList#Add(System.Object)">
            <summary>
            Adds the specified object to the collection.
            </summary>
            <param name="value">Value of the object to add.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableEntrySourceCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            Copies elements to destination array.
            </summary>
            <param name="array">Destination array.</param>
            <param name="index">Starting index of the destination array.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableEntrySourceCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator.
            </summary>
            <returns>Enumerator.</returns>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.Collections.TreeTableEntrySourceCollection.IsInitializing">
            <summary>
            Indicates whether BeginInit was called.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.Collections.TreeTableEntrySourceCollection.Item(System.Int32)">
            <summary>
            Gets / sets an <see cref="T:Syncfusion.WinForms.GridCommon.Collections.ITreeTableEntrySource"/> at a specific position.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.Collections.TreeTableEntrySourceCollection.IsReadOnly">
            <summary>
            Indicates whether tree is Read-only.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.Collections.TreeTableEntrySourceCollection.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets / sets the item at the specified index.
            </summary>
            <param name="index">Index of the item.</param>
            <returns>The item at the specified index.</returns>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.Collections.TreeTableEntrySourceCollection.IsFixedSize">
            <summary>
            Indicates whether the nodes can be added or removed.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.Collections.TreeTableEntrySourceCollection.IsSynchronized">
            <summary>
            Not supported.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.Collections.TreeTableEntrySourceCollection.Count">
            <summary>
            Returns the number of objects in this collection.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.GridCommon.Collections.TreeTableEntrySourceCollectionEnumerator">
            <summary>
            A strongly typed enumerator for the <see cref="T:Syncfusion.WinForms.GridCommon.Collections.TreeTableEntrySourceCollection"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableEntrySourceCollectionEnumerator.#ctor(Syncfusion.WinForms.GridCommon.Collections.TreeTableEntrySourceCollection)">
            <summary>
            Initializes the <see cref="T:Syncfusion.WinForms.GridCommon.Collections.TreeTableEntrySourceCollectionEnumerator"/>.
            </summary>
            <param name="collection"></param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableEntrySourceCollectionEnumerator.Reset">
            <summary>
            Resets the enumerator.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableEntrySourceCollectionEnumerator.MoveNext">
            <summary>
            Indicates whether to move to the next object in the collection.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.Collections.TreeTableEntrySourceCollectionEnumerator.System#Collections#IEnumerator#Current">
            <summary>
            Returns the current enumerator.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.Collections.TreeTableEntrySourceCollectionEnumerator.Current">
            <summary>
            Returns the current <see cref="T:Syncfusion.WinForms.GridCommon.Collections.ITreeTableEntrySource"/> object.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.GridCommon.Collections.ITreeTableCounterSource">
            <summary>
            Interface definition for an object that has counters.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.ITreeTableCounterSource.GetCounter">
            <summary>
            Returns the counter object with counters.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.ITreeTableCounterSource.InvalidateCounterTopDown(System.Boolean)">
            <summary>
            Marks all counters dirty in this object and child nodes.
            </summary>
            <param name="notifyCounterSource">if set to <c>true</c> notify counter source.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.ITreeTableCounterSource.InvalidateCounterBottomUp">
            <summary>
            Marks all counters dirty in this object and parent nodes.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.GridCommon.Collections.ITreeTableCounter">
            <summary>
            Interface definition for a counter object.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.ITreeTableCounter.Combine(Syncfusion.WinForms.GridCommon.Collections.ITreeTableCounter,System.Int32)">
            <summary>
            Combines this counter object with another counter and returns a new object. A cookie can specify
            a specific counter type.
            </summary>
            <param name="other">The other.</param>
            <param name="cookie">The cookie.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.ITreeTableCounter.Compare(Syncfusion.WinForms.GridCommon.Collections.ITreeTableCounter,System.Int32)">
            <summary>
            Compares this counter with another counter. A cookie can specify
            a specific counter type.
            </summary>
            <param name="other">The other.</param>
            <param name="cookie">The cookie.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.ITreeTableCounter.IsEmpty(System.Int32)">
            <summary>
            Indicates whether the counter object is empty. A cookie can specify
            a specific counter type.
            </summary>
            <param name="cookie">The cookie.</param>
            <returns>
            	<c>true</c> if the specified cookie is empty; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.ITreeTableCounter.GetValue(System.Int32)">
            <summary>
            Returns the integer value of the counter. A cookie specifies
            a specific counter type.
            </summary>
            <param name="cookie">The cookie.</param>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.Collections.ITreeTableCounter.Kind">
            <summary>
            Gets the Counter Kind.
            </summary>
            <value>The kind.</value>
        </member>
        <member name="T:Syncfusion.WinForms.GridCommon.Collections.TreeTableCounterCookies">
            <summary>
            Default counter cookies for identifying counter types.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.GridCommon.Collections.TreeTableCounterCookies.CountAll">
            <summary>
            All counters.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.GridCommon.Collections.TreeTableCounterCookies.CountVisible">
            <summary>
            Visible Counter.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.GridCommon.Collections.TreeTableVisibleCounter">
            <summary>
            A counter that counts objects that are marked "Visible".
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.GridCommon.Collections.TreeTableVisibleCounter.Empty">
            <summary>
            Returns an empty TreeTableVisibleCounter that represents zero visible elements.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableVisibleCounter.#ctor(System.Double)">
            <summary>
            Initializes a <see cref="T:Syncfusion.WinForms.GridCommon.Collections.TreeTableVisibleCounter"/> with a specified number of visible elements.
            </summary>
            <param name="visibleCount">The visible count.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableVisibleCounter.GetVisibleCount">
            <summary>
            Returns the visible count.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableVisibleCounter.GetValue(System.Int32)">
            <summary>
            Returns the integer value of the counter. A cookie specifies
            a specific counter type.
            </summary>
            <param name="cookie">The cookie.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableVisibleCounter.Syncfusion#WinForms#GridCommon#Collections#ITreeTableCounter#Combine(Syncfusion.WinForms.GridCommon.Collections.ITreeTableCounter,System.Int32)">
            <summary>
            Combines one tree object with another and returns the new object.
            </summary>
            <param name="other">The other.</param>
            <param name="cookie">The cookie.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableVisibleCounter.CreateCounter">
            <summary>
            Factory method creates a new counter object of the same type as this object.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableVisibleCounter.OnCombineCounters(Syncfusion.WinForms.GridCommon.Collections.ITreeTableCounter,Syncfusion.WinForms.GridCommon.Collections.ITreeTableCounter,System.Int32)">
            <summary>
            Called to combine the values of two counter objects. Results are saved back into this counter object.
            A cookie can filter the operation to a limited set of counter types.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="cookie">The cookie.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableVisibleCounter.Combine(Syncfusion.WinForms.GridCommon.Collections.TreeTableVisibleCounter,System.Int32)">
            <summary>
            Combines the counter values of this counter object with the values of another counter object
            and returns a new counter object.
            </summary>
            <param name="other">The other.</param>
            <param name="cookie">The cookie.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableVisibleCounter.Compare(Syncfusion.WinForms.GridCommon.Collections.TreeTableVisibleCounter,System.Int32)">
            <summary>
            Compares this counter with another counter. A cookie can specify
            a specific counter type.
            </summary>
            <param name="other">The other.</param>
            <param name="cookie">The cookie.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableVisibleCounter.IsEmpty(System.Int32)">
            <summary>
            Indicates whether the counter object is empty. A cookie can specify
            a specific counter type.
            </summary>
            <param name="cookie">The cookie.</param>
            <returns>
            	<c>true</c> if the specified cookie is empty; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableVisibleCounter.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.Collections.TreeTableVisibleCounter.Kind">
            <summary>
            The Counter Kind.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.GridCommon.Collections.TreeTableWithCounterBranch">
            <summary>
            A tree table branch with a counter.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.GridCommon.Collections.TreeTableWithSummaryBranch">
            <summary>
            A tree table branch with a counter.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableWithSummaryBranch.#ctor(Syncfusion.WinForms.GridCommon.Collections.TreeTable)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.WinForms.GridCommon.Collections.TreeTableWithSummaryBranch"/>.
            </summary>
            <param name="tree"></param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableWithSummaryBranch.GetLeftC">
            <summary>
            Returns the left branch node cast to ITreeTableSummaryNode.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableWithSummaryBranch.GetRightC">
            <summary>
            Returns the right branch node cast to ITreeTableSummaryNode.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableWithSummaryBranch.GetSummaries(Syncfusion.WinForms.GridCommon.Collections.ITreeTableEmptySummaryArraySource)">
            <summary>
            Returns an array of summary objects.
            </summary>
            <param name="emptySummaries">The empty summaries.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableWithSummaryBranch.InvalidateSummariesBottomUp(System.Boolean)">
            <summary>
            Walks up parent branches and reset summaries.
            </summary>
            <param name="notifyParentRecordSource"></param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableWithSummaryBranch.InvalidateSummariesTopDown(System.Boolean)">
            <summary>
            Marks all summaries dirty in this node and child nodes.
            </summary>
            <param name="notifyCounterSource">if set to <c>true</c> notify counter source.</param>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.Collections.TreeTableWithSummaryBranch.TreeTableWithSummary">
            <summary>
            Returns the tree this branch belongs to.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.Collections.TreeTableWithSummaryBranch.Parent">
            <summary>
            Gets / sets the parent branch.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.Collections.TreeTableWithSummaryBranch.HasSummaries">
            <summary>
            Indicates whether this node has summaries.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableWithCounterBranch.#ctor(Syncfusion.WinForms.GridCommon.Collections.TreeTable)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.WinForms.GridCommon.Collections.TreeTableWithCounterBranch"/>.
            </summary>
            <param name="tree"></param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableWithCounterBranch.GetCounterPositionOfChild(Syncfusion.WinForms.GridCommon.Collections.ITreeTableNode)">
            <summary>
            Returns the cumulative counter position object of a child node with all counter values.
            </summary>
            <param name="node">The node.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableWithCounterBranch.GetLeftC">
            <summary>
            Returns the left branch node cast to ITreeTableCounterNode.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableWithCounterBranch.GetRightC">
            <summary>
            Returns the right branch node cast to ITreeTableCounterNode.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableWithCounterBranch.GetCounterTotal">
            <summary>
            Returns the total of this node's counter and child nodes (cached).
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableWithCounterBranch.GetCounterPosition">
            <summary>
            Returns the cumulative position of this node.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableWithCounterBranch.InvalidateCounterBottomUp(System.Boolean)">
            <summary>
            Invalidates the counter bottom up.
            </summary>
            <param name="notifyCounterSource">if set to <c>true</c> notify counter source.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableWithCounterBranch.InvalidateCounterTopDown(System.Boolean)">
            <summary>
            Marks all counters dirty in this node and child nodes.
            </summary>
            <param name="notifyCounterSource">if set to <c>true</c> notify counter source.</param>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.Collections.TreeTableWithCounterBranch.TreeTableWithCounter">
            <summary>
            Returns the tree this branch belongs to.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.Collections.TreeTableWithCounterBranch.Parent">
            <summary>
            Gets / sets the parent branch.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.GridCommon.Collections.TreeTableWithCounter">
            <summary>
            A balanced tree with <see cref="T:Syncfusion.WinForms.GridCommon.Collections.TreeTableWithCounterEntry"/> entries.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.GridCommon.Collections.TreeTableWithSummary">
            <summary>
            A balanced tree with <see cref="T:Syncfusion.WinForms.GridCommon.Collections.TreeTableWithSummaryEntry"/> entries.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableWithSummary.#ctor(System.Boolean)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.WinForms.GridCommon.Collections.TreeTableWithSummary"/>.
            </summary>
            <param name="sorted"></param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableWithSummary.InvalidateSummariesTopDown(System.Boolean)">
            <summary>
            Marks all summaries dirty.
            </summary>
            <param name="notifySummariesSource">if set to <c>true</c> notify summaries source.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableWithSummary.GetSummaries(Syncfusion.WinForms.GridCommon.Collections.ITreeTableEmptySummaryArraySource)">
            <summary>
            Returns an array of summary objects.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableWithSummary.Insert(System.Int32,Syncfusion.WinForms.GridCommon.Collections.TreeTableWithSummaryEntry)">
            <summary>
            Inserts a <see cref="T:Syncfusion.WinForms.GridCommon.Collections.TreeTableWithSummaryEntry"/> object at the specified index.
            </summary>
            <param name="index"></param>
            <param name="value"></param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableWithSummary.Remove(Syncfusion.WinForms.GridCommon.Collections.TreeTableWithSummaryEntry)">
            <summary>
            Removes an object from the tree.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableWithSummary.Contains(Syncfusion.WinForms.GridCommon.Collections.TreeTableWithSummaryEntry)">
            <summary>
            Indicates whether an object belongs to the tree.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableWithSummary.IndexOf(Syncfusion.WinForms.GridCommon.Collections.TreeTableWithSummaryEntry)">
            <summary>
            Returns the index of an object in the tree.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableWithSummary.Add(Syncfusion.WinForms.GridCommon.Collections.TreeTableWithSummaryEntry)">
            <summary>
            Appends an object.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableWithSummary.CopyTo(Syncfusion.WinForms.GridCommon.Collections.TreeTableWithSummaryEntry[],System.Int32)">
            <summary>
            Copies the elements of this tree to an array.
            </summary>
            <param name="array"></param>
            <param name="index"></param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableWithSummary.GetEnumerator">
            <summary>
            Returns a strongly typed enumerator.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.Collections.TreeTableWithSummary.HasSummaries">
            <summary>
            Indicates whether the tree has summaries.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.Collections.TreeTableWithSummary.Item(System.Int32)">
            <summary>
            Gets / sets a TreeTableWithSummaryEntry.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableWithCounter.#ctor(Syncfusion.WinForms.GridCommon.Collections.ITreeTableCounter,System.Boolean)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.WinForms.GridCommon.Collections.TreeTableWithCounter"/>.
            </summary>
            <param name="startPos"></param>
            <param name="sorted"></param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableWithCounter.EndInit">
            <summary>
            Ends optimization of insertion of elements when tree is initialized for the first time.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableWithCounter.InvalidateCounterTopDown(System.Boolean)">
            <summary>
            Marks all counters dirty.
            </summary>
            <param name="notifyCounterSource"></param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableWithCounter.GetCounterTotal">
            <summary>
            Returns the total of all counters in this tree.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableWithCounter.GetStartCounterPosition">
            <summary>
            Returns the starting counter for this tree.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableWithCounter.GetEntryAtCounterPosition(Syncfusion.WinForms.GridCommon.Collections.ITreeTableCounter,System.Int32)">
            <summary>
            Overloaded. Returns an entry at the specified counter position. A cookie defines the type of counter.
            </summary>
            <param name="searchPosition">The search position.</param>
            <param name="cookie">The cookie.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableWithCounter.GetEntryAtCounterPosition(Syncfusion.WinForms.GridCommon.Collections.ITreeTableCounter,System.Int32,System.Boolean)">
            <summary>
            Returns an entry at the specified counter position. A cookie defines the type of counter.
            </summary>
            <param name="searchPosition">The search position.</param>
            <param name="cookie">The cookie.</param>
            <param name="preferLeftMost">Indicates if the leftmost entry should be returned if multiple tree elements have the
            same searchPosition.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableWithCounter.GetEntryAtCounterPosition(Syncfusion.WinForms.GridCommon.Collections.ITreeTableCounter,Syncfusion.WinForms.GridCommon.Collections.ITreeTableCounter,System.Int32)">
            <summary>
            Gets the entry at counter position.
            </summary>
            <param name="start">The start.</param>
            <param name="searchPosition">The search position.</param>
            <param name="cookie">The cookie.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableWithCounter.GetEntryAtCounterPosition(Syncfusion.WinForms.GridCommon.Collections.ITreeTableCounter,Syncfusion.WinForms.GridCommon.Collections.ITreeTableCounter,System.Int32,System.Boolean)">
            <summary>
            Gets the entry at counter position.
            </summary>
            <param name="start">The start.</param>
            <param name="searchPosition">The search position.</param>
            <param name="cookie">The cookie.</param>
            <param name="preferLeftMost">if set to <c>true</c> prefer left most.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableWithCounter.GetNextNotEmptyCounterEntry(Syncfusion.WinForms.GridCommon.Collections.ITreeTableEntry,System.Int32)">
            <summary>
            Returns the subsequent entry in the collection for which the specific counter is not empty.
            A cookie defines the type of counter.
            </summary>
            <param name="current">The current.</param>
            <param name="cookie">The cookie.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableWithCounter.GetPreviousNotEmptyCounterEntry(Syncfusion.WinForms.GridCommon.Collections.ITreeTableEntry,System.Int32)">
            <summary>
            Returns the previous entry in the collection for which the specific counter is not empty.
            A cookie defines the type of counter.
            </summary>
            <param name="current">The current.</param>
            <param name="cookie">The cookie.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableWithCounter.GetNextVisibleEntry(Syncfusion.WinForms.GridCommon.Collections.TreeTableWithCounterEntry)">
            <summary>
            Returns the next entry in the collection for which CountVisible counter is not empty.
            </summary>
            <param name="current">The current.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableWithCounter.GetPreviousVisibleEntry(Syncfusion.WinForms.GridCommon.Collections.TreeTableWithCounterEntry)">
            <summary>
            Returns the previous entry in the collection for which CountVisible counter is not empty.
            </summary>
            <param name="current">The current.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableWithCounter.Insert(System.Int32,Syncfusion.WinForms.GridCommon.Collections.TreeTableWithCounterEntry)">
            <summary>
            Inserts a <see cref="T:Syncfusion.WinForms.GridCommon.Collections.TreeTableWithCounterEntry"/> object at the specified index.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableWithCounter.Remove(Syncfusion.WinForms.GridCommon.Collections.TreeTableWithCounterEntry)">
            <summary>
            Removes an object from the tree.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableWithCounter.Contains(Syncfusion.WinForms.GridCommon.Collections.TreeTableWithCounterEntry)">
            <summary>
            Indicates whether an entry belongs to the tree.
            </summary>
            <param name="value">The entry.</param>
            <returns>
            	<c>true</c> if tree contains the specified entry; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableWithCounter.IndexOf(Syncfusion.WinForms.GridCommon.Collections.TreeTableWithCounterEntry)">
            <summary>
            Returns the position of an object in the tree.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableWithCounter.Add(Syncfusion.WinForms.GridCommon.Collections.TreeTableWithCounterEntry)">
            <summary>
            Appends an object.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableWithCounter.CopyTo(Syncfusion.WinForms.GridCommon.Collections.TreeTableWithCounterEntry[],System.Int32)">
            <summary>
            Copies the elements of this tree to an array.
            </summary>
            <param name="array">The array.</param>
            <param name="index">The index.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableWithCounter.GetEnumerator">
            <summary>
            Returns a strongly typed enumerator.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.Collections.TreeTableWithCounter.Item(System.Int32)">
            <summary>
            Gets / sets a TreeTableWithCounterEntry.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.GridCommon.Collections.TreeTableWithCounterEnumerator">
            <summary>
            A strongly typed enumerator for the <see cref="T:Syncfusion.WinForms.GridCommon.Collections.TreeTableWithCounter"/> collection.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableWithCounterEnumerator.#ctor(Syncfusion.WinForms.GridCommon.Collections.TreeTable)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.WinForms.GridCommon.Collections.TreeTableWithCounterEnumerator"/>.
            </summary>
            <param name="tree"></param>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.Collections.TreeTableWithCounterEnumerator.Current">
            <summary>
            Returns the current <see cref="T:Syncfusion.WinForms.GridCommon.Collections.TreeTableWithCounter"/> object.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.GridCommon.Collections.TreeTableVisibleCounterSource">
            <summary>
            An object that counts objects that are marked "Visible". It implements
            the ITreeTableCounterSource interface and creates a <see cref="T:Syncfusion.WinForms.GridCommon.Collections.TreeTableVisibleCounter"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableVisibleCounterSource.#ctor(System.Double)">
            <summary>
            Initializes the object with visible count.
            </summary>
            <param name="visibleCount">The visible count.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableVisibleCounterSource.InvalidateCounterBottomUp">
            <summary>
            Marks all counters dirty in this object and parent nodes.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableVisibleCounterSource.GetCounter">
            <summary>
            Returns the counter object with counters.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableVisibleCounterSource.InvalidateCounterTopDown(System.Boolean)">
            <summary>
            Marks all counters dirty in this object and child nodes.
            </summary>
            <param name="notifyCounterSource">if set to <c>true</c> notify counter source.</param>
        </member>
        <member name="T:Syncfusion.WinForms.GridCommon.Collections.ITreeTableSummary">
            <summary>
            Interface definition for a summary object.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.ITreeTableSummary.Combine(Syncfusion.WinForms.GridCommon.Collections.ITreeTableSummary)">
            <summary>
            Combines this summary information with another object's summary and returns a new object.
            </summary>
            <param name="other">The other.</param>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.WinForms.GridCommon.Collections.ITreeTableEmptySummaryArraySource">
            <summary>
            Provides a <see cref="M:Syncfusion.WinForms.GridCommon.Collections.ITreeTableEmptySummaryArraySource.GetEmptySummaries"/> method.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.ITreeTableEmptySummaryArraySource.GetEmptySummaries">
            <summary>
            Gets an array of summary objects.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.GridCommon.Collections.ITreeTableSummaryArraySource">
            <summary>
            Interface definition for an object that has summaries.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.ITreeTableSummaryArraySource.GetSummaries(Syncfusion.WinForms.GridCommon.Collections.ITreeTableEmptySummaryArraySource,System.Boolean@)">
            <summary>
            Returns an array of summary objects.
            </summary>
            <param name="emptySummaries">An array of empty summary objects.</param>
            <param name="changed">Returns True if summaries were recalculated; False if already cached.</param>
            <returns>An array of summary objects.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.ITreeTableSummaryArraySource.InvalidateSummariesTopDown">
            <summary>
            Marks all summaries dirty in this object and child nodes.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.ITreeTableSummaryArraySource.InvalidateSummariesBottomUp">
            <summary>
            Marks all summaries dirty in this object and parent nodes.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.ITreeTableSummaryArraySource.InvalidateSummary">
            <summary>
            Marks all summaries dirty in this object only.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.GridCommon.Collections.TreeTableWithSummaryEnumerator">
            <summary>
            A strongly typed enumerator for the <see cref="T:Syncfusion.WinForms.GridCommon.Collections.TreeTableWithSummary"/> collection.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Collections.TreeTableWithSummaryEnumerator.#ctor(Syncfusion.WinForms.GridCommon.Collections.TreeTable)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.WinForms.GridCommon.Collections.TreeTableWithSummaryEnumerator"/>.
            </summary>
            <param name="tree"></param>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.Collections.TreeTableWithSummaryEnumerator.Current">
            <summary>
            Returns the current <see cref="T:Syncfusion.WinForms.GridCommon.Collections.TreeTableWithSummary"/> object.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.GridCommon.ScrollAxis.NamespaceDoc">
            <summary>
            Contains classes and interfaces that manange the scrolling, hidden ranges, height, width and 
            position of each row and column.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.GridCommon.ScrollAxis.DistanceCounterCollection">
            <summary>
            A collection of entities for which distances need to be counted. The
            collection provides methods for mapping from a distance position to
            an entity and vice versa.<para/>
            For example, in a scrollable grid control you have rows with different heights. 
            Use this collection to determine the total height for all rows in the grid,
            quickly detemine the row index for a given point and also quickly determine
            the point at which a row is displayed. This also allows a mapping between the 
            scrollbars value and the rows or columns associated with that value.
            </summary>
            <remarks>
            DistanceCounterCollection uses a high-water mark technique for allocating
            objects up to the modified entry with the highest index. When you modify 
            the size of an entry the collection ensures that that objects are allocated 
            for all entries up to the given index. Entries that are after the modified 
            entry are assumed to have the DefaultSize and will not be allocated. 
            <para/>
            The best-case scenario is when all lines have the same DefaultSize. In such
            case the internal collection remains completely empty and will not cause 
            any overhead. This makes DistanceCounterCollection also an attractive solution
            for the scenario where all entries have the same size (e.g. a databound grid
            where all rows have same height).
            </remarks>
        </member>
        <member name="T:Syncfusion.WinForms.GridCommon.ScrollAxis.IDistanceCounterCollection">
            <summary>
            A collection of entities for which distances need to counted. The
            collection provides methods for mapping from a distance position to
            an entity and vice versa.<para/>
            For example, in a scrollable grid control you have rows with different heights. 
            Use this collection to determine the total height for all rows in the grid,
            quickly detemine the row index for a given point and also quickly determine
            the point at which a row is displayed. This also allows a mapping between the 
            scrollbars value and the rows or columns associated with that value.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.IDistanceCounterCollection.Clear">
            <summary>
            Clears this instance.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.IDistanceCounterCollection.SetRange(System.Int32,System.Int32,System.Double)">
            <summary>
            Hides a specified range of entities (lines, rows or colums)
            </summary>
            <param name="from">The index for the first entity&gt;</param>
            <param name="to">The raw index for the last entity</param>
            <param name="distance">The distance.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.IDistanceCounterCollection.ResetRange(System.Int32,System.Int32)">
            <summary>
            Resets the range by restoring the default distance
            for all entries in the specified range.
            </summary>
            <param name="from">From.</param>
            <param name="to">To.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.IDistanceCounterCollection.GetNextVisibleIndex(System.Int32)">
            <summary>
            Skip subsequent entities for which the distance is 0.0 and return the next entity.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.IDistanceCounterCollection.GetPreviousVisibleIndex(System.Int32)">
            <summary>
            Skip previous entities for which the distance is 0.0 and return the next entity.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.IDistanceCounterCollection.IndexOfCumulatedDistance(System.Double)">
            <summary>
            Gets the index of an entity in this collection for which
            the cumulated count of previous distances is greater or equal
            the specified cumulatedDistance. (e.g. return row index for
            pixel position).
            </summary>
            <param name="cumulatedDistance">The cumulated count of previous distances.</param>
            <returns>The entity index.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.IDistanceCounterCollection.GetCumulatedDistanceAt(System.Int32)">
            <summary>
            Gets the cumulated count of previous distances for the
            entity at the specifiec index. (e.g. return pixel position
            for a row index).
            </summary>
            <param name="index">The entity index.</param>
            <returns>The cumulated count of previous distances for the
            entity at the specifiec index.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.IDistanceCounterCollection.SetNestedDistances(System.Int32,Syncfusion.WinForms.GridCommon.ScrollAxis.IDistanceCounterCollection)">
            <summary>
            Assigns a collection with nested entities to an item.
            </summary>
            <param name="index">The index.</param>
            <param name="nestedCollection">The nested collection.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.IDistanceCounterCollection.GetNestedDistances(System.Int32)">
            <summary>
            Gets the nested entities at a given index. If the index does not hold
            a mested distances collection the method returns null.
            </summary>
            <param name="index">The index.</param>
            <returns>The nested collection or null.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.IDistanceCounterCollection.GetNextScrollValue(System.Double)">
            <summary>
            Gets the distance position of the next entity after a given point. 
            </summary>
            <param name="point">The point.</param>
            <returns>The distance position.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.IDistanceCounterCollection.GetPreviousScrollValue(System.Double)">
            <summary>
            Gets the distance position of the entity preceeding a given point. If the point
            is in between entities the starting point of the matching entity
            is returned.
            </summary>
            <param name="point">The point.</param>
            <returns>The distance position.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.IDistanceCounterCollection.GetAlignedScrollValue(System.Double)">
            <summary>
            Gets the aligned scroll value which is the starting point of the entity
            found at the given distance position.
            </summary>
            <param name="point">The point.</param>
            <returns>The starting point of the entity.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.IDistanceCounterCollection.ConnectWithParent(Syncfusion.WinForms.GridCommon.Collections.ITreeTableCounterSource)">
            <summary>
            Connects a nested distance collection with a parent.
            </summary>
            <param name="treeTableCounterSource">The nested tree table visible counter source.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.IDistanceCounterCollection.Insert(System.Int32,System.Int32)">
            <summary>
            Insert entities in the collection.
            </summary>
            <param name="insertAt">Insert position.</param>
            <param name="count">The number of entities to be inserted.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.IDistanceCounterCollection.Remove(System.Int32,System.Int32)">
            <summary>
            Removes enities from the collection.
            </summary>
            <param name="removeAt">Index of the first entity to be removed.</param>
            <param name="count">The number of entities to be removed.</param>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.IDistanceCounterCollection.Count">
            <summary>
            The raw number of entities (lines, rows or columns).
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.IDistanceCounterCollection.DefaultDistance">
            <summary>
            The default distance (row height or column width) an entity spans 
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.IDistanceCounterCollection.TotalDistance">
            <summary>
            The total distance all entities span (e.g. total height of all rows in grid)
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.IDistanceCounterCollection.Item(System.Int32)">
            <summary>
            Gets or sets the distance for an entity.
            </summary>
            <param name="index">The index for the entity</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.DistanceCounterCollection.#ctor">
            <summary>
            Constructs the class and initializes the internal tree.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.DistanceCounterCollection.Clear">
            <summary>
            Clears this instance.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.DistanceCounterCollection.SetRange(System.Int32,System.Int32,System.Double)">
            <summary>
            Hides a specified range of entities (lines, rows or colums)
            </summary>
            <param name="from">The index for the first entity&gt;</param>
            <param name="to">The raw index for the last entity</param>
            <param name="distance">The distance.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.DistanceCounterCollection.SetNestedDistances(System.Int32,Syncfusion.WinForms.GridCommon.ScrollAxis.IDistanceCounterCollection)">
            <summary>
            Assigns a collection with nested entities to an item.
            </summary>
            <param name="index">The index.</param>
            <param name="nestedCollection">The nested collection.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.DistanceCounterCollection.GetNestedDistances(System.Int32)">
            <summary>
            Gets the nested entities at a given index. If the index does not hold
            a mested distances collection the method returns null.
            </summary>
            <param name="index">The index.</param>
            <returns>The nested collection or null.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.DistanceCounterCollection.GetNextScrollValue(System.Double)">
            <summary>
            Gets the distance position of the next entity after a given point. 
            </summary>
            <param name="point">The point.</param>
            <returns>The distance position.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.DistanceCounterCollection.GetPreviousScrollValue(System.Double)">
            <summary>
            Gets the distance position of the entity preceeding a given point. If the point
            is in between entities the starting point of the matching entity
            is returned.
            </summary>
            <param name="point">The point.</param>
            <returns>The distance position.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.DistanceCounterCollection.GetAlignedScrollValue(System.Double)">
            <summary>
            Gets the aligned scroll value which is the starting point of the entity
            found at the given distance position.
            </summary>
            <param name="point">The point.</param>
            <returns>The starting point of the entity.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.DistanceCounterCollection.ConnectWithParent(Syncfusion.WinForms.GridCommon.Collections.ITreeTableCounterSource)">
            <summary>
            Connects a nested distance collection with a parent.
            </summary>
            <param name="nestedTreeTableVisibleCounterSource">The nested tree table visible counter source.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.DistanceCounterCollection.ResetRange(System.Int32,System.Int32)">
            <summary>
            Resets the range by restoring the default distance
            for all entries in the specified range.
            </summary>
            <param name="from">From.</param>
            <param name="to">To.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.DistanceCounterCollection.GetNextVisibleIndex(System.Int32)">
            <summary>
            Skip subsequent entities for which the distance is 0.0 and return the next entity.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.DistanceCounterCollection.GetPreviousVisibleIndex(System.Int32)">
            <summary>
            Skip previous entities for which the distance is 0.0 and return the next entity.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.DistanceCounterCollection.IndexOfCumulatedDistance(System.Double)">
            <summary>
            Gets the index of an entity in this collection for which
            the cumulated count of previous distances is greater or equal
            the specified cumulatedDistance. (e.g. return row index for
            pixel position).
            </summary>
            <param name="cumulatedDistance">The cumulated count of previous distances.</param>
            <returns>The entity index.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.DistanceCounterCollection.GetCumulatedDistanceAt(System.Int32)">
            <summary>
            Gets the cumulated count of previous distances for the
            entity at the specifiec index. (e.g. return pixel position
            for a row index).
            </summary>
            <param name="index">The entity index.</param>
            <returns>The cumulated count of previous distances for the
            entity at the specifiec index.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.DistanceCounterCollection.Insert(System.Int32,System.Int32)">
            <summary>
            Insert entities in the collection.
            </summary>
            <param name="insertAt">Insert position.</param>
            <param name="count">The number of entities to be inserted.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.DistanceCounterCollection.Remove(System.Int32,System.Int32)">
            <summary>
            Removes enities from the collection.
            </summary>
            <param name="removeAt">Index of the first entity to be removed.</param>
            <param name="count">The number of entities to be removed.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.DistanceCounterCollection.Dispose">
            <summary>
            Call the Dispose and SuppressFinalize method for dipose the instance of <see cref="T:Syncfusion.WinForms.GridCommon.ScrollAxis.DistanceCounterCollection"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.DistanceCounterCollection.Dispose(System.Boolean)">
            <summary>
            Dispose the live resources used by the <see cref="T:Syncfusion.WinForms.GridCommon.ScrollAxis.DistanceCounterCollection"/> class.
            </summary>
            <param name="disposing">Dispose the instance, if it is True</param>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.DistanceCounterCollection.Count">
            <summary>
            The raw number of entities (lines, rows or columns).
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.DistanceCounterCollection.DefaultDistance">
            <summary>
            The default distance (row height or column width) an entity spans 
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.DistanceCounterCollection.TotalDistance">
            <summary>
            The total distance all entities span (e.g. total height of all rows in grid)
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.DistanceCounterCollection.Item(System.Int32)">
            <summary>
            Gets or sets the distance for an entity.
            </summary>
            <param name="index">The index for the entity</param>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.WinForms.GridCommon.ScrollAxis.DistanceCounterCollection.NestedTreeTableVisibleCounterSource">
            <summary>
            An object that maintains a collection of nested distances and wires
            it to a parent distance collection. The object is used by the 
            DistanceCounterCollection.SetNestedDistances method to associated
            the nested distances with an index in the parent collection.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.DistanceCounterCollection.NestedTreeTableVisibleCounterSource.#ctor(Syncfusion.WinForms.GridCommon.ScrollAxis.IDistanceCounterCollection,Syncfusion.WinForms.GridCommon.ScrollAxis.IDistanceCounterCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.GridCommon.ScrollAxis.DistanceCounterCollection.NestedTreeTableVisibleCounterSource"/> class.
            </summary>
            <param name="parentDistances">The parent distances.</param>
            <param name="nestedDistances">The nested distances.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.DistanceCounterCollection.NestedTreeTableVisibleCounterSource.InvalidateCounterBottomUp">
            <summary>
            Marks all counters dirty in this object and parent nodes.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.DistanceCounterCollection.NestedTreeTableVisibleCounterSource.GetCounter">
            <summary>
            Returns the <see cref="T:Syncfusion.WinForms.GridCommon.Collections.TreeTableVisibleCounter"/> object with counters.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.DistanceCounterCollection.NestedTreeTableVisibleCounterSource.Entry">
            <summary>
            Gets or sets the counter entry.
            </summary>
            <value>The entry.</value>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.DistanceCounterCollection.NestedTreeTableVisibleCounterSource.ParentDistances">
            <summary>
            Gets the parent distances.
            </summary>
            <value>The parent distances.</value>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.DistanceCounterCollection.NestedTreeTableVisibleCounterSource.NestedDistances">
            <summary>
            Gets the nested distances.
            </summary>
            <value>The nested distances.</value>
        </member>
        <member name="T:Syncfusion.WinForms.GridCommon.ScrollAxis.DistanceCounterSubset">
            <summary>
            A collection of entities that is shared with a parent collection for which distances
            need to counted. The collection only is a subset for a specific range in
            the parent distance collection.
            <para/>
            When you change the size of an element in this collection the change will
            also be reflected in the parent collection and vice versa.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.GridCommon.ScrollAxis.IDistancesHost">
            <summary>
            An object that implements the <see cref="P:Syncfusion.WinForms.GridCommon.ScrollAxis.IDistancesHost.Distances"/> property.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.IDistancesHost.Distances">
            <summary>
            Gets or sets the distances.
            </summary>
            <value>The distances.</value>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.DistanceCounterSubset.#ctor(Syncfusion.WinForms.GridCommon.ScrollAxis.IDistanceCounterCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.GridCommon.ScrollAxis.DistanceCounterSubset"/> class.
            </summary>
            <param name="trackedParentCollection">The parent collection for which a subset is "tracked".</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.DistanceCounterSubset.Clear">
            <summary>
            Restores the distances in the parent collection for this subset to their default distance.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.DistanceCounterSubset.SetRange(System.Int32,System.Int32,System.Double)">
            <summary>
            Hides a specified range of entities (lines, rows or colums)
            </summary>
            <param name="from">The index for the first entity&gt;</param>
            <param name="to">The raw index for the last entity</param>
            <param name="distance"></param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.DistanceCounterSubset.ResetRange(System.Int32,System.Int32)">
            <summary>
            Resets the range by restoring the default distance
            for all entries in the specified range.
            </summary>
            <param name="from">From.</param>
            <param name="to">To.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.DistanceCounterSubset.GetNextVisibleIndex(System.Int32)">
            <summary>
            Skip subsequent entities for which the distance is 0.0 and return the next entity.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.DistanceCounterSubset.GetPreviousVisibleIndex(System.Int32)">
            <summary>
            Skip previous entities for which the distance is 0.0 and return the next entity.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.DistanceCounterSubset.IndexOfCumulatedDistance(System.Double)">
            <summary>
            Gets the index of an entity in this collection for which
            the cumulated count of previous distances is greater or equal
            the specified cumulatedDistance. (e.g. return row index for
            pixel position).
            </summary>
            <param name="cumulatedDistance">The cumulated count of previous distances.</param>
            <returns>The entity index.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.DistanceCounterSubset.GetCumulatedDistanceAt(System.Int32)">
            <summary>
            Gets the cumulated count of previous distances for the
            entity at the specifiec index. (e.g. return pixel position
            for a row index).
            </summary>
            <param name="index">The entity index.</param>
            <returns>
            The cumulated count of previous distances for the
            entity at the specifiec index.
            </returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.DistanceCounterSubset.SetNestedDistances(System.Int32,Syncfusion.WinForms.GridCommon.ScrollAxis.IDistanceCounterCollection)">
            <summary>
            Assigns a collection with nested entities to an item.
            </summary>
            <param name="index">The index.</param>
            <param name="nestedCollection">The nested collection.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.DistanceCounterSubset.GetNestedDistances(System.Int32)">
            <summary>
            Gets the nested entities at a given index. If the index does not hold
            a mested distances collection the method returns null.
            </summary>
            <param name="index">The index.</param>
            <returns>The nested collection or null.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.DistanceCounterSubset.GetNextScrollValue(System.Double)">
            <summary>
            Gets the distance position of the next entity after a given point.
            </summary>
            <param name="point">The point.</param>
            <returns>The distance position.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.DistanceCounterSubset.GetPreviousScrollValue(System.Double)">
            <summary>
            Gets the distance position of the entity preceeding a given point. If the point
            is in between entities the starting point of the matching entity
            is returned.
            </summary>
            <param name="point">The point.</param>
            <returns>The distance position.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.DistanceCounterSubset.GetAlignedScrollValue(System.Double)">
            <summary>
            Gets the aligned scroll value which is the starting point of the entity
            found at the given distance position.
            </summary>
            <param name="point">The point.</param>
            <returns>The starting point of the entity.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.DistanceCounterSubset.ConnectWithParent(Syncfusion.WinForms.GridCommon.Collections.ITreeTableCounterSource)">
            <summary>
            This method is not supported for DistanceCounterSubset.
            </summary>
            <param name="treeTableCounterSource">The nested tree table visible counter source.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.DistanceCounterSubset.Insert(System.Int32,System.Int32)">
            <summary>
            Insert entities in the collection.
            </summary>
            <param name="insertAt">Insert position.</param>
            <param name="count">The number of entities to be inserted.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.DistanceCounterSubset.Remove(System.Int32,System.Int32)">
            <summary>
            Removes enities from the collection.
            </summary>
            <param name="removeAt">Index of the first entity to be removed.</param>
            <param name="count">The number of entities to be removed.</param>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.DistanceCounterSubset.Start">
            <summary>
            Gets or sets the starting index of this collection in the parent collection.
            </summary>
            <value>The start.</value>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.DistanceCounterSubset.End">
            <summary>
            Gets or sets the ending index of this collection in the parent collection.
            </summary>
            <value>The start.</value>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.DistanceCounterSubset.Count">
            <summary>
            The raw number of entities (lines, rows or columns).
            </summary>
            <value></value>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.DistanceCounterSubset.DefaultDistance">
            <summary>
            The default distance (row height or column width) an entity spans
            </summary>
            <value></value>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.DistanceCounterSubset.TotalDistance">
            <summary>
            The total distance all entities span (e.g. total height of all rows in grid)
            </summary>
            <value></value>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.DistanceCounterSubset.Item(System.Int32)">
            <summary>
            Gets or sets the distance for an entity.
            </summary>
            <value></value>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.WinForms.GridCommon.ScrollAxis.DistanceRangeCounterCollection">
            <summary>
            A collection of entities for which distances need to be counted. The
            collection provides methods for mapping from a distance position to
            an entity and vice versa.<para/>
            For example, in a scrollable grid control you have rows with different heights. 
            Use this collection to determine the total height for all rows in the grid,
            quickly detemine the row index for a given point and also quickly determine
            the point at which a row is displayed. This also allows a mapping between the 
            scrollbars value and the rows or columns associated with that value.
            </summary>
            <remarks>
            DistanceCounterCollection internally uses ranges for allocating
            objects up to the modified entry with the highest index. When you modify 
            the size of an entry the collection ensures that that objects are allocated 
            for all entries up to the given index. Entries that are after the modified 
            entry are assumed to have the DefaultSize and will not be allocated. 
            <para/>
            Ranges will only be allocated for those lines that have different sizes.
            If you do for example only change the size of line 100 to be 10 then the collection
            will internally create two ranges: Range 1 from 0-99 with DefaultSize and
            Range 2 from 100-100 with size 10. This approach makes this collection
            work very efficient with grid scenarios where often many rows have
            the same height.
            </remarks>
        </member>
        <member name="F:Syncfusion.WinForms.GridCommon.ScrollAxis.DistanceRangeCounterCollection.Empty">
            <summary>
            Returns an empty collection.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.DistanceRangeCounterCollection.#ctor(System.Double)">
            <summary>
            Constructs the class and initializes the internal tree.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.DistanceRangeCounterCollection.Clear">
            <summary>
            Clears this instance.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.DistanceRangeCounterCollection.SetNestedDistances(System.Int32,Syncfusion.WinForms.GridCommon.ScrollAxis.IDistanceCounterCollection)">
            <summary>
            Assigns a collection with nested entities to an item.
            </summary>
            <param name="index">The index.</param>
            <param name="nestedCollection">The nested collection.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.DistanceRangeCounterCollection.GetNestedDistances(System.Int32)">
            <summary>
            Gets the nested entities at a given index. If the index does not hold
            a mested distances collection the method returns null.
            </summary>
            <param name="index">The index.</param>
            <returns>The nested collection or null.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.DistanceRangeCounterCollection.GetNextScrollValue(System.Double)">
            <summary>
            Gets the distance position of the next entity after a given point. 
            </summary>
            <param name="point">The point.</param>
            <returns>The distance position.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.DistanceRangeCounterCollection.GetPreviousScrollValue(System.Double)">
            <summary>
            Gets the distance position of the entity preceeding a given point. If the point
            is in between entities the starting point of the matching entity
            is returned.
            </summary>
            <param name="point">The point.</param>
            <returns>The distance position.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.DistanceRangeCounterCollection.GetAlignedScrollValue(System.Double)">
            <summary>
            Gets the aligned scroll value which is the starting point of the entity
            found at the given distance position.
            </summary>
            <param name="point">The point.</param>
            <returns>The starting point of the entity.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.DistanceRangeCounterCollection.ConnectWithParent(Syncfusion.WinForms.GridCommon.Collections.ITreeTableCounterSource)">
            <summary>
            Connects a nested distance collection with a parent.
            </summary>
            <param name="treeTableCounterSource">The nested tree table visible counter source.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.DistanceRangeCounterCollection.GetNextVisibleIndex(System.Int32)">
            <summary>
            Skip subsequent entities for which the distance is 0.0 and return the next entity.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.DistanceRangeCounterCollection.GetPreviousVisibleIndex(System.Int32)">
            <summary>
            Skip previous entities for which the distance is 0.0 and return the next entity.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.DistanceRangeCounterCollection.IndexOfCumulatedDistance(System.Double)">
            <summary>
            Gets the index of an entity in this collection for which
            the cumulated count of previous distances is greater or equal
            the specified cumulatedDistance. (e.g. return row index for
            pixel position).
            </summary>
            <param name="cumulatedDistance">The cumulated count of previous distances.</param>
            <returns>The entity index.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.DistanceRangeCounterCollection.GetCumulatedDistanceAt(System.Int32)">
            <summary>
            Gets the cumulated count of previous distances for the
            entity at the specifiec index. (e.g. return pixel position
            for a row index).
            </summary>
            <param name="index">The entity index.</param>
            <returns>The cumulated count of previous distances for the
            entity at the specifiec index.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.DistanceRangeCounterCollection.SetRange(System.Int32,System.Int32,System.Double)">
            <summary>
            Hides a specified range of entities (lines, rows or colums)
            </summary>
            <param name="from">The index for the first entity&gt;</param>
            <param name="to">The raw index for the last entity</param>
            <param name="distance">The distance.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.DistanceRangeCounterCollection.ResetRange(System.Int32,System.Int32)">
            <summary>
            Resets the range by restoring the default distance
            for all entries in the specified range.
            </summary>
            <param name="from">From.</param>
            <param name="to">To.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.DistanceRangeCounterCollection.Insert(System.Int32,System.Int32)">
            <summary>
            Insert entities in the collection.
            </summary>
            <param name="insertAt">Insert position.</param>
            <param name="count">The number of entities to be inserted.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.DistanceRangeCounterCollection.Insert(System.Int32,System.Int32,System.Double)">
            <summary>
            Insert entities in the collection.
            </summary>
            <param name="insertAt">Insert position.</param>
            <param name="count">The number of entities to be inserted.</param>
            <param name="distance">The distance to be set.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.DistanceRangeCounterCollection.Remove(System.Int32,System.Int32)">
            <summary>
            Removes enities from the collection.
            </summary>
            <param name="removeAt">Index of the first entity to be removed.</param>
            <param name="count">The number of entities to be removed.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.DistanceRangeCounterCollection.Dispose">
            <summary>
            Call the Dispose and SuppressFinalize method for dipose the instance of <see cref="T:Syncfusion.WinForms.GridCommon.ScrollAxis.DistanceCounterCollection"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.DistanceRangeCounterCollection.Dispose(System.Boolean)">
            <summary>
            Dispose the live resources used by the <see cref="T:Syncfusion.WinForms.GridCommon.ScrollAxis.DistanceCounterCollection"/> class.
            </summary>
            <param name="disposing">Dispose the instance, if it is True</param>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.DistanceRangeCounterCollection.Count">
            <summary>
            The raw number of entities (lines, rows or columns).
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.DistanceRangeCounterCollection.DefaultDistance">
            <summary>
            The default distance (row height or column width) an entity spans 
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.DistanceRangeCounterCollection.TotalDistance">
            <summary>
            The total distance all entities span (e.g. total height of all rows in grid)
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.DistanceRangeCounterCollection.Item(System.Int32)">
            <summary>
            Gets or sets the distance for an entity.
            </summary>
            <param name="index">The index for the entity</param>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.WinForms.GridCommon.ScrollAxis.DistanceRangeCounterCollection.NestedDistanceCounterCollectionSource">
            <summary>
            An object that maintains a collection of nested distances and wires
            it to a parent distance collection. The object is used by the 
            DistanceCounterCollection.SetNestedDistances method to associated
            the nested distances with an index in the parent collection.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.GridCommon.ScrollAxis.DistanceLineCounterSource">
            <summary>
            An object that counts objects that are marked "Visible". It implements
            the ITreeTableCounterSource interface and creates a <see cref="T:Syncfusion.WinForms.GridCommon.ScrollAxis.DistanceLineCounter"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.DistanceLineCounterSource.#ctor(System.Double,System.Int32)">
            <summary>
            Initializes the object with visible count.
            </summary>
            <param name="visibleCount">The visible count.</param>
            <param name="lineCount">The line count.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.DistanceLineCounterSource.ToString">
            <summary>
            Returns a string describing the state of the object.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.DistanceLineCounterSource.LineCount">
            <summary>
            Gets or sets the line count.
            </summary>
            <value>The line count.</value>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.DistanceLineCounterSource.SingleLineDistance">
            <summary>
            Gets or sets the distance of a single line.
            </summary>
            <value>The single line distance.</value>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.DistanceRangeCounterCollection.NestedDistanceCounterCollectionSource.#ctor(Syncfusion.WinForms.GridCommon.ScrollAxis.IDistanceCounterCollection,Syncfusion.WinForms.GridCommon.ScrollAxis.IDistanceCounterCollection,Syncfusion.WinForms.GridCommon.ScrollAxis.DistanceLineCounterEntry)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.GridCommon.ScrollAxis.DistanceRangeCounterCollection.NestedDistanceCounterCollectionSource"/> class.
            </summary>
            <param name="parentDistances">The parent distances.</param>
            <param name="nestedDistances">The nested distances.</param>
            <param name="entry">The entry.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.DistanceRangeCounterCollection.NestedDistanceCounterCollectionSource.InvalidateCounterBottomUp">
            <summary>
            Marks all counters dirty in this object and parent nodes.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.DistanceRangeCounterCollection.NestedDistanceCounterCollectionSource.GetCounter">
            <summary>
            Returns the <see cref="T:Syncfusion.WinForms.GridCommon.Collections.TreeTableVisibleCounter"/> object with counters.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.DistanceRangeCounterCollection.NestedDistanceCounterCollectionSource.Entry">
            <summary>
            Gets or sets the counter entry.
            </summary>
            <value>The entry.</value>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.DistanceRangeCounterCollection.NestedDistanceCounterCollectionSource.ParentDistances">
            <summary>
            Gets the parent distances.
            </summary>
            <value>The parent distances.</value>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.DistanceRangeCounterCollection.NestedDistanceCounterCollectionSource.NestedDistances">
            <summary>
            Gets the nested distances.
            </summary>
            <value>The nested distances.</value>
        </member>
        <member name="T:Syncfusion.WinForms.GridCommon.ScrollAxis.DistanceLineCounterKind">
            <summary>
            A collection of integers used to specify various counter kinds.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.GridCommon.ScrollAxis.DistanceLineCounterKind.CountAll">
            <summary>
            All counters.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.GridCommon.ScrollAxis.DistanceLineCounterKind.Distance">
            <summary>
            Visible Counter.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.GridCommon.ScrollAxis.DistanceLineCounterKind.Lines">
            <summary>
            Line Counter.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.GridCommon.ScrollAxis.DistanceLineCounter">
            <summary>
            A counter that counts objects that are marked "Visible".
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.GridCommon.ScrollAxis.DistanceLineCounter.Empty">
            <summary>
            Returns an empty DistanceLineCounter that represents zero visible elements.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.DistanceLineCounter.#ctor(System.Double,System.Int32)">
            <summary>
            Initializes a <see cref="T:Syncfusion.WinForms.GridCommon.ScrollAxis.DistanceLineCounter"/> with a pecified number of visible elements.
            </summary>
            <param name="distance">The visible count.</param>
            <param name="lineCount">The line count.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.DistanceLineCounter.GetValue(System.Int32)">
            <summary>
            Returns the integer value of the counter. A cookie specifies
            a specific counter type.
            </summary>
            <param name="cookie">The cookie.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.DistanceLineCounter.Syncfusion#WinForms#GridCommon#Collections#ITreeTableCounter#Combine(Syncfusion.WinForms.GridCommon.Collections.ITreeTableCounter,System.Int32)">
            <summary>
            Combines one tree obkect with another and returns the new object.
            </summary>
            <param name="other">The other.</param>
            <param name="cookie">The cookie.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.DistanceLineCounter.Combine(Syncfusion.WinForms.GridCommon.ScrollAxis.DistanceLineCounter,System.Int32)">
            <summary>
            Combines the counter values of this counter object with the values of another counter object
            and returns a new counter object.
            </summary>
            <param name="other">The other.</param>
            <param name="cookie">The cookie.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.DistanceLineCounter.Compare(Syncfusion.WinForms.GridCommon.ScrollAxis.DistanceLineCounter,System.Int32)">
            <summary>
            Compares this counter with another counter. A cookie can specify
            a specific counter type.
            </summary>
            <param name="other">The other.</param>
            <param name="cookie">The cookie.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.DistanceLineCounter.IsEmpty(System.Int32)">
            <summary>
            Indicates whether the counter object is empty. A cookie can specify
            a specific counter type.
            </summary>
            <param name="cookie">The cookie.</param>
            <returns>
            	<c>true</c> if the specified cookie is empty; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.DistanceLineCounter.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.DistanceLineCounter.LineCount">
            <summary>
            Gets the line count.
            </summary>
            <value>The line count.</value>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.DistanceLineCounter.Distance">
            <summary>
            Gets the distance.
            </summary>
            <value>The distance.</value>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.DistanceLineCounter.Kind">
            <summary>
            The Counter Kind.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.GridCommon.ScrollAxis.DistanceLineCounterTree">
            <summary>
            
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.GridCommon.ScrollAxis.IEditableLineSizeHost">
            <summary>
            A collection that manages lines with varying height and hidden state. 
            It has properties for header and footer lines, total line count, default
            size of a line and also lets you add nested collections. Methods
            are provided for changing the values and getting the total extent.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.GridCommon.ScrollAxis.ILineSizeHost">
            <summary>
            A collection that manages lines with varying height and hidden state. 
            It has properties for header and footer lines, total line count, default
            size of a line and also lets you add nested collections.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.ILineSizeHost.GetDefaultLineSize">
            <summary>
            Returns the default line size.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.ILineSizeHost.GetLineCount">
            <summary>
            Returns the line count.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.ILineSizeHost.GetSize(System.Int32,System.Int32@)">
            <summary>
            Gets the size.
            </summary>
            <param name="index">The index.</param>
            <param name="repeatValueCount">The number of subsequent values with same size.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.ILineSizeHost.GetHeaderLineCount">
            <summary>
            Gets the header line count.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.ILineSizeHost.GetFooterLineCount">
            <summary>
            Gets the footer line count.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.ILineSizeHost.GetHidden(System.Int32,System.Int32@)">
            <summary>
            Gets the hidden state for a line.
            </summary>
            <param name="index">The index.</param>
            <param name="repeatValueCount">The number of subsequent lines with same state.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.ILineSizeHost.InitializeScrollAxis(Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollAxisBase)">
            <summary>
            Initializes the scroll axis.
            </summary>
            <param name="scrollAxis">The scroll axis.</param>
        </member>
        <member name="E:Syncfusion.WinForms.GridCommon.ScrollAxis.ILineSizeHost.LineSizeChanged">
            <summary>
            Occurs when a lines size was changed.
            </summary>
        </member>
        <member name="E:Syncfusion.WinForms.GridCommon.ScrollAxis.ILineSizeHost.LineHiddenChanged">
            <summary>
            Occurs when a lines hidden state changed.
            </summary>
        </member>
        <member name="E:Syncfusion.WinForms.GridCommon.ScrollAxis.ILineSizeHost.DefaultLineSizeChanged">
            <summary>
            Occurs when the default line size changed.
            </summary>
        </member>
        <member name="E:Syncfusion.WinForms.GridCommon.ScrollAxis.ILineSizeHost.LineCountChanged">
            <summary>
            Occurs when the line count was changed.
            </summary>
        </member>
        <member name="E:Syncfusion.WinForms.GridCommon.ScrollAxis.ILineSizeHost.HeaderLineCountChanged">
            <summary>
            Occurs when the header line count was changed.
            </summary>
        </member>
        <member name="E:Syncfusion.WinForms.GridCommon.ScrollAxis.ILineSizeHost.FooterLineCountChanged">
            <summary>
            Occurs when the footer line count was changed.
            </summary>
        </member>
        <member name="E:Syncfusion.WinForms.GridCommon.ScrollAxis.ILineSizeHost.LinesInserted">
            <summary>
            Occurs when lines were inserted.
            </summary>
        </member>
        <member name="E:Syncfusion.WinForms.GridCommon.ScrollAxis.ILineSizeHost.LinesRemoved">
            <summary>
            Occurs when lines were removed.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.IEditableLineSizeHost.GetNestedLines(System.Int32)">
            <summary>
            Gets the nested lines.
            </summary>
            <param name="index">The index.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.IEditableLineSizeHost.SetNestedLines(System.Int32,Syncfusion.WinForms.GridCommon.ScrollAxis.IEditableLineSizeHost)">
            <summary>
            Sets the nested lines.
            </summary>
            <param name="index">The index.</param>
            <param name="nestedLines">The nested lines.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.IEditableLineSizeHost.InsertLines(System.Int32,System.Int32,Syncfusion.WinForms.GridCommon.ScrollAxis.IEditableLineSizeHost)">
            <summary>
            Insert a number of lines.
            </summary>
            <param name="insertAtLine">The index of the first line to insert.</param>
            <param name="count">The count.</param>
            <param name="moveLines">A container with saved state from a preceeding <see cref="M:Syncfusion.WinForms.GridCommon.ScrollAxis.IEditableLineSizeHost.RemoveLines(System.Int32,System.Int32,Syncfusion.WinForms.GridCommon.ScrollAxis.IEditableLineSizeHost)"/> call when lines should be moved. When it is null empty lines with default size are inserted.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.IEditableLineSizeHost.RemoveLines(System.Int32,System.Int32,Syncfusion.WinForms.GridCommon.ScrollAxis.IEditableLineSizeHost)">
            <summary>
            Removes a number of lines.
            </summary>
            <param name="removeAtLine">The index of the first line to be removed.</param>
            <param name="count">The count.</param>
            <param name="moveLines">A container to save state for a subsequent <see cref="M:Syncfusion.WinForms.GridCommon.ScrollAxis.IEditableLineSizeHost.InsertLines(System.Int32,System.Int32,Syncfusion.WinForms.GridCommon.ScrollAxis.IEditableLineSizeHost)"/> call when lines should be moved.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.IEditableLineSizeHost.CreateMoveLines">
            <summary>
            Creates the object which holds temporary state when moving lines.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.IEditableLineSizeHost.SetHidden(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Sets the hidden state for a range of lines.
            </summary>
            <param name="from">From.</param>
            <param name="to">To.</param>
            <param name="hide">if set to <c>true</c> hide the lines.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.IEditableLineSizeHost.SetRange(System.Int32,System.Int32,System.Double)">
            <summary>
            Sets the line size for a range.
            </summary>
            <param name="from">From.</param>
            <param name="to">To.</param>
            <param name="size">The size.</param>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.IEditableLineSizeHost.TotalExtent">
            <summary>
            Gets the total extent which is the total of all line sizes. Note: This propert only 
            works if the DistanceCollection has been setup for pixel scrolling; otherwise it returns
            double.NaN.
            </summary>
            <value>The total extent or double.NaN.</value>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.IEditableLineSizeHost.SupportsNestedLines">
            <summary>
            Gets whether the host supports nesting.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.IEditableLineSizeHost.SupportsInsertRemove">
            <summary>
            Gets whether the host supports inserting and removing lines.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.IEditableLineSizeHost.DefaultLineSize">
            <summary>
            Gets or sets the default size of lines.
            </summary>
            <value>The default size of lines.</value>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.IEditableLineSizeHost.FooterLineCount">
            <summary>
            Gets or sets the footer line count.
            </summary>
            <value>The footer line count.</value>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.IEditableLineSizeHost.HeaderLineCount">
            <summary>
            Gets or sets the header line count.
            </summary>
            <value>The header line count.</value>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.IEditableLineSizeHost.LineCount">
            <summary>
            Gets or sets the line count.
            </summary>
            <value>The line count.</value>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.IEditableLineSizeHost.Item(System.Int32)">
            <summary>
            Gets or sets the line size at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="T:Syncfusion.WinForms.GridCommon.ScrollAxis.EmptyLineSizeHost">
            <summary>
            Implements the <see cref="T:Syncfusion.WinForms.GridCommon.ScrollAxis.ILineSizeHost"/> interface for an empty collection
            that cannot be modified.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.GridCommon.ScrollAxis.EmptyLineSizeHost.Empty">
            <summary>
            Returns the empty collection.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.EmptyLineSizeHost.Dispose">
            <summary>
            Call the Dispose and SuppressFinalize method for dipose the instance of <see cref="T:Syncfusion.WinForms.GridCommon.ScrollAxis.ILineSizeHost"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.EmptyLineSizeHost.Dispose(System.Boolean)">
            <summary>
            Dispose the live resources used by the <see cref="T:Syncfusion.WinForms.GridCommon.ScrollAxis.ILineSizeHost"/> class.
            </summary>
            <param name="disposing">Dispose the instance, if it is True</param>
        </member>
        <member name="T:Syncfusion.WinForms.GridCommon.ScrollAxis.INestedDistancesHost">
            <summary>
            An object that implements the <see cref="M:Syncfusion.WinForms.GridCommon.ScrollAxis.INestedDistancesHost.GetDistances(System.Int32)"/> method.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.INestedDistancesHost.GetDistances(System.Int32)">
            <summary>
            Gets the nested distances if a line contains a nested lines collection; null otherwise.
            </summary>
            <param name="line">The line.</param>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.WinForms.GridCommon.ScrollAxis.IScrollBar">
            <summary>
            Defines an interface that provides all properties to configure a scrollbar.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.IScrollBar.LargeChange">
            <summary>
            Gets or sets a value to be added to or subtracted from the value of the property when the scroll box is moved a large distance.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.IScrollBar.Maximum">
            <summary>
            Gets or sets the upper limit of values of the scrollable range.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.IScrollBar.Minimum">
            <summary>
            Gets or sets the lower limit of values of the scrollable range.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.IScrollBar.SmallChange">
            <summary>
            Gets or sets the value to be added to or subtracted from the value of the property when the scroll box is moved a small distance.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.IScrollBar.Value">
            <summary>
            Gets or sets a numeric value that represents the current position of the scroll box on the scroll bar control.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.IScrollBar.Enabled">
            <summary>
            Gets or sets a number that represents the current position of the scroll box on the scroll bar control.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.GridCommon.ScrollAxis.LineScrollAxis">
            <summary>
            The LineScrollAxis implements scrolling only for whole lines. You can
            hide lines and LineScrollAxis provides a mapping mechanism between the
            index of the line and the scroll index and vice versa. Hidden lines
            are not be counted when the scroll index is determined for a line.
            <para/>
            The LineScrollAxis does not support scrolling in between lines (pixel scrolling).
            This can be of advantage if you have a large number of lines with varying
            line sizes. In such case the LineScrollAxis does not need to maintain
            a collection that tracks line sizes whereas the <see cref="T:Syncfusion.WinForms.GridCommon.ScrollAxis.PixelScrollAxis"/> does need to.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollAxisBase">
            <summary>
            ScrollAxisBase is an abstract base class and implements scrolling
            logic for both horizontal and vertical scrolling in a <see cref="T:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollAxisBase"/>.
            Logical units in the ScrollAxisBase are called "Lines".
            <para/>
            ScrollAxisBase has support for frozen header and footer lines, maintaining a
            scroll position and updating and listening to scrollbars. It also maintains
            a collection of <see cref="T:Syncfusion.WinForms.GridCommon.ScrollAxis.VisibleLineInfo"/> items for all the lines that are
            visible in the viewing area. ScrollAxisBase wires itself with a 
            <see cref="P:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollAxisBase.ScrollLinesHost"/> and reacts to changes in line count,
            line sizes, hidden state and default line size.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollAxisBase.#ctor(Syncfusion.WinForms.GridCommon.ScrollAxis.IScrollBar,Syncfusion.WinForms.GridCommon.ScrollAxis.ILineSizeHost)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollAxisBase"/> class.
            </summary>
            <param name="sb">The sb.</param>
            <param name="scrollLinesHost">The scroll lines host.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollAxisBase.Dispose">
            <summary>
            Call the Dispose and SuppressFinalize method for dipose the instance of <see cref="T:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollAxisBase"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollAxisBase.Dispose(System.Boolean)">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
            <param name="disposing">Dispose the instance, if it is True</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollAxisBase.UpdateScrollBar">
            <summary>
            Updates the scroll bar.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollAxisBase.SetLineHiddenState(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Sets the hidden state of the lines.
            </summary>
            <param name="from">From.</param>
            <param name="to">To.</param>
            <param name="hide">if set to <c>true</c> [hide].</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollAxisBase.SetLineSize(System.Int32,System.Int32,System.Double)">
            <summary>
            Sets the size of the lines.
            </summary>
            <param name="from">From.</param>
            <param name="to">To.</param>
            <param name="size">The size.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollAxisBase.GetLineSize(System.Int32,System.Int32@)">
            <summary>
            Gets size from ScrollLinesHost or if the line is being resized then get temporary value
            previously set with <see cref="M:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollAxisBase.SetLineResize(System.Int32,System.Double)"/>
            </summary>
            <param name="index">The index.</param>
            <param name="repeatSizeCount">The number of subsequent values with same size.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollAxisBase.GetLineSize(System.Int32)">
            <summary>
            Gets the size of the line.
            </summary>
            <param name="index">The index.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollAxisBase.SetLineResize(System.Int32,System.Double)">
            <summary>
            Set temporary value for a line size during a resize operation without commiting
            value to SrollLinesHost.
            </summary>
            <param name="index">The index.</param>
            <param name="size">The size.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollAxisBase.ResetLineResize">
            <summary>
            Resets temporary value for line size after a resize operation 
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollAxisBase.GetScrollLinesHostSize(System.Int32,System.Int32@)">
            <summary>
            Gets size from ScrollLinesHost or if the line is being resized then get temporary value
            previously set with <see cref="M:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollAxisBase.SetLineResize(System.Int32,System.Double)"/>. If size is negative then <see cref="P:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollAxisBase.DefaultLineSize"/> is returned.
            </summary>
            <param name="index">The index.</param>
            <param name="repeatSizeCount">The number of subsequent values with same size.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollAxisBase.OnLinesRemoved(System.Int32,System.Int32)">
            <summary>
            Called when lines were removed in ScrollLinesHost.
            </summary>
            <param name="removeAt">Index of the first removed line.</param>
            <param name="count">The count.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollAxisBase.OnLinesInserted(System.Int32,System.Int32)">
            <summary>
            Called when lines were inserted in ScrollLinesHost.
            </summary>
            <param name="insertAt">Index of the first inserted line.</param>
            <param name="count">The count.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollAxisBase.SetHeaderLineCount(System.Int32)">
            <summary>
            Sets the header line count.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollAxisBase.SetFooterLineCount(System.Int32)">
            <summary>
            Sets the footer line count.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollAxisBase.GetScrollLineIndex(System.Int32@,System.Double@,System.Boolean)">
            <summary>
            Gets the index of the scroll line.
            </summary>
            <param name="scrollLindeIndex">Index of the scroll linde.</param>
            <param name="scrollLineOffset">The scroll line offset.</param>
            <param name="isRightToLeft">The boolean value indicates the right to left mode. 
            And this boolean value considered only for the visible columns calculations.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollAxisBase.GetScrollLineIndex(System.Int32@,System.Double@)">
            <summary>
            Gets the index of the scroll line.
            </summary>
            <param name="scrollLindeIndex">Index of the scroll linde.</param>
            <param name="scrollLineOffset">The scroll line offset.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollAxisBase.SetScrollLineIndex(System.Int32,System.Double)">
            <summary>
            Sets the index of the scroll line.
            </summary>
            <param name="scrollLindeIndex">Index of the scroll linde.</param>
            <param name="scrollLineOffset">The scroll line offset.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollAxisBase.GetPreviousScrollLineIndex(System.Int32)">
            <summary>
            Gets the index of the previous scroll line.
            </summary>
            <param name="lineIndex">Index of the line.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollAxisBase.GetNextScrollLineIndex(System.Int32)">
            <summary>
            Gets the index of the next scroll line.
            </summary>
            <param name="lineIndex">Index of the line.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollAxisBase.ScrollToNextPage">
            <summary>
            Scrolls to next page.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollAxisBase.ScrollToPreviousPage">
            <summary>
            Scrolls to previous page.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollAxisBase.ScrollToNextLine">
            <summary>
            Scrolls to next line.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollAxisBase.ScrollToPreviousLine">
            <summary>
            Scrolls to previous line.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollAxisBase.AlignScrollLine">
            <summary>
            Aligns the scroll line.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollAxisBase.ScrollInView(System.Int32,System.Double,System.Boolean)">
            <summary>
            Scrolls the line into viewable area.
            </summary>
            <param name="lineIndex">Index of the line.</param>
            <param name="lineSize">Size of the line.</param>
            <param name="isRightToLeft">The boolean value indicates the right to left mode.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollAxisBase.ScrollInView(System.Int32,System.Boolean)">
            <summary>
            Scrolls the line into viewable area.
            </summary>
            <param name="lineIndex">Index of the line.</param>
            <param name="isRightToLeft">The boolean value indicates the right to left mode.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollAxisBase.ScrollInView(System.Int32,System.Double)">
            <summary>
            Scrolls the line into viewable area.
            </summary>
            <param name="lineIndex">Index of the line.</param>
            <param name="lineSize">Size of the line.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollAxisBase.ScrollInView(System.Int32)">
            <summary>
            Scrolls the line into viewable area.
            </summary>
            <param name="lineIndex">Index of the line.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollAxisBase.MouseWheel(System.Int32)">
            <summary>
            This method is called in response to a MouseWheel event.
            </summary>
            <param name="delta">The delta.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollAxisBase.MarkDirty">
            <summary>
            Force recalculation of visible lines and scrollbar properties
            next time GetVisibleLines is called.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollAxisBase.GetVisibleLines(System.Boolean)">
            <summary>
            Gets the visible lines collection
            </summary>
            <param name="isRightToLeft">The boolean value indicates the right to left mode.</param>
            <returns>Returns the visible lines collection.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollAxisBase.GetVisibleLines">
            <summary>
            Gets the visible lines collection
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollAxisBase.ResetVisibleLines">
            <summary>
            Resets the visible lines collection.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollAxisBase.VisiblePointToLineIndex(System.Double,System.Boolean)">
            <summary>
            Gets the visible line index for a point in the display.
            </summary>
            <param name="point">The point.</param>
            <param name="allowOutsideLines">Set this true if point can be below corner of last line.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollAxisBase.VisiblePointToLineIndex(System.Double)">
            <summary>
            Gets the visible line index for a point in the display.
            </summary>
            <param name="point">The point.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollAxisBase.GetVisibleLineAtPoint(System.Boolean,System.Double,System.Boolean)">
            <summary>
            Gets the visibles line for a point in the display.
            </summary>
            <param name="isRightToLeft">The boolean value indicates the right to left mode.
            <param name="point">The point.</param>
            <param name="allowOutSideLines">The boolean value used to calculate the value for outside the line.</param>        
            It is used to calculate the scroll columns based on the right to left mode.</param>
            <returns>Returns the visible line.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollAxisBase.GetVisibleLineAtPoint(System.Double,System.Boolean)">
            <summary>
            Gets the visibles line for a point in the display.
            </summary>
            <param name="point">The point.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollAxisBase.GetVisibleLineAtLineIndex(System.Int32)">
            <summary>
            Gets the visibles line that displays the line with the given absolut line index.
            </summary>
            <param name="lineIndex">Index of the line.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollAxisBase.GetVisibleLineAtLineIndex(System.Int32,System.Boolean)">
            <summary>
            Gets the visibles line that displays the line with the given absolut line index. If the
            line is outside the view and you specify allowCreateEmptyLineIfNotVisible then
            the method will create an empty line and initializes its LineIndex and LineSize.
            </summary>
            <param name="lineIndex">Index of the line.</param>
            <param name="allowCreateEmptyLineIfNotVisible">if set to <c>true</c> and if the
            line is outside the view then
            the method will create an empty line and initializes its LineIndex and LineSize.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollAxisBase.IsLineVisible(System.Int32)">
            <summary>
            Determines if the line with the given absolut line index is visible.
            </summary>
            <param name="lineIndex">Index of the line.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollAxisBase.AnyVisibleLines(System.Int32,System.Int32)">
            <summary>
            Determines if any of the lines with the given absolut line index are visible.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollAxisBase.GetOriginAndCornerOfBodyRegion(System.Double@,System.Double@)">
            <summary>
            Gets the origin and corner points of body region.
            </summary>
            <param name="origin">The origin.</param>
            <param name="corner">The corner.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollAxisBase.AdjustFooterExtentToAvoidGap(System.Double,System.Double)">
            <summary>
            Adjusts the footer extent to avoid gap between last visible line of body region
            and first line of footer in case the view is larger than the height/width of all
            lines.
            </summary>
            <param name="footerSize">Size of the footer.</param>
            <param name="arrangeSize">Size of the arrange.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollAxisBase.GetVisibleSection(System.Int32,System.Int32@,System.Int32@)">
            <summary>
            Return indexes for VisibleLinesCollection for area identified by section.
            </summary>
            <param name="section">0 - Header, 1 - Body, 2 - Footer</param>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollAxisBase.GetVisibleLinesRange(System.Int32)">
            <summary>
            Returns the first and last VisibleLine.LineIndex for area identified by section.
            </summary>
            <param name="section">0 - Header, 1 - Body, 2 - Footer</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollAxisBase.GetVisibleSection(Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollAxisRegion,System.Int32@,System.Int32@)">
            <summary>
            Return indexes for VisibleLinesCollection for area identified by section.
            </summary>
            <param name="section">0 - Header, 1 - Body, 2 - Footer</param>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollAxisBase.GetBorderRangeClipPoints(Syncfusion.WinForms.GridCommon.ScrollAxis.VisibleLineInfo,Syncfusion.WinForms.GridCommon.ScrollAxis.VisibleLineInfo)">
            <summary>
            Returns the clipping area for the specified visible lines. Only if <see cref="P:Syncfusion.WinForms.GridCommon.ScrollAxis.VisibleLineInfo.IsClippedOrigin"/> is true for
            first line or if <see cref="P:Syncfusion.WinForms.GridCommon.ScrollAxis.VisibleLineInfo.IsClippedCorner"/> is true for last line then the area will be clipped. Otherwise
            the whole area from 0 to <see cref="P:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollAxisBase.RenderSize"/> is returned.
            </summary>
            <param name="firstLine">The first line.</param>
            <param name="lastLine">The last line.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollAxisBase.GetLineNearCorner(System.Double,System.Double,System.Boolean)">
            <summary>
            Gets the line near the given corner point. Use this method for hit-testing row or 
            column lines for resizing cells.
            </summary>
            <param name="point">The point.</param>
            <param name="hitTestPrecision">The hit test precision in points.</param>
            <param name="isRightToLeft">The boolean value indicates the right to left mode.</param>
            <returns>Returns the visible line.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollAxisBase.GetLineNearCorner(System.Double,System.Double,Syncfusion.WinForms.GridCommon.ScrollAxis.CornerSide,System.Boolean)">
            <summary>
            Gets the line near the given corner point. Use this method for hit-testing row or 
            column lines for resizing cells.
            </summary>
            <param name="point">The point.</param>
            <param name="hitTestPrecision">The hit test precision in points.</param>
            <param name="side">The hit test corner.</param>
            <param name="isRightToLeft">The boolean value indicates the right to left mode.</param>
            <returns>Returns the visible line.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollAxisBase.GetLineNearCorner(System.Double,System.Double)">
            <summary>
            Gets the line near the given corner point. Use this method for hit-testing row or 
            column lines for resizing cells.
            </summary>
            <param name="point">The point.</param>
            <param name="hitTestPrecision">The hit test precision in points.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollAxisBase.GetLineNearCorner(System.Double,System.Double,Syncfusion.WinForms.GridCommon.ScrollAxis.CornerSide)">
            <summary>
            Gets the line near the given corner point. Use this method for hit-testing row or 
            column lines for resizing cells.
            </summary>
            <param name="point">The point.</param>
            <param name="hitTestPrecision">The hit test precision in points.</param>
            <param name="side">The hit test corner.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollAxisBase.GetLinesAndVisibility(System.Int32,System.Int32,System.Boolean,System.Boolean@,System.Boolean@,Syncfusion.WinForms.GridCommon.ScrollAxis.VisibleLineInfo@,Syncfusion.WinForms.GridCommon.ScrollAxis.VisibleLineInfo@)">
            <summary>
            Returns points for given absolut line indexes
            </summary>
            <param name="firstIndex">The first index.</param>
            <param name="lastIndex">The last index.</param>
            <param name="allowAdjust">if set to <c>true</c> return the first visible line if firstIndex
            is above viewable area or return last visible line if lastIndex is after viewable area
            (works also for header and footer).
            </param>
            <param name="firstVisible">if set to <c>true</c> indicates the line with index 
            firstIndex is visible in viewable area.</param>
            <param name="lastVisible">if set to <c>true</c> indicates the line with index 
            lastIndex is visible in viewable area..</param>
            <param name="firstLine">The first line or null if allowAdjust is false and line 
            is not in viewable area.</param>
            <param name="lastLine">The last line or null if allowAdjust is false and line 
            is not in viewable area.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollAxisBase.GetVisibleLinesClipPoints(System.Int32,System.Int32)">
            <summary>
            Gets the visible lines clip points (clipped origin of first line and clipped 
            corner of last line). If both lines are above or below viewable area an empty 
            span is returned. If lines are both above and below viewable are then the 
            range for all viewable lines is returned.
            </summary>
            <param name="firstIndex">The first index.</param>
            <param name="lastIndex">The last index.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollAxisBase.GetClipPoints(Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollAxisRegion)">
            <summary>
            Gets the clip points for a region.
            </summary>
            <param name="region">The region.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollAxisBase.RangeToRegionPoints(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Returns an array with 3 ranges indicating the first and last point for the given lines in each region.
            </summary>
            <param name="first">The index of the first line.</param>
            <param name="last">The index of the last line.</param>
            <param name="allowEstimatesForOutOfViewLines">if set to <c>true</c> allow estimates for out of view lines.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollAxisBase.RangeToPoints(Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollAxisRegion,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Returns the first and last point for the given lines in a region.
            </summary>
            <param name="region">The region.</param>
            <param name="first">The index of the first line.</param>
            <param name="last">The index of the last line.</param>
            <param name="allowEstimatesForOutOfViewLines">if set to <c>true</c> allow estimates for out of view lines.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollAxisBase.RaiseChanged(Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollChangedAction)">
            <summary>
            Raises the changed event.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollAxisBase.GetNextPage(System.Int32)">
            <summary>
            Determines the line one page down from the given line.
            </summary>
            <param name="lineIndex">The current line.</param>
            <returns>The line index of the line one page down</returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollAxisBase.GetPreviousPage(System.Int32)">
            <summary>
            Determines the line one page up from the given line.
            </summary>
            <param name="lineIndex">The current line.</param>
            <returns>The line index of the line one page up</returns>
        </member>
        <member name="E:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollAxisBase.Changed">
            <summary>
            Occurs when a property was changed.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollAxisBase.Distances">
            <summary>
            Gets the distances collection which is used internally
            for mapping from a point position to
            a line index and vice versa.
            </summary>
            <value>The distances collection.</value>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollAxisBase.IsPixelScroll">
            <summary>
            Gets a value indicating whether this axis supports pixel scrolling.
            </summary>
            <value>
            	<c>true</c> if this instance supports pixel scrolling; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollAxisBase.StartLineIndex">
            <summary>
            Gets or sets the index of the first line in a parent axis. This is used for shared 
            or nested scroll axis (e.g. a nested grid with shared axis in a covered cell).
            </summary>
            <value>The index of the first line..</value>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollAxisBase.ScrollBar">
            <summary>
            Gets the scroll bar state.
            </summary>
            <value>The scroll bar state.</value>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollAxisBase.LineCount">
            <summary>
            Gets or sets the line count.
            </summary>
            <value>The line count.</value>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollAxisBase.DefaultLineSize">
            <summary>
            Gets or sets the default size of lines.
            </summary>
            <value>The default size of lines.</value>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollAxisBase.ScrollLinesHost">
            <summary>
            Gets the scroll lines host.
            </summary>
            <value>The scroll lines host.</value>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollAxisBase.RenderSize">
            <summary>
            Gets or sets the size (either height or width) of the parent control.
            </summary>
            <value>The size of the the parent control.</value>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollAxisBase.ScrollPageSize">
            <summary>
            Gets the size (either height or width) of the parent control excluding the 
            area occupied by Header and Footer. This size is used for scrolling down
            or up one page.
            </summary>
            <value>The size of the the parent control.</value>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollAxisBase.Clip">
            <summary>
            Gets or sets the clipping region. Depending on the orientation of
            the axis, this is either the left and right or top and bottom
            values of the clipping rectangle in the parent control.
            </summary>
            <value>The clip.</value>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollAxisBase.ViewSize">
            <summary>
            Gets the view size of the (either height or width) of the parent control. Normally
            the ViewSize is the same as <see cref="P:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollAxisBase.RenderSize"/>. Only if the parent control
            has more space then needed to display all lines, the ViewSize will be less. In 
            such case the ViewSize is the total height for all lines.
            </summary>
            <value>The size of the view.</value>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollAxisBase.HeaderExtent">
            <summary>
            Gets the header extent. This is total height (or width) of the header lines.
            </summary>
            <value>The header extent.</value>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollAxisBase.HeaderLineCount">
            <summary>
            Gets the header line count.
            </summary>
            <value>The header line count.</value>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollAxisBase.FooterExtent">
            <summary>
            Gets the footer extent. This is total height (or width) of the footer lines.
            </summary>
            <value>The footer extent.</value>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollAxisBase.FooterLineCount">
            <summary>
            Gets the footer line count.
            </summary>
            <value>The footer line count.</value>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollAxisBase.ScrollLineIndex">
            <summary>
            Gets or sets the index of the first visible Line in the Body region.
            </summary>
            <value>The index of the scroll line.</value>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollAxisBase.ViewCorner">
            <summary>
            Gets the view corner which is the point after the last visible line
            of the body region.
            </summary>
            <value>The view corner.</value>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollAxisBase.IsFooterVisible">
            <summary>
            Gets a value indicating whether footer lines are visible.
            </summary>
            <value>
            	<c>true</c> if footer lines are visible; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollAxisBase.FirstFooterLineIndex">
            <summary>
            Gets the index of the first footer line.
            </summary>
            <value>The index of the first footer line.</value>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollAxisBase.LastBodyVisibleLine">
            <summary>
            Gets the last visible line.
            </summary>
            <value>The last visible line.</value>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollAxisBase.LastBodyVisibleLineIndex">
            <summary>
            Gets the index of the last visible line.
            </summary>
            <value>The index of the last visible line.</value>
        </member>
        <member name="F:Syncfusion.WinForms.GridCommon.ScrollAxis.LineScrollAxis.distances">
            <summary>
            distances holds the visible lines. Each visible line
            has a distance of 1.0. Hidden lines have a distance of 0.0.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.LineScrollAxis.#ctor(Syncfusion.WinForms.GridCommon.ScrollAxis.IScrollBar,Syncfusion.WinForms.GridCommon.ScrollAxis.ILineSizeHost)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.GridCommon.ScrollAxis.LineScrollAxis"/> class.
            </summary>
            <param name="sb">The state of the scrollbar.</param>
            <param name="scrollLinesHost">The scroll lines host.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.LineScrollAxis.UpdateDistances">
            <summary>
            Updates the linesize for visible lines to be "1" for LineScrollAxis
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.LineScrollAxis.SetHeaderLineCount(System.Int32)">
            <summary>
            Sets the header line count.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.LineScrollAxis.SetFooterLineCount(System.Int32)">
            <summary>
            Sets the footer line count.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.LineScrollAxis.GetScrollLineIndex(System.Int32@,System.Double@,System.Boolean)">
            <summary>
            Gets the index of the scroll line.
            </summary>
            <param name="scrollLindeIndex">Index of the scroll linde.</param>
            <param name="scrollLineDelta">The scroll line delta.</param>
            <param name="isRightToLeft">The boolean value used to calculate visible columns in right to left mode.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.LineScrollAxis.GetScrollLineIndex(System.Int32@,System.Double@)">
            <summary>
            Gets the index of the scroll line.
            </summary>
            <param name="scrollLindeIndex">Index of the scroll linde.</param>
            <param name="scrollLineDelta">The scroll line delta.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.LineScrollAxis.SetScrollLineIndex(System.Int32,System.Double)">
            <summary>
            Sets the index of the scroll line.
            </summary>
            <param name="scrollLindeIndex">Index of the scroll linde.</param>
            <param name="scrollLineDelta">The scroll line delta.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.LineScrollAxis.SetLineHiddenState(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Sets the hidden state of the lines.
            </summary>
            <param name="from">From.</param>
            <param name="to">To.</param>
            <param name="hide">if set to <c>true</c> [hide].</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.LineScrollAxis.SetLineSize(System.Int32,System.Int32,System.Double)">
            <summary>
            Sets the size of the lines. Will do nothing for a <see cref="T:Syncfusion.WinForms.GridCommon.ScrollAxis.LineScrollAxis"/>
            </summary>
            <param name="from">From.</param>
            <param name="to">To.</param>
            <param name="size">The size.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.LineScrollAxis.UpdateScrollBar">
            <summary>
            Initialize scrollbar properties from line count in header, footer and body.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.LineScrollAxis.GetPreviousScrollLineIndex(System.Int32)">
            <summary>
            Gets the index of the previous scroll line.
            </summary>
            <param name="index">The index.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.LineScrollAxis.GetNextScrollLineIndex(System.Int32)">
            <summary>
            Gets the index of the next scroll line.
            </summary>
            <param name="index">The index.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.LineScrollAxis.ScrollToNextPage">
            <summary>
            Scrolls to next page.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.LineScrollAxis.ScrollToPreviousPage">
            <summary>
            Scrolls to previous page.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.LineScrollAxis.ScrollToNextLine">
            <summary>
            Scrolls to next line.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.LineScrollAxis.ScrollToPreviousLine">
            <summary>
            Scrolls to previous line.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.LineScrollAxis.AlignScrollLine">
            <summary>
            Aligns the scroll line.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.LineScrollAxis.RangeToRegionPoints(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Returns an array with 3 ranges indicating the first and last point for the given lines in each region.
            </summary>
            <param name="first">The index of the first line.</param>
            <param name="last">The index of the last line.</param>
            <param name="allowEstimatesForOutOfViewLines">if set to <c>true</c> allow estimates for out of view lines.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.LineScrollAxis.RangeToPoints(Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollAxisRegion,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Returns the first and last point for the given lines in a region.
            </summary>
            <param name="region">The region.</param>
            <param name="first">The index of the first line.</param>
            <param name="last">The index of the last line.</param>
            <param name="allowEstimatesForOutOfViewLines">if set to <c>true</c> allow estimates for out of view lines.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.LineScrollAxis.MouseWheel(System.Int32)">
            <summary>
            This method is called in response to a MouseWheel event.
            </summary>
            <param name="delta">The delta.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.LineScrollAxis.ScrollInView(System.Int32,System.Double)">
            <summary>
            Scrolls the line into viewable area.
            </summary>
            <param name="lineIndex">Index of the line.</param>
            <param name="lineSize"></param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.LineScrollAxis.OnLinesInserted(System.Int32,System.Int32)">
            <summary>
            Called when lines were inserted in ScrollLinesHost.
            </summary>
            <param name="insertAt">Index of the first inserted line.</param>
            <param name="count">The count.</param>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.LineScrollAxis.LineCount">
            <summary>
            Gets or sets the line count.
            </summary>
            <value>The line count.</value>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.LineScrollAxis.DefaultLineSize">
            <summary>
            Gets or sets the default size of lines.
            </summary>
            <value>The default size of lines.</value>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.LineScrollAxis.HeaderExtent">
            <summary>
            Gets the header extent. This is total height (or width) of the header lines.
            </summary>
            <value>The header extent.</value>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.LineScrollAxis.FooterExtent">
            <summary>
            Gets the footer extent. This is total height (or width) of the footer lines.
            </summary>
            <value>The footer extent.</value>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.LineScrollAxis.ScrollLineIndex">
            <summary>
            Gets or sets the index of the first visible Line in the Body region.
            </summary>
            <value>The index of the scroll line.</value>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.LineScrollAxis.ViewSize">
            <summary>
            Gets the view size of the (either height or width) of the parent control. Normally
            the ViewSize is the same as <see cref="P:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollAxisBase.RenderSize"/>. Only if the parent control
            has more space then needed to display all lines, the ViewSize will be less. In
            such case the ViewSize is the total height for all lines.
            </summary>
            <value>The size of the view.</value>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.LineScrollAxis.IsPixelScroll">
            <summary>
            Gets a value indicating whether this axis supports pixel scrolling.
            </summary>
            <value>
            	<c>true</c> if this instance supports pixel scrolling; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Syncfusion.WinForms.GridCommon.ScrollAxis.LineSizeCollection">
            <summary>
            A collection that manages lines with varying height and hidden state. 
            It has properties for header and footer lines, total line count, default
            size of a line and also lets you add nested collections.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.GridCommon.ScrollAxis.LineSizeCollection.Empty">
            <summary>
            Returns an empty collection.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.LineSizeCollection.SetRange(System.Int32,System.Int32,System.Double)">
            <summary>
            Sets the line size for a range.
            </summary>
            <param name="from">From.</param>
            <param name="to">To.</param>
            <param name="size">The size.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.LineSizeCollection.SetHidden(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Sets the hidden state for a range of lines.
            </summary>
            <param name="from">From.</param>
            <param name="to">To.</param>
            <param name="hide">if set to <c>true</c> hide the lines.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.LineSizeCollection.GetNestedLines(System.Int32)">
            <summary>
            Gets the nested lines.
            </summary>
            <param name="index">The index.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.LineSizeCollection.SetNestedLines(System.Int32,Syncfusion.WinForms.GridCommon.ScrollAxis.IEditableLineSizeHost)">
            <summary>
            Sets the nested lines. 
            </summary>
            <param name="index">The index.</param>
            <param name="nestedLines">The nested lines. If parameter is null the line will be converted to a normal (not nested) line with default line size.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.LineSizeCollection.ResetNestedLines">
            <summary>
            Reset the line to become a normal (not nested) line with default line size.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.LineSizeCollection.ResetNestedLines(System.Int32)">
            <summary>
            Reset the line to become a normal (not nested) line with default line size.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.LineSizeCollection.GetDefaultLineSize">
            <summary>
            Returns the default line size.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.LineSizeCollection.GetLineCount">
            <summary>
            Returns the line count.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.LineSizeCollection.GetSize(System.Int32,System.Int32@)">
            <summary>
            Gets the size.
            </summary>
            <param name="index">The index.</param>
            <param name="repeatValueCount">The number of subsequent values with same size.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.LineSizeCollection.GetHeaderLineCount">
            <summary>
            Gets the header line count.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.LineSizeCollection.GetFooterLineCount">
            <summary>
            Gets the footer line count.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.LineSizeCollection.GetHidden(System.Int32,System.Int32@)">
            <summary>
            Gets the hidden state for a line.
            </summary>
            <param name="index">The index.</param>
            <param name="repeatValueCount">The number of subsequent lines with same state.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.LineSizeCollection.InitializeScrollAxis(Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollAxisBase)">
            <summary>
            Initializes the scroll axis.
            </summary>
            <param name="scrollAxis">The scroll axis.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.LineSizeCollection.GetDistances(System.Int32)">
            <summary>
            Gets the nested distances if a line contains a nested lines collection; null otherwise.
            </summary>
            <param name="line">The line.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.LineSizeCollection.InsertLines(System.Int32,System.Int32)">
            <summary>
            Inserts lines in the collection and raises the <see cref="E:Syncfusion.WinForms.GridCommon.ScrollAxis.LineSizeCollection.LinesInserted"/> event.
            </summary>
            <param name="insertAtLine">The index of the first line to insert.</param>
            <param name="count">The count.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.LineSizeCollection.InsertLines(System.Int32,System.Int32,Syncfusion.WinForms.GridCommon.ScrollAxis.IEditableLineSizeHost)">
            <summary>
            Inserts lines in the collection and raises the <see cref="E:Syncfusion.WinForms.GridCommon.ScrollAxis.LineSizeCollection.LinesInserted"/> event.
            </summary>
            <param name="insertAtLine">The index of the first line to insert.</param>
            <param name="count">The count.</param>
            <param name="movelines">A container with saved state from a preceeding call when lines should be moved. When it is null empty lines with default size are inserted.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.LineSizeCollection.RemoveLines(System.Int32,System.Int32)">
            <summary>
            Removes lines from the collection and raises the <see cref="E:Syncfusion.WinForms.GridCommon.ScrollAxis.LineSizeCollection.LinesRemoved"/> event.
            </summary>
            <param name="removeAtLine">The index of the first line to be removed.</param>
            <param name="count">The count.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.LineSizeCollection.RemoveLines(System.Int32,System.Int32,Syncfusion.WinForms.GridCommon.ScrollAxis.IEditableLineSizeHost)">
            <summary>
            Removes lines from the collection and raises the <see cref="E:Syncfusion.WinForms.GridCommon.ScrollAxis.LineSizeCollection.LinesRemoved"/> event.
            </summary>
            <param name="removeAtLine">The index of the first line to be removed.</param>
            <param name="count">The count.</param>
            <param name="movelines">A container to save state for a subsequent call when lines should be moved.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.LineSizeCollection.CreateMoveLines">
            <summary>
            Creates the object which holds temporary state when moving lines.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.LineSizeCollection.SetHiddenInterval(System.Int32,System.Int32,System.Boolean[])">
            <summary>
            Initialize the collection with a pattern of hidden lines. 
            </summary>
            <param name="start">The index of the first line where the pattern should be
            started to be applied.</param>
            <param name="lineCount">The pattern is applied up to until the lineCount given. 
            The last initialized line is at index lineCount-1.</param>
            <param name="values">The pattern that is applied repeatedly.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.LineSizeCollection.SetHiddenState(System.Boolean[])">
            <summary>
            Set the hidden state all at once in one operation. Use this method if you want to change the hidden
            state of many rows at once since this will be much faster instead of individually setting rows hidden.
            </summary>
            <param name="values">The new hidden state for rows. </param>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.LineSizeCollection.TotalExtent">
            <summary>
            Gets the total extent which is the total of all line sizes. Note: This propert only 
            works if the DistanceCollection has been setup for pixel scrolling; otherwise it returns
            double.NaN.
            </summary>
            <value>The total extent or double.NaN.</value>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.LineSizeCollection.HeaderLineCount">
            <summary>
            Gets or sets the header line count.
            </summary>
            <value>The header line count.</value>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.LineSizeCollection.FooterLineCount">
            <summary>
            Gets or sets the footer line count.
            </summary>
            <value>The footer line count.</value>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.LineSizeCollection.LineCount">
            <summary>
            Gets or sets the line count.
            </summary>
            <value>The line count.</value>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.LineSizeCollection.DefaultLineSize">
            <summary>
            Gets or sets the default size of lines.
            </summary>
            <value>The default size of lines.</value>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.LineSizeCollection.Item(System.Int32)">
            <summary>
            Gets or sets the line size at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.LineSizeCollection.SupportsNestedLines">
            <summary>
            Gets whether the host supports nesting.
            </summary>
            <value></value>
        </member>
        <member name="E:Syncfusion.WinForms.GridCommon.ScrollAxis.LineSizeCollection.LineSizeChanged">
            <summary>
            Occurs when a lines size was changed.
            </summary>
        </member>
        <member name="E:Syncfusion.WinForms.GridCommon.ScrollAxis.LineSizeCollection.LineHiddenChanged">
            <summary>
            Occurs when a lines hidden state changed.
            </summary>
        </member>
        <member name="E:Syncfusion.WinForms.GridCommon.ScrollAxis.LineSizeCollection.DefaultLineSizeChanged">
            <summary>
            Occurs when the default line size changed.
            </summary>
        </member>
        <member name="E:Syncfusion.WinForms.GridCommon.ScrollAxis.LineSizeCollection.LineCountChanged">
            <summary>
            Occurs when the line count was changed.
            </summary>
        </member>
        <member name="E:Syncfusion.WinForms.GridCommon.ScrollAxis.LineSizeCollection.HeaderLineCountChanged">
            <summary>
            Occurs when the header line count was changed.
            </summary>
        </member>
        <member name="E:Syncfusion.WinForms.GridCommon.ScrollAxis.LineSizeCollection.FooterLineCountChanged">
            <summary>
            Occurs when the footer line count was changed.
            </summary>
        </member>
        <member name="E:Syncfusion.WinForms.GridCommon.ScrollAxis.LineSizeCollection.LinesInserted">
            <summary>
            Occurs when lines were inserted.
            </summary>
        </member>
        <member name="E:Syncfusion.WinForms.GridCommon.ScrollAxis.LineSizeCollection.LinesRemoved">
            <summary>
            Occurs when lines were removed.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.LineSizeCollection.Distances">
            <summary>
            Gets or sets the distances.
            </summary>
            <value>The distances.</value>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.LineSizeCollection.SupportsInsertRemove">
            <summary>
            Gets whether the host supports inserting and removing lines.
            </summary>
            <value></value>
        </member>
        <member name="T:Syncfusion.WinForms.GridCommon.ScrollAxis.EmptyLineSizeCollection">
            <summary>
            An empty LineSizeCollection.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.GridCommon.ScrollAxis.EmptyLineSizeCollection.Empty">
            <summary>
            Returns an empty collection.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.GridCommon.ScrollAxis.PixelScrollAxis">
            <summary>
            PixelScrollAxis implements scrolling logic for both horizontal and vertical 
            scrolling in a <see cref="T:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollAxisBase"/>.
            Logical units in the ScrollAxisBase are called "Lines".
            <para/>
            PixelScrollAxis supports pixel scrolling and calculates the total height or
            width of all lines.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.GridCommon.ScrollAxis.PixelScrollAxis.headerExtent">
            <summary>
            Distances holds the line sizes. Hidden lines
            have a distance of 0.0. 
            </summary>        
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.PixelScrollAxis.#ctor(Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollAxisBase,Syncfusion.WinForms.GridCommon.ScrollAxis.IScrollBar,Syncfusion.WinForms.GridCommon.ScrollAxis.ILineSizeHost,Syncfusion.WinForms.GridCommon.ScrollAxis.IDistancesHost)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.GridCommon.ScrollAxis.PixelScrollAxis"/> class which 
            is nested as a single line in a parent scroll axis.
            </summary>
            <param name="parentScrollAxis">The parent scroll axis.</param>
            <param name="sb">The scrollbar state.</param>
            <param name="scrollLinesHost">The scroll lines host.</param>
            <param name="distancesHost">The distances host.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.PixelScrollAxis.#ctor(Syncfusion.WinForms.GridCommon.ScrollAxis.IScrollBar,Syncfusion.WinForms.GridCommon.ScrollAxis.ILineSizeHost,Syncfusion.WinForms.GridCommon.ScrollAxis.IDistancesHost)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.GridCommon.ScrollAxis.PixelScrollAxis"/> class.
            </summary>
            <param name="sb">The scrollbar state.</param>
            <param name="scrollLinesHost">The scroll lines host.</param>
            <param name="distancesHost">The distances host.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.PixelScrollAxis.SetLineHiddenState(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Sets the hidden state of the lines.
            </summary>
            <param name="from">From.</param>
            <param name="to">To.</param>
            <param name="hide">if set to <c>true</c> hide lines.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.PixelScrollAxis.SetLineSize(System.Int32,System.Int32,System.Double)">
            <summary>
            Sets the size of the lines.
            </summary>
            <param name="from">From.</param>
            <param name="to">To.</param>
            <param name="size">The size.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.PixelScrollAxis.SetLineResize(System.Int32,System.Double)">
            <summary>
            Set temporary value for a line size during a resize operation without commiting
            value to SrollLinesHost.
            </summary>
            <param name="index">The index.</param>
            <param name="size">The size.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.PixelScrollAxis.ResetLineResize">
            <summary>
            Resets temporary value for line size after a resize operation
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.PixelScrollAxis.SetHeaderLineCount(System.Int32)">
            <summary>
            Sets the header line count.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.PixelScrollAxis.SetFooterLineCount(System.Int32)">
            <summary>
            Sets the footer line count.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.PixelScrollAxis.UpdateScrollBar">
            <summary>
            Initialize scrollbar properties from header and footer size and total size of lines in body.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.PixelScrollAxis.GetScrollLineIndex(System.Int32@,System.Double@,System.Boolean)">
            <summary>
            Gets the index of the scroll line.
            </summary>
            <param name="scrollLindeIndex">Index of the scroll linde.</param>
            <param name="scrollLineDelta">The scroll line offset.</param>
            <param name="isRightToLeft">The boolean value indicates the right to left mode.
            And this boolean value considered only for the visible columns calculations.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.PixelScrollAxis.GetScrollLineIndex(System.Int32@,System.Double@)">
            <summary>
            Gets the index of the scroll line.
            </summary>
            <param name="scrollLindeIndex">Index of the scroll linde.</param>
            <param name="scrollLineDelta">The scroll line delta.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.PixelScrollAxis.SetScrollLineIndex(System.Int32,System.Double)">
            <summary>
            Sets the index of the scroll line.
            </summary>
            <param name="scrollLindeIndex">Index of the scroll linde.</param>
            <param name="scrollLineDelta">The scroll line delta.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.PixelScrollAxis.GetPreviousScrollLineIndex(System.Int32)">
            <summary>
            Gets the index of the previous scroll line.
            </summary>
            <param name="index">The index.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.PixelScrollAxis.GetNextScrollLineIndex(System.Int32)">
            <summary>
            Gets the index of the next scroll line.
            </summary>
            <param name="index">The index.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.PixelScrollAxis.ScrollToNextPage">
            <summary>
            Scrolls to next page.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.PixelScrollAxis.ScrollToPreviousPage">
            <summary>
            Scrolls to previous page.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.PixelScrollAxis.ScrollToNextLine">
            <summary>
            Scrolls to next line.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.PixelScrollAxis.ScrollToPreviousLine">
            <summary>
            Scrolls to previous line.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.PixelScrollAxis.AlignScrollLine">
            <summary>
            Aligns the scroll line.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.PixelScrollAxis.SetNestedLines(System.Int32,Syncfusion.WinForms.GridCommon.ScrollAxis.IDistanceCounterCollection)">
            <summary>
            Associates a collection of nested lines with a line in this axis.
            </summary>
            <param name="index">The index.</param>
            <param name="nestedLines">The nested lines.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.PixelScrollAxis.RangeToRegionPoints(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Returns an array with 3 ranges indicating the first and last point for the given lines in each region.
            </summary>
            <param name="first">The index of the first line.</param>
            <param name="last">The index of the last line.</param>
            <param name="allowEstimatesForOutOfViewLines">if set to <c>true</c> allow estimates for out of view lines.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.PixelScrollAxis.RangeToPoints(Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollAxisRegion,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Returns the first and last point for the given lines in a region.
            </summary>
            <param name="region">The region.</param>
            <param name="first">The index of the first line.</param>
            <param name="last">The index of the last line.</param>
            <param name="allowEstimatesForOutOfViewLines">if set to <c>true</c> allow estimates for out of view lines.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.PixelScrollAxis.GetCumulatedOrigin(Syncfusion.WinForms.GridCommon.ScrollAxis.VisibleLineInfo)">
            <summary>
            Gets the cumulated origin taking scroll position into account. The
            returned value is between ScrollBar.Minimum and ScrollBar.Maximum.
            </summary>
            <param name="line">The line.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.PixelScrollAxis.GetCumulatedCorner(Syncfusion.WinForms.GridCommon.ScrollAxis.VisibleLineInfo)">
            <summary>
            Gets the cumulated corner taking scroll position into account. The
            returned value is between ScrollBar.Minimum and ScrollBar.Maximum.
            </summary>
            <param name="line">The line.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.PixelScrollAxis.MouseWheel(System.Int32)">
            <summary>
            This method is called in response to a MouseWheel event.
            </summary>
            <param name="delta">The delta.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.PixelScrollAxis.ScrollInView(System.Int32,System.Double,System.Boolean)">
            <summary>
            Scrolls the line into viewable area.
            </summary>
            <param name="lineIndex">Index of the line.</param>
            <param name="lineSize">Size of the line.</param>
            <param name="isRightToLeft">The boolean value used to calculate the scrolling delta value.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.PixelScrollAxis.ScrollInView(System.Int32,System.Double)">
            <summary>
            Scrolls the line into viewable area.
            </summary>
            <param name="lineIndex">Index of the line.</param>
            <param name="lineSize">Size of the line.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.PixelScrollAxis.OnLinesRemoved(System.Int32,System.Int32)">
            <summary>
            Called when lines were removed in ScrollLinesHost.
            </summary>
            <param name="removeAt">Index of the first removed line.</param>
            <param name="count">The count.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.PixelScrollAxis.OnLinesInserted(System.Int32,System.Int32)">
            <summary>
            Called when lines were inserted in ScrollLinesHost.
            </summary>
            <param name="insertAt">Index of the first inserted line.</param>
            <param name="count">The count.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.PixelScrollAxis.Dispose(System.Boolean)">
            <summary>
            Dispose the live resources used by the <see cref="T:Syncfusion.WinForms.GridCommon.ScrollAxis.PixelScrollAxis"/> class.
            </summary>
            <param name="disposing">Dispose the instance, if it is True</param>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.PixelScrollAxis.IsPixelScroll">
            <summary>
            Gets a value indicating whether this axis supports pixel scrolling.
            </summary>
            <value>
            	<c>true</c> if this instance supports pixel scrolling; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.PixelScrollAxis.TotalExtent">
            <summary>
            Gets the total extent of all line sizes.
            </summary>
            <value>The total extent.</value>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.PixelScrollAxis.LineCount">
            <summary>
            Gets or sets the line count.
            </summary>
            <value>The line count.</value>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.PixelScrollAxis.DefaultLineSize">
            <summary>
            Gets or sets the default size of lines.
            </summary>
            <value>The default size of lines.</value>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.PixelScrollAxis.HeaderExtent">
            <summary>
            Gets the header extent. This is total height (or width) of the header lines.
            </summary>
            <value>The header extent.</value>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.PixelScrollAxis.FooterExtent">
            <summary>
            Gets the footer extent. This is total height (or width) of the footer lines.
            </summary>
            <value>The footer extent.</value>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.PixelScrollAxis.ScrollLineIndex">
            <summary>
            Gets or sets the index of the first visible Line in the Body region.
            </summary>
            <value>The index of the scroll line.</value>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.PixelScrollAxis.ViewSize">
            <summary>
            Gets the view size of the (either height or width) of the parent control. Normally
            the ViewSize is the same as <see cref="P:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollAxisBase.RenderSize"/>. Only if the parent control
            has more space then needed to display all lines, the ViewSize will be less. In
            such case the ViewSize is the total height for all lines.
            </summary>
            <value>The size of the view.</value>
        </member>
        <member name="T:Syncfusion.WinForms.GridCommon.ScrollAxis.RangeChangedEventHandler">
            <summary>
            Handles events with <see cref="T:Syncfusion.WinForms.GridCommon.ScrollAxis.RangeChangedEventArgs"/>.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:Syncfusion.WinForms.GridCommon.ScrollAxis.RangeChangedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.WinForms.GridCommon.ScrollAxis.RangeChangedEventArgs">
            <summary>
            Holds <see cref="P:Syncfusion.WinForms.GridCommon.ScrollAxis.RangeChangedEventArgs.From"/> and <see cref="P:Syncfusion.WinForms.GridCommon.ScrollAxis.RangeChangedEventArgs.To"/> integer properties.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.RangeChangedEventArgs.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.GridCommon.ScrollAxis.RangeChangedEventArgs"/> class.
            </summary>
            <param name="from">From.</param>
            <param name="to">To.</param>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.RangeChangedEventArgs.From">
            <summary>
            Gets from.
            </summary>
            <value>From.</value>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.RangeChangedEventArgs.To">
            <summary>
            Gets to.
            </summary>
            <value>To.</value>
        </member>
        <member name="T:Syncfusion.WinForms.GridCommon.ScrollAxis.LinesRemovedEventHandler">
            <summary>
            Handles events with <see cref="T:Syncfusion.WinForms.GridCommon.ScrollAxis.LinesRemovedEventArgs"/>.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:Syncfusion.WinForms.GridCommon.ScrollAxis.LinesRemovedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.WinForms.GridCommon.ScrollAxis.LinesRemovedEventArgs">
            <summary>
            Holds <see cref="P:Syncfusion.WinForms.GridCommon.ScrollAxis.LinesRemovedEventArgs.RemoveAt"/> and <see cref="P:Syncfusion.WinForms.GridCommon.ScrollAxis.LinesRemovedEventArgs.Count"/> integer properties.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.LinesRemovedEventArgs.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.GridCommon.ScrollAxis.LinesRemovedEventArgs"/> class.
            </summary>
            <param name="removeAt">RemoveAt.</param>
            <param name="count">Count.</param>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.LinesRemovedEventArgs.RemoveAt">
            <summary>
            Gets removeAt.
            </summary>
            <value>RemoveAt.</value>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.LinesRemovedEventArgs.Count">
            <summary>
            Gets count.
            </summary>
            <value>Count.</value>
        </member>
        <member name="T:Syncfusion.WinForms.GridCommon.ScrollAxis.LinesInsertedEventHandler">
            <summary>
            Handles events with <see cref="T:Syncfusion.WinForms.GridCommon.ScrollAxis.LinesInsertedEventArgs"/>.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:Syncfusion.WinForms.GridCommon.ScrollAxis.LinesInsertedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.WinForms.GridCommon.ScrollAxis.LinesInsertedEventArgs">
            <summary>
            Holds <see cref="P:Syncfusion.WinForms.GridCommon.ScrollAxis.LinesInsertedEventArgs.InsertAt"/> and <see cref="P:Syncfusion.WinForms.GridCommon.ScrollAxis.LinesInsertedEventArgs.Count"/> integer properties.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.LinesInsertedEventArgs.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.GridCommon.ScrollAxis.LinesInsertedEventArgs"/> class.
            </summary>
            <param name="insertAt">InsertAt.</param>
            <param name="count">Count.</param>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.LinesInsertedEventArgs.InsertAt">
            <summary>
            Gets insertAt.
            </summary>
            <value>InsertAt.</value>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.LinesInsertedEventArgs.Count">
            <summary>
            Gets count.
            </summary>
            <value>Count.</value>
        </member>
        <member name="T:Syncfusion.WinForms.GridCommon.ScrollAxis.HiddenRangeChangedEventHandler">
            <summary>
            Handles events with <see cref="T:Syncfusion.WinForms.GridCommon.ScrollAxis.HiddenRangeChangedEventArgs"/>.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:Syncfusion.WinForms.GridCommon.ScrollAxis.HiddenRangeChangedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.WinForms.GridCommon.ScrollAxis.HiddenRangeChangedEventArgs">
            <summary>
            Holds <see cref="P:Syncfusion.WinForms.GridCommon.ScrollAxis.HiddenRangeChangedEventArgs.From"/> and <see cref="P:Syncfusion.WinForms.GridCommon.ScrollAxis.HiddenRangeChangedEventArgs.To"/> integer properties.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.HiddenRangeChangedEventArgs.#ctor(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.GridCommon.ScrollAxis.RangeChangedEventArgs"/> class.
            </summary>
            <param name="from">From.</param>
            <param name="to">To.</param>
            <param name="hide">true or false</param>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.HiddenRangeChangedEventArgs.From">
            <summary>
            Gets from.
            </summary>
            <value>From.</value>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.HiddenRangeChangedEventArgs.To">
            <summary>
            Gets to.
            </summary>
            <value>To.</value>
        </member>
        <member name="T:Syncfusion.WinForms.GridCommon.ScrollAxis.RowColumnIndex">
            <summary>
            Holds the coordinates for a cell. 
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.RowColumnIndex.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.WinForms.GridCommon.ScrollAxis.RowColumnIndex"/> with row and column coordinates.
            </summary>
            <param name="r">The row index.</param>
            <param name="c">The column index.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.RowColumnIndex.Equals(System.Object)">
            <summary>
            Indicates whether this instance and a specified object are equal.
            </summary>
            <param name="obj">Another object to compare to.</param>
            <returns>
            true if <paramref name="obj"/> and this instance are the same type and represent the same value; otherwise, false.
            </returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.RowColumnIndex.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>
            A 32-bit signed integer that is the hash code for this instance.
            </returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.RowColumnIndex.ToString">
            <summary>
            Returns the type name with state of this instance.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.RowColumnIndex.op_Equality(Syncfusion.WinForms.GridCommon.ScrollAxis.RowColumnIndex,Syncfusion.WinForms.GridCommon.ScrollAxis.RowColumnIndex)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="r1">The r1.</param>
            <param name="r2">The r2.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.RowColumnIndex.op_Inequality(Syncfusion.WinForms.GridCommon.ScrollAxis.RowColumnIndex,Syncfusion.WinForms.GridCommon.ScrollAxis.RowColumnIndex)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="r1">The r1.</param>
            <param name="r2">The r2.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.RowColumnIndex.Empty">
            <summary>
            Gets the empty instance with RowIndex and ColumnIndex set to int.MinValue
            </summary>
            <value>The empty.</value>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.RowColumnIndex.IsEmpty">
            <summary>
            Gets a value indicating whether this instance is empty.
            </summary>
            <value><c>true</c> if this instance is empty; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.RowColumnIndex.ColumnIndex">
            <summary>
            The column index.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.RowColumnIndex.RowIndex">
            <summary>
            The row index.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.GridCommon.ScrollAxis.CornerSide">
            <summary>
            Corner side enumeration.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.GridCommon.ScrollAxis.CornerSide.Both">
            <summary>
            Includes both Left and right side or Top and Bottom side.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.GridCommon.ScrollAxis.CornerSide.Left">
            <summary>
            Left side alone.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.GridCommon.ScrollAxis.CornerSide.Right">
            <summary>
            Right side alone.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.GridCommon.ScrollAxis.CornerSide.Top">
            <summary>
            Top side alone.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.GridCommon.ScrollAxis.CornerSide.Bottom">
            <summary>
            Bottom side alone.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollAxisRegion">
            <summary>
            A scroll axis has three regions: Header, Body and Footer.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollAxisRegion.Header">
            <summary>
            The header (at top or left side)
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollAxisRegion.Body">
            <summary>
            The body (center between header and footer)
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollAxisRegion.Footer">
            <summary>
            The footer (at bottom or right side)
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollInfo">
            <summary>
            Provides all properties to configure a scrollbar.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollInfo.OnPropertyChanged(System.String)">
            <summary>
            Called when a property is changed and raises the <see cref="E:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollInfo.PropertyChanged"/> event.
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollInfo.CopyTo(Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollInfo)">
            <summary>
            Copies current settings to another object.
            </summary>
            <param name="sb">another object.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollInfo.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollInfo.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollInfo"/> is equal to the current <see cref="T:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollInfo"/>.
            </summary>
            <param name="obj">The <see cref="T:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollInfo"/> to compare with the current <see cref="T:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollInfo"/>.</param>
            <returns>
            true if the specified <see cref="T:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollInfo"/> is equal to the current <see cref="T:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollInfo"/>; otherwise, false.
            </returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollInfo.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>
            A hash code for the current <see cref="T:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollInfo"/>.
            </returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollInfo.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollInfo.Enabled">
            <summary>
            Gets or sets a number that represents the current position of the scroll box on the scroll bar control.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollInfo.LargeChange">
            <summary>
            Gets or sets a value to be added to or subtracted from the value of the property when the scroll box is moved a large distance.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollInfo.Maximum">
            <summary>
            Gets or sets the upper limit of values of the scrollable range.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollInfo.Minimum">
            <summary>
            Gets or sets the lower limit of values of the scrollable range.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollInfo.SmallChange">
            <summary>
            Gets or sets the value to be added to or subtracted from the value of the property when the scroll box is moved a small distance.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollInfo.Value">
            <summary>
            Gets or sets a numeric value that represents the current position of the scroll box on the scroll bar control.
            </summary>
        </member>
        <member name="E:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollInfo.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="E:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollInfo.ValueChanged">
            <summary>
             <para>Occurs when the <see cref="P:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollInfo.Value"/> property has changed.</para>
            </summary>
        </member>
        <member name="E:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollInfo.ValueChanging">
            <summary>
             <para>Occurs before the <see cref="P:Syncfusion.WinForms.GridCommon.ScrollAxis.ScrollInfo.Value"/> property is changed.</para>
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.GridCommon.ScrollAxis.ValueChangingEventHandler">
            <summary>
            Handles events with <see cref="T:Syncfusion.WinForms.GridCommon.ScrollAxis.ValueChangingEventArgs"/>.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:Syncfusion.WinForms.GridCommon.ScrollAxis.ValueChangingEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.WinForms.GridCommon.ScrollAxis.ValueChangingEventArgs">
            <summary>
            Holds <see cref="P:Syncfusion.WinForms.GridCommon.ScrollAxis.ValueChangingEventArgs.NewValue"/> and <see cref="P:Syncfusion.WinForms.GridCommon.ScrollAxis.ValueChangingEventArgs.OldValue"/> properties.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.ValueChangingEventArgs.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.GridCommon.ScrollAxis.ValueChangingEventArgs"/> class.
            </summary>
            <param name="newValue">NewValue.</param>
            <param name="oldValue">OldValue.</param>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.ValueChangingEventArgs.NewValue">
            <summary>
            Gets newValue.
            </summary>
            <value>NewValue.</value>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.ValueChangingEventArgs.OldValue">
            <summary>
            Gets oldValue.
            </summary>
            <value>OldValue.</value>
        </member>
        <member name="T:Syncfusion.WinForms.GridCommon.ScrollAxis.RangeValuePair`1">
            <summary>
            Holds a range together with a value assigned to the range.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.RangeValuePair`1.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.GridCommon.ScrollAxis.RangeValuePair`1"/> class.
            </summary>
            <param name="start">The start and end of the range.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.RangeValuePair`1.#ctor(System.Int32,System.Int32,`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.GridCommon.ScrollAxis.RangeValuePair`1"/> class.
            </summary>
            <param name="start">The start.</param>
            <param name="count">The count.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.RangeValuePair`1.CompareTo(System.Object)">
            <summary>
            Compares the current range with the range of the other object. The value is 
            ignored.
            </summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>
            A 32-bit signed integer that indicates the relative order of the objects being compared. The return value has these meanings: Value Meaning Less than zero This instance is less than <paramref name="obj"/>. Zero This instance is equal to <paramref name="obj"/>. Greater than zero This instance is greater than <paramref name="obj"/>.
            </returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.RangeValuePair`1.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> with state information about this object.
            </summary>
            <returns>
            Returns a <see cref="T:System.String"/> with state information about this object.
            </returns>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.RangeValuePair`1.Start">
            <summary>
            Gets or sets the start of the range.
            </summary>
            <value>The start.</value>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.RangeValuePair`1.Count">
            <summary>
            Gets or sets the count of the range.
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.RangeValuePair`1.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.RangeValuePair`1.End">
            <summary>
            Gets or sets the end of the range.
            </summary>
            <value>The end.</value>
        </member>
        <member name="T:Syncfusion.WinForms.GridCommon.ScrollAxis.SortedRangeValueList`1">
            <summary>
            A sorted list with <see cref="T:Syncfusion.WinForms.GridCommon.ScrollAxis.RangeValuePair`1"/> ordered by the
            start index of the ranges. SortedRangeValueList ensures that ranges 
            of the elements inside the list do not overlap and it also ensures
            that there are no empty gaps meaning that the subsequent range will
            always have the Start position be set to the End position of the previous
            range plus one.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.SortedRangeValueList`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.GridCommon.ScrollAxis.SortedRangeValueList`1"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.SortedRangeValueList`1.#ctor(`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.GridCommon.ScrollAxis.SortedRangeValueList`1"/> class.
            </summary>
            <param name="defaultValue">The default value used for filling gaps.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.SortedRangeValueList`1.GetRange(System.Int32,System.Int32@)">
            <summary>
            Gets a range that contains the specified index and also 
            returns a count indicating the delta between the index and the 
            end of the range.
            </summary>
            <param name="index">The index.</param>
            <param name="count">The count.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.SortedRangeValueList`1.Insert(System.Int32,System.Int32)">
            <summary>
            Inserts a range intialized with <see cref="P:Syncfusion.WinForms.GridCommon.ScrollAxis.SortedRangeValueList`1.DefaultValue"/> at
            the specified index. When necessary it splits a range and creates
            a new range value pair.
            </summary>
            <param name="insertAt">The insertion point.</param>
            <param name="count">The count.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.SortedRangeValueList`1.Insert(System.Int32,System.Int32,`0)">
            <summary>
            Inserts a range intialized with a given value at
            the specified index. When necessary it splits a range and creates
            a new range value pair.
            </summary>
            <param name="insertAt">The insertion point.</param>
            <param name="count">The count.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.SortedRangeValueList`1.Insert(System.Int32,System.Int32,Syncfusion.WinForms.GridCommon.ScrollAxis.SortedRangeValueList{`0})">
            <summary>
            Inserts a range intialized with <see cref="P:Syncfusion.WinForms.GridCommon.ScrollAxis.SortedRangeValueList`1.DefaultValue"/> at
            the specified index. When necessary it splits a range and creates
            a new range value pair.
            </summary>
            <param name="insertAt">The insertion point.</param>
            <param name="count">The count.</param>
            <param name="moveRanges">Allocate this object before a preceeding Remove call when moving ranges. 
            Otherwise specify null.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.SortedRangeValueList`1.Insert(System.Int32,System.Int32,`0,Syncfusion.WinForms.GridCommon.ScrollAxis.SortedRangeValueList{`0})">
            <summary>
            Inserts a range intialized with a given value at
            the specified index. When necessary it splits a range and creates
            a new range value pair.
            </summary>
            <param name="insertAt">The insertion point.</param>
            <param name="count">The count.</param>
            <param name="value">The value.</param>
            <param name="moveRanges">Allocate this object before a preceeding Remove call when moving ranges. 
            Otherwise specify null.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.SortedRangeValueList`1.Remove(System.Int32,System.Int32)">
            <summary>
            Removes a range at the specified index. When necessary ranges
            are merged when preceeding and subsquent ranges have the same
            value.
            </summary>
            <param name="removeAt">The index for the range to be removed.</param>
            <param name="count">The count.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.SortedRangeValueList`1.Remove(System.Int32,System.Int32,Syncfusion.WinForms.GridCommon.ScrollAxis.SortedRangeValueList{`0})">
            <summary>
            Removes a range at the specified index. When necessary ranges
            are merged when preceeding and subsquent ranges have the same
            value.
            </summary>
            <param name="removeAt">The index for the range to be removed.</param>
            <param name="count">The count.</param>
            <param name="moveRanges">Allocate this object before a Remove call when moving ranges
            and pass it to a subsequent Insert call. Otherwise specify null.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.SortedRangeValueList`1.SetRange(System.Int32,System.Int32,`0)">
            <summary>
            Sets the value for a range at the specified index. When necessary ranges
            are split or merged to make sure integrity of the list is maintained.
            (SortedRangeValueList ensures that ranges
            of the elements inside the list do not overlap and it also ensures
            that there are no empty gaps meaning that the subsequent range will
            always have the Start position be set to the End position of the previous
            range plus one.)
            </summary>
            <param name="index">The index for the range to be changed.</param>
            <param name="count">The count.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.SortedRangeValueList`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.SortedRangeValueList`1.System#Collections#Generic#IEnumerable{Syncfusion#WinForms#GridCommon#ScrollAxis#RangeValuePair{T}}#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A enumerator that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.SortedRangeValueList`1.DefaultValue">
            <summary>
            Gets or sets the default value used for filling gaps.
            </summary>
            <value>The default value.</value>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.SortedRangeValueList`1.Count">
            <summary>
            Gets the count which is the same as the end position of
            the last range.
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.SortedRangeValueList`1.Item(System.Int32)">
            <summary>
            Gets the value of the range that contains the specified index
            or changes the value of the range. When necessary it splits a range and creates
            a new range value pair to hold the new value for the specified index.
            </summary>
            <value></value>
        </member>
        <member name="T:Syncfusion.WinForms.GridCommon.ScrollAxis.VisibleLineInfo">
            <summary>
            Contains information about a visible line (can also be a row or column).
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.VisibleLineInfo.#ctor(System.Int32,System.Int32,System.Double,System.Double,System.Double,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.GridCommon.ScrollAxis.VisibleLineInfo"/> class.
            </summary>
            <param name="visibleIndex">Visible index of the line.</param>
            <param name="lineIndex">Absolute index of the line.</param>
            <param name="size">The size.</param>
            <param name="clippedOrigin">The clipped origin.</param>
            <param name="scrollOffset">The scroll offset.</param>
            <param name="isHeader">if set to <c>true</c> line is a header.</param>
            <param name="isFooter">if set to <c>true</c> line is a footer.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.VisibleLineInfo.#ctor(System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.GridCommon.ScrollAxis.VisibleLineInfo"/> class. Used for BinarySearch.
            </summary>
            <param name="clippedOrigin">The clipped origin.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.VisibleLineInfo.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.GridCommon.ScrollAxis.VisibleLineInfo"/> class. Used for BinarySearch.
            </summary>
            <param name="lineIndex">Index of the line.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.VisibleLineInfo.ToString">
            <summary>
            Returns the type name with state of this instance.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.VisibleLineInfo.CompareTo(Syncfusion.WinForms.GridCommon.ScrollAxis.VisibleLineInfo)">
            <summary>
            Compares the current object with another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
            A 32-bit signed integer that indicates the relative order of the objects being compared. The return value has the following meanings: Value Meaning Less than zero This object is less than the <paramref name="other"/> parameter.Zero This object is equal to <paramref name="other"/>. Greater than zero This object is greater than <paramref name="other"/>.
            </returns>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.VisibleLineInfo.VisibleIndex">
            <summary>
            Gets the visible index of the line.
            </summary>
            <value>The visible index of the line.</value>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.VisibleLineInfo.IsLastVisibleLine">
            <summary>
            Returns whether the line is last visible line.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.VisibleLineInfo.IsVisible">
            <summary>
            Determines if the line is visible.
            </summary>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.VisibleLineInfo.LineIndex">
            <summary>
            Gets the index of the line.
            </summary>
            <value>The index of the line.</value>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.VisibleLineInfo.Size">
            <summary>
            Gets the size.
            </summary>
            <value>The size.</value>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.VisibleLineInfo.ClippedSize">
            <summary>
            Gets the size of the clipped area.
            </summary>
            <value>The size of the clipped area.</value>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.VisibleLineInfo.Corner">
            <summary>
            Gets the corner.
            </summary>
            <value>The corner.</value>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.VisibleLineInfo.ClippedCorner">
            <summary>
            Gets the clipped corner.
            </summary>
            <value>The clipped corner.</value>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.VisibleLineInfo.ClippedOrigin">
            <summary>
            Gets the clipped origin.
            </summary>
            <value>The clipped origin.</value>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.VisibleLineInfo.Origin">
            <summary>
            Gets the origin.
            </summary>
            <value>The origin.</value>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.VisibleLineInfo.ScrollOffset">
            <summary>
            Gets the scroll offset.
            </summary>
            <value>The scroll offset.</value>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.VisibleLineInfo.ClippedCornerExtent">
            <summary>
            Gets the clipped corner extent.
            </summary>
            <value>The clipped corner extent.</value>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.VisibleLineInfo.IsClipped">
            <summary>
            Gets a value indicating whether this instance is clipped.
            </summary>
            <value>
            	<c>true</c> if this instance is clipped; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.VisibleLineInfo.IsClippedCorner">
            <summary>
            Gets a value indicating whether this instance corner is clipped.
            </summary>
            <value>
            	<c>true</c> if this instance corner is clipped; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.VisibleLineInfo.IsClippedOrigin">
            <summary>
            Gets a value indicating whether this instance origin is clipped.
            </summary>
            <value>
            	<c>true</c> if this instance origin is clipped; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.VisibleLineInfo.IsClippedBody">
            <summary>
            Determines whether this instance is clipped taking into consideration whether it is the the first or last visible line 
            and no clipping is needed for these cases.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.VisibleLineInfo.Region">
            <summary>
            Gets the axis region this line belongs to.
            </summary>
            <value>The axis region.</value>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.VisibleLineInfo.IsHeader">
            <summary>
            Gets a value indicating whether this instance is a header.
            </summary>
            <value><c>true</c> if this instance is a header; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.VisibleLineInfo.IsFooter">
            <summary>
            Gets a value indicating whether this instance is a footer.
            </summary>
            <value><c>true</c> if this instance is a footer; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Syncfusion.WinForms.GridCommon.ScrollAxis.VisibleLinesCollection">
            <summary>
            A strong-typed collection of <see cref="T:Syncfusion.WinForms.GridCommon.ScrollAxis.VisibleLineInfo"/> items.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.VisibleLinesCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.GridCommon.ScrollAxis.VisibleLinesCollection"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.VisibleLinesCollection.GetVisibleLineAtPoint(System.Double)">
            <summary>
            Gets the visible line at point.
            </summary>
            <param name="point">The point.</param>
            <returns>visible line at point.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.VisibleLinesCollection.Clear">
            <summary>
            Removes all elements from the collection.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.VisibleLinesCollection.GetVisibleLineAtLineIndex(System.Int32)">
            <summary>
            Gets the the visible line at line index.
            </summary>
            <param name="lineIndex">Index of the line.</param>
            <returns>visible line at line index.</returns>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.ScrollAxis.VisibleLinesCollection.GetVisibleLineNearLineIndex(System.Int32)">
            <summary>
            Gets the visible line for a line index. If the line specified
            line is hidden the next visible line is returned.
            </summary>
            <param name="lineIndex">Index of the line.</param>
            <returns>The first visible line for a line index that is not hidden.</returns>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.VisibleLinesCollection.VisibleLineIndexes">
            <summary>
            Gets the visible line indexes.
            </summary>
            <value>The visible line indexes.</value>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.VisibleLinesCollection.FirstBodyVisibleIndex">
            <summary>
            Gets the index of the first visible line in the body region.
            </summary>
            <value>The index of the first visible line in the body region.</value>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.VisibleLinesCollection.FirstFooterVisibleIndex">
            <summary>
            Gets the index of the first visible line in the footer region.
            </summary>
            <value>The index of the first visible line in the footer region.</value>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.ScrollAxis.VisibleLinesCollection.LastBodyVisibleIndex">
            <summary>
            Gets the index of the last visible line in the body region.
            </summary>
            <value>The index of the last visible line in the body region.</value>
        </member>
        <member name="T:Syncfusion.WinForms.GridCommon.Utility.NamespaceDoc">
            <summary>
            Contains the utlities used to maintain and perform common functionalities.
            </summary>
        </member>
        <member name="T:Syncfusion.WinForms.GridCommon.Utility.DoubleSpan">
            <summary>
            Holds a start and end value with double precision.
            </summary>
        </member>
        <member name="F:Syncfusion.WinForms.GridCommon.Utility.DoubleSpan.Empty">
            <summary>
            An empty object.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Utility.DoubleSpan.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.GridCommon.Utility.DoubleSpan"/> struct.
            </summary>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Utility.DoubleSpan.ToString">
            <summary>
            Returns a string with start and end values.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.Utility.DoubleSpan.IsEmpty">
            <summary>
            Gets a value indicating whether this instance is empty.
            </summary>
            <value><c>true</c> if this instance is empty; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.Utility.DoubleSpan.Start">
            <summary>
            Gets or sets the start.
            </summary>
            <value>The start.</value>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.Utility.DoubleSpan.End">
            <summary>
            Gets or sets the end.
            </summary>
            <value>The end.</value>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.Utility.DoubleSpan.Length">
            <summary>
            Gets or sets the length.
            </summary>
            <value>The length.</value>
        </member>
        <member name="T:Syncfusion.WinForms.GridCommon.Utility.Int32Span">
            <summary>
            Holds a start and end value with integer precision.
            </summary>
        </member>
        <member name="M:Syncfusion.WinForms.GridCommon.Utility.Int32Span.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.WinForms.GridCommon.Utility.Int32Span"/> struct.
            </summary>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.Utility.Int32Span.Start">
            <summary>
            Gets or sets the start.
            </summary>
            <value>The start.</value>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.Utility.Int32Span.End">
            <summary>
            Gets or sets the end.
            </summary>
            <value>The end.</value>
        </member>
        <member name="P:Syncfusion.WinForms.GridCommon.Utility.Int32Span.Count">
            <summary>
            Gets or sets the count (equals end - start + 1)
            </summary>
            <value>The count.</value>
        </member>
    </members>
</doc>
