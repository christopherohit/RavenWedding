<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAADO
        DQAAAk1TRnQBSQFMAgEBAwEAATABAAEwAQABEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEgBgABEGEAAQEDAgEDAwQBBgMFAQcDBQEHAwUBBwMFAQcDBAEGAwIBAwMAAQEMAAMD
        AQQDDwEUAx4BKwMkATUDHAEoAw0BEQMCAQMEAAMEAQYDEgEYAyABLgMjATQDGQEjAwoBDQMBAQJMAAMK
        AQ0DHwEtAVYBYQFxAeEBHQF/AcQB/gEJAYQB1QH/AQQBggHWAf8BBAGCAdQB/wEIAYEB0gH/ARkBfwHC
        Af4BPwFoAYwB8wMjATMDCgENEAADAgEDAwYBCAMNAREDFAEcAxoBJQMeASsDHgErAxoBJQMUARwDDQER
        AwYBCAMCAQMIAAMNARIDKAE8A0sBjgNSAakDRgGBAyMBNAMKAQ0DAQECAxABFQMwAUsBUAJPAZsBVAJS
        AaYDQAFxAx0BKgMHAQpIAANEAXkBJgFoAbkB+wEDAZAB6gH/AQABiAHeAf8BIwGrAv8BIwGrAv8BIwGr
        Av8BIwGrAv8BIwGrAv8BIwGrAv8BAQGEAdkB/wEFAYEB0wH/ATsBeAGxAfgDSAGDCAADAgEDAwcBCgMW
        AR8DLAFEAzwBZgNEAXwDSAGEA0gBhANEAXwDPAFmAywBRAMWAR8DBwEKAwIBAwQAAx0BKQFOAk0BlgGU
        AXIBSgHuAdYBqgFQAfsBjgF0AVEB6wFNAkwBkQMSARkDAwEEAx0BKQFVAlMBsAGtAYMBRAH0AdEBqQFN
        AfoBeQFjAVIB4gNCAXYDEAEWSAABKQF9AcYB/gGCAboB7gH/AQABkQHsAf8BPgG2Av8BGAGkAfsB/wEU
        AaIB+QH/AQ8BnwH4Af8BCwGbAfUB/wEQAZ8B9wH/AQ4BnAH1Af8BKAGsAf0B/wEIAYoB3gH/AYMBvAHv
        Af8BKgF3Ab8B/gcAAQEDBgEIAxsBJgM1AVcDSAGEA1UBtwNoAdsDmgHzA5UB8wNmAdoDVQG3A0gBhAM1
        AVcDGwEmAwYBCAMAAQEDMAFMAYIBZAFNAecB/wHMAVkC/wHiAWgC/wHfAWEB/wGiAXIBRgHxAxYBHwMD
        AQQDLgFIAeIBkAFAAf0B/wHTAV4C/wHkAWcC/wHWAVgB/wFrAVsBVQHYAxQBHEgAASsBdgG9AfwBcgGz
        AeoB/wEXAaQB/AH/ASABqwL/ASABqwL/ARsBqAH+Af8BFgGkAfwB/wERAaAB+QH/AQsBnAH2Af8BBQGX
        AfMB/wEBAZEB7AH/AQoBmgH1Af8BeAG4Ae0B/wEqAW4BrAH6BAADAgEDAxIBGAMyAVEDSwGOA2cB1QPw
        Af8D5QH/A9wB/wLUAdMB/wLIAckB/wHEAcIB1QH/AWICYwHVA0sBkAMzAVIDEgEYAwIBAwMhATABXgFZ
        AVgBxAH9AcsBkgL/AdsBpAL/AdsBogH/AfcBrQFpAf8DFgEeAwABAQMfASwBfgFjAVUB5AH+AdMBmwL/
        AdsBogL/AdkBnQH/AaUBdwFOAfIDFQEdSAADTgGZAQEBkwHwAf8BbgHJAv8BbQHJAv8BQQG3Av8BMgGy
        Av8BJQGsAv8BGgGnAf4B/wETAaIB+gH/AQwBnAH2Af8BNgGyAf4B/wEoAawB/QH/ARYBjgHiAf8BUQJS
        AacEAAMEAQYDJAE1A0MBeANlAdQD/QH/A/gB/wPtAf8D3gH/A9cB/wHPAc0B0wH/AbkB0AHUAf8BvQHn
        AbAB/wFlAWMBYAHUA0QBeQMkATUDBAEGAwABAQMhATADVAGvAXsBaAFhAeEBbAFhAVoB1QGyAXUBSQH2
        AxQBHAQAAwEBAgMvAUoBWwFZAVcBwgF7AWgBYQHhAXABYwFaAdsBkAFoAVEB7AMUARxIAAMBAQIDUQGg
        AQIBhwHcAf8BugHkAv8BlwHXAv8BVgHAAv8BQQG3Av8BMAGwAf4B/wEgAaoB/gH/AUcBuQH+Af8BmwHY
        Af4B/wEGAYQB1gH/AVUCVgG0AwcBCgQAAwUBBwMwAUwDVAGsA/EB/wP4Af8D9AH/A5YB9ANmAdoDYwHZ
        AowBkQHzAcQB3QG7Af8B6gHWAZYB/wHtAccBpgH/A1MBrAMwAUwDBQEHCwABAQMSARgDHAEoAXIBWgFO
        Ad4DFAEbDAADBAEFAxIBGQMrAUMBfwFeAU0B5QMUARxMAAMNAREBVQFXAVkBtwEAAYEB1QH/AcQB4gH4
        Af8BKwGDAcoB/wE/AXcBsgH/AT8BdwGyAf8BKwGDAcoB/wGsAdUB9QH/AQABgQHUAf8BVwFZAVsBvwMS
        ARkIAAMFAQcDOAFcA2YB1QPlAf8D7gH/A5UB9ANaAcADVgGrA1IBqQNZAb4BjgGLAYgB8gHjAc8BvgH/
        AcwByAHFAf8DYwHUAzgBXAMFAQcQAAMUARsBcgFbAVIB3gMUARsUAAMUARwBgQFcAUoB5wMUARxQAAMJ
        AQwBVAFgAWgB3gElAWwBtQH/AZwBzAH4Af8BrwHUAfcB/wGvAdQB9wH/AaUBzwH2Af8BJgFyAboB/wFU
        AV4BaAHdAw4BEwwAAwUBBwM4AVwDlQHxA90B/wPeAf8DaQHgA1UBtQMuAUgDLQFGA1YBtANkAdsB0gHU
        AdYB/wLTAdQB/wOQAfEDOAFcAwUBBxAAAxQBGwFzAVwBTwHfAxQBGxQAAxQBHAF9AVgBSgHmAxQBHFQA
        AVcBXQFgAcoBpgHKAe4B/wGrAcwB6gH/AacB0AH2Af8BqAHQAfYB/wGrAcwB6gH/AacBzQHuAf8BWAFc
        AV8BzBAAAwUBBwM1AVcDiwHwAdMC1AH/AdUB1wHYAf8DaQHgA1oBvQM4AV0DNwFaA1gBvANjAdwD2gH/
        A90B/wONAfADNQFXAwUBBxAAAxQBGwFzAVcBTwHfAxQBGxQAAxQBHAF9AVgBSgHmAxQBHFQAAT0BZAGG
        AfEBvQHXAe8B/wGjAckB7QH/AZ0BxQHoAf8BMwHDAeoB/wFOAcUB7AH/AaYB2QHwAf8BMQFrAZcB9QME
        AQYMAAMEAQYDMgFRA18BzgHKAckByAH/Ad8B0AHFAf8BjAGJAYcB8wNbAcsDWAHBA1gBwQNbAcgDggHw
        A+sB/wPlAf8DYAHNAzIBUQMEAQYQAAMUARsBcgFYAU4B3gMUARsUAAMUARwBgAFYAUkB5wMUARxVAAFo
        AeoB/wFYAaQByQH/AYoBtwHkAf8BLQG5AeUB/wEAAWYB3wH/AQABbgHiAf8BAAFvAd0B/wEAAWEB2QH/
        AwsBDwwAAwIBAwMoATwDUAGaAecBxgGqAf8B8AHSAZcB/wHIAdwBuAH/AogBiQHyA2YB4ANkAd4DhgHx
        A+0B/wP4Af8D7gH/A1ABmgMoATwDAgEDEAADFAEbAXUBWgFQAeADIgEyAxYBHwMWAR8DFgEfAxYBHwMW
        AR8DIwE0AYABVQFGAecDFAEcVAABBAGnAe0B/wEAAZYB8AH/AQABdwHsAf8BAAGAAewB/wEAAYAB7AH/
        AQABgQHrAf8BAAFpAeQB/wEAAVkB0QH/EwABAQMZASMDNwFbAV4CWwHEAcIB5wGoAf8BuwHYAd8B/wHQ
        Ac8B3wH/AtMB0gH/A9kB/wPrAf8D+AH/A/wB/wNeAcQDNwFaAxkBIwMAAQEQAAMUARsBcwFXAU0B4gM6
        AWEDOAFeAzgBXgM4AV4DOAFeAzgBXgM7AWQBgQFSAT8B6gMWAR5UAAFWAVkBWwG7AQEBnAHtAf8BAAGW
        Ae8B/wEAAZYB7wH/AQABjQHuAf8BAAF3AewB/wEAAXYB4wH/AVYBXgFhAccUAAMHAQoDJAE1Az0BagFZ
        AloBwgHGAcQB4QH/AskBywH/AtQB0wH/At4B3QH/A+UB/wPuAf8DWwHCAz4BawMkATUDBwEKFAADEgEZ
        AW4BVwFPAd8BxAFfASEB+wG7AVIBJAH6AbsBUwEkAfoBuwFTASQB+gG7AVMBJAH6AbsBUgEkAfoBxAFf
        ASEB+wGZAVMBOAHxAxUBHVgAAVcBXQFfAcUBAAF2AeoB/wEAAYAB7QH/AQABdAHsAf8BAAFsAecB/wFW
        AWIBaAHQHAADDQERAyMBMwM0AVUDTAGSA1wBxgOHAe4DiQHtA10BxQNNAZEDNAFVAyMBMwMNAREYAAMN
        AREBfQFhAVEB5gHxAbsBnQH/AfEBtgGVAf8B8QG2AZUB/wHxAbYBlgH/AfEBtgGVAf8B8QG2AZUB/wHz
        Ab4BnwH/AcUBbAE/AfwDDgETkAADBgEIAxYBHwMjATMDKgFAAyoBQAMqAUADKgFAAyMBMwMWAR8DBgEI
        HAADBAEFA1EBogFdAlcBxQFeAVkBWAHEAV4BWQFYAcQBXgFZAVgBxAFeAVkBWAHEAV4BWQFYAcQBXQJX
        AcUBVgFVAVQBtAMEAQZEAAFCAU0BPgcAAT4DAAEoAwABQAMAARADAAEBAQABAQUAAYAXAAP/AQAC/wHg
        AQcCAQIAAcABAwHAAQMBAAEBAgABgAEBAYABAQEAAQECAAGAAQEDAAEBAgABgAEBAwABAQIAAYABAQIA
        AgECAAGAAQECAALBAgABwAEDAgAC8QIAAeABBwIAAvECAAHwAQ8CAALxAgAB8AEHAgAC8QIAAfABBwIA
        AfABAQIAAfABDwIAAfABAQIAAfABDwGAAQEB8AEBAgAB+AEfAcABAwHwAQECAAL/AeABBwHwAQECAAs=
</value>
  </data>
</root>