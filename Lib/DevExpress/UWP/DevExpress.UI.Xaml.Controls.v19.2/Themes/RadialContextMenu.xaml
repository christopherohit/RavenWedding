<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:dxxaml="using:DevExpress.UI.Xaml.Controls"
    xmlns:internal="using:DevExpress.UI.Xaml.Controls.Internal"
    xmlns:xaml="using:DevExpress.UI.Xaml" 
    xmlns:native="using:DevExpress.UI.Xaml.Native"
    xmlns:dx="using:DevExpress.Core">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="ms-appx:///DevExpress.UI.Xaml.Controls.v19.2/Themes/RadialContextMenu.Colors.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <dx:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
    <dx:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverterInverted" Invert="True"/>
    <dxxaml:RadialContextMenuCommandWrapperConverter x:Key="commandWrapper"/>
    <dxxaml:RadialContextMenuCommandWrappersConverter x:Key="collectionWrapper"/>
    <dxxaml:RadialContextMenuContentTemplateSelector x:Key="RadialMenuContentTemplateSelector"/>
    <dxxaml:RadialContextMenuItemContentTemplateSelector x:Key="RadialMenuItemContentTemplateSelector"/>
    <dxxaml:RadialContextMenuItemInnerContentTemplateSelector x:Key="RadialContextMenuItemInnerContentTemplateSelector"/>
    <Style TargetType="dxxaml:ArcSegmentControl">
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxxaml:ArcSegmentControl">
                    <Path 
                        Data="{Binding Path=Geometry, RelativeSource={RelativeSource TemplatedParent}}" 
                        Fill="{TemplateBinding Background}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="dxxaml:RadialMenuControl">
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxxaml:RadialMenuControl">
                    <Grid>
                        <dxxaml:ArcSegmentControl 
                            IsCircle="True" 
                            Fill="True" 
                            Offset="-0.5d"
                            Background="{ThemeResource RadialContextMenuBackgroundThemeBrush}"/>
                        <dxxaml:ArcSegmentControl 
                            IsCircle="True" 
                            Background="{ThemeResource RadialContextMenuDisabledBackgroundThemeBrush}"
                            Thickness="{Binding Path=Command.ViewInfo.BoundWidth}"/>
                        <ItemsControl ItemsSource="{Binding Path=Command.ActualItems, Converter={StaticResource collectionWrapper}}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <dxxaml:RadialContextMenuContentControl
                                        HorizontalAlignment="Stretch"
                                        VerticalAlignment="Stretch"
                                        Content="{Binding}"
                                        ContentTemplateSelector="{StaticResource RadialMenuItemContentTemplateSelector}">
                                    </dxxaml:RadialContextMenuContentControl>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <Grid/>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                        </ItemsControl>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="dxxaml:RootRadialMenuControl">
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxxaml:RootRadialMenuControl">
                    <Grid Background="Transparent">
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RadialMenuCommandControlButtonStyle" TargetType="Button">
        <Setter Property="dx:StyleHelper.BindableSetters">
            <Setter.Value>
                <dx:BindableSetterCollection>
                    <dx:BindableSetter Property="FontSize" Binding="{Binding Path=FontSize, RelativeSource={RelativeSource TemplatedParent}}"/>
                </dx:BindableSetterCollection>
            </Setter.Value>
        </Setter>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Padding" Value="0"></Setter>
        <Setter Property="BorderThickness" Value="0"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <ContentPresenter/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="dxxaml:RadialMenuCommandControl">
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="FontSize" Value="11"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxxaml:RadialMenuCommandControl">
                    <Button 
                        Style="{StaticResource RadialMenuCommandControlButtonStyle}"
                        Command="{Binding Path=NavigateCommand, RelativeSource={RelativeSource TemplatedParent}}" 
                        CommandParameter="Forward">
                        <dxxaml:ArcSegmentControl Index="1"/>
                    </Button>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="dxxaml:RadialMenuContainer">
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <ContentPresenter/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="dxxaml:RadialContextMenuContentControl">
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxxaml:RadialContextMenuContentControl">
                    <ContentPresenter/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <DataTemplate x:Key="RadialContextMenuItemContainerTemplate">
        <dxxaml:RadialMenuItemContainerControl/>
    </DataTemplate>
    <DataTemplate x:Key="RootRadialContextMenuContainerTemplate">
        <dxxaml:RootRadialMenuControl/>
    </DataTemplate>
    <DataTemplate x:Key="RadialContextMenuContainerTemplate">
        <dxxaml:RadialMenuControl/>
    </DataTemplate>
    <DataTemplate x:Key="RadialContextMenuSeparatorTemplate">
        <dxxaml:RadialMenuSeparatorControl/>
    </DataTemplate>
    <DataTemplate x:Key="RadialContextMenuTemplatedTemplate">
        <dxxaml:RadialContextMenuTemplatedContainer
            RestoreFocus="True"
            Content="{Binding}" 
            ContentTemplate="{Binding Path=Command.ContainerTemplate}"
            HorizontalContentAlignment="Stretch"
            VerticalContentAlignment="Stretch">
        </dxxaml:RadialContextMenuTemplatedContainer>
    </DataTemplate>
    <DataTemplate x:Key="RadialContextMenuItemSeparatorTemplate">
        <dxxaml:RadialMenuSeparatorControl/>
    </DataTemplate>
    <DataTemplate x:Key="RadialContextMenuTemplatedItemTemplate">
        <dxxaml:RadialMenuTemplatedContainerControl/>
    </DataTemplate>
    <DataTemplate x:Key="RadialContextMenuCommandTemplate">
        <dxxaml:RadialMenuCommandControl Content="{Binding}"/>
    </DataTemplate>
    <DataTemplate x:Key="RadialContextMenuItemCommandTemplate">
        <dxxaml:RadialMenuItemCommandControl Content="{Binding}"/>
    </DataTemplate>
    <DataTemplate x:Key="RadialContextMenuToggleItemCommandTemplate">
        <dxxaml:RadialMenuToggleItemCommandControl Content="{Binding}"/>
    </DataTemplate>
    <DataTemplate x:Key="RadialContextMenuItemInnerContentContainerTemplate">
        <StackPanel>
            <TextBlock Text="Container" Margin="20"/>
        </StackPanel>
    </DataTemplate>
    <DataTemplate x:Key="RadialContextMenuItemInnerContentSeparatorTemplate">
        <StackPanel>
            <TextBlock Text=" " Margin="20"/>
        </StackPanel>
    </DataTemplate>
    <DataTemplate x:Key="RadialContextMenuItemCommandInnerContentTemplate">
        <StackPanel>
            <TextBlock Text="Command" Margin="20"/>
        </StackPanel>
    </DataTemplate>
    <Style TargetType="dxxaml:RadialContextMenuControl">
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxxaml:RadialContextMenuControl">
                    <Grid Background="Transparent">
                        <Canvas x:Name="PART_ItemsGenerator" IsHitTestVisible="False" Opacity="0"/>
                        <dxxaml:TransitionControl 
                            x:Name="PART_Content" 
                            TransitionStyle="Fade"
                            Width="{Binding Path=Content.Command.ViewInfo.MenuSize.Width, RelativeSource={RelativeSource Self}}"
                            Height="{Binding Path=Content.Command.ViewInfo.MenuSize.Height, RelativeSource={RelativeSource Self}}">
                            <dxxaml:TransitionControl.ControlTemplate>
                                <ControlTemplate>
                                    <dxxaml:RadialContextMenuContentControl
                                        x:Name="ContentPresenter"
                                        Content="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}"
                                        ContentTemplateSelector="{StaticResource RadialMenuContentTemplateSelector}"
                                        RenderTransformOrigin="0.5,0.5">
                                        <dxxaml:RadialContextMenuContentControl.Resources>
                                            <Storyboard x:Name="TransitionStory">
                                                <DoubleAnimation Duration="00:00:00.3" Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Opacity" From="0" To="1" />
                                                <DoubleAnimation Duration="00:00:00.3" Storyboard.TargetName="ScaleTransform" Storyboard.TargetProperty="ScaleX" From="0" To="1"/>
                                                <DoubleAnimation Duration="00:00:00.3" Storyboard.TargetName="ScaleTransform" Storyboard.TargetProperty="ScaleY" From="0" To="1"/>
                                                <DoubleAnimation Duration="00:00:00.3" Storyboard.TargetName="RotateTransform" Storyboard.TargetProperty="Angle" From="-90" To="0">
                                                    <DoubleAnimation.EasingFunction>
                                                        <PowerEase Power="2"></PowerEase>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>
                                            </Storyboard>
                                        </dxxaml:RadialContextMenuContentControl.Resources>
                                        <dxxaml:RadialContextMenuContentControl.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform x:Name="ScaleTransform"/>
                                                <RotateTransform x:Name="RotateTransform"/>
                                            </TransformGroup>
                                        </dxxaml:RadialContextMenuContentControl.RenderTransform>
                                    </dxxaml:RadialContextMenuContentControl>
                                </ControlTemplate>
                            </dxxaml:TransitionControl.ControlTemplate>
                            <dxxaml:TransitionControl.PreviousControlTemplate>
                                <ControlTemplate>
                                    <dxxaml:RadialContextMenuContentControl 
                                        x:Name="ContentPresenter"
                                        Content="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}"
                                        ContentTemplateSelector="{StaticResource RadialMenuContentTemplateSelector}"
                                        RenderTransformOrigin="0.5,0.5">
                                        <dxxaml:RadialContextMenuContentControl.Resources>
                                            <Storyboard x:Name="TransitionStory">
                                                <DoubleAnimation Duration="00:00:00.2" Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Opacity" From="1" To="0" />
                                                <DoubleAnimation Duration="00:00:00.3" Storyboard.TargetName="ScaleTransform" Storyboard.TargetProperty="ScaleX" From="1" To="0"/>
                                                <DoubleAnimation Duration="00:00:00.3" Storyboard.TargetName="ScaleTransform" Storyboard.TargetProperty="ScaleY" From="1" To="0"/>
                                                <DoubleAnimation Duration="00:00:00.3" Storyboard.TargetName="RotateTransform" Storyboard.TargetProperty="Angle" From="0" To="-45"/>
                                            </Storyboard>
                                        </dxxaml:RadialContextMenuContentControl.Resources>
                                        <dxxaml:RadialContextMenuContentControl.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform x:Name="ScaleTransform"/>
                                                <RotateTransform x:Name="RotateTransform"/>
                                            </TransformGroup>
                                        </dxxaml:RadialContextMenuContentControl.RenderTransform>
                                    </dxxaml:RadialContextMenuContentControl>
                                </ControlTemplate>
                            </dxxaml:TransitionControl.PreviousControlTemplate>
                        </dxxaml:TransitionControl>
                        <Button 
                            Style="{StaticResource RadialMenuCommandControlButtonStyle}"                            
                            VerticalAlignment="Center" 
                            HorizontalAlignment="Center"
                            ContentTemplate="{Binding Path=CurrentItem.ActualCenterButtonTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                            Command="{Binding Path=NavigateCommand, RelativeSource={RelativeSource TemplatedParent}}"
                            CommandParameter="Backward">
                        </Button>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="dxxaml:RadialMenuItemCommandControl">
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxxaml:RadialMenuItemCommandControl">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <DoubleAnimation 
                                            Duration="0:0:0.2" 
                                            To="0" 
                                            Storyboard.TargetProperty="Opacity" 
                                            Storyboard.TargetName="PART_Highlight"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation 
                                            Duration="0:0:0.0" 
                                            To="1" 
                                            Storyboard.TargetProperty="Opacity" 
                                            Storyboard.TargetName="PART_Highlight"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="AnimateStates">
                                <VisualState x:Name="Loading1">
                                    <Storyboard>
                                        <DoubleAnimation 
                                            BeginTime="0:0:0.3"
                                            Duration="0:0:0.3" 
                                            To="0" 
                                            Storyboard.TargetProperty="Y"
                                            Storyboard.TargetName="loadingAnimation">
                                        </DoubleAnimation>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unloading1"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <dxxaml:ArcSegmentControl
                            VerticalAlignment="Stretch"
                            HorizontalAlignment="Stretch"
                            Index="{Binding Path=Command.ActualIndex}"
                            Background="{ThemeResource RadialContextMenuItemThemeBrush}"
                            Offset="{Binding Path=Command.ViewInfo.CommandSegmentOffset}"
                            Thickness="{Binding Path=Command.ViewInfo.CommandSegmentBoundWidth}"
                            GapSize="{Binding Path=Command.ViewInfo.GapSize}"
                            Command="{Binding Path=DefaultActionCommand, RelativeSource={RelativeSource TemplatedParent}}">
                        </dxxaml:ArcSegmentControl>
                        <dxxaml:ArcSegmentControl
                            x:Name="PART_Highlight"
                            Opacity="0"
                            IsHitTestVisible="False"
                            VerticalAlignment="Stretch"
                            HorizontalAlignment="Stretch"
                            Index="{Binding Path=Command.ActualIndex}"
                            Background="{ThemeResource RadialContextMenuItemPointerOverThemeBrush}"
                            Offset="{Binding Path=Command.ViewInfo.AdditionalSegmentOffset}"
                            Thickness="{Binding Path=Command.ViewInfo.AdditionalSegmentWidth}"
                            GapSize="{Binding Path=Command.ViewInfo.GapSize}">
                        </dxxaml:ArcSegmentControl>
                        <Border x:Name="clippingBorder"
                            dx:FrameworkElementHelper.IsClipped="True"
                            Width="{Binding Path=Command.ViewInfo.RenderSize.Width}"
                            Height="{Binding Path=Command.ViewInfo.RenderSize.Height}"
                            RenderTransformOrigin="0.0,0.0"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Top">
                            <Button 
                                Style="{StaticResource RadialMenuCommandControlButtonStyle}"
                                ContentTemplate="{Binding Path=Command.ActualContentTemplate}"
                                Content="{Binding}"
                                Command="{Binding Path=DefaultActionCommand, RelativeSource={RelativeSource TemplatedParent}}">
                                <Button.RenderTransform>
                                    <TransformGroup>
                                        <TranslateTransform x:Name="loadingAnimation" Y="30"/>
                                    </TransformGroup>
                                </Button.RenderTransform>
                            </Button>
                            <Border.RenderTransform>
                                <TransformGroup>
                                    <TranslateTransform 
                                        X="{Binding Path=Command.Location.X}" 
                                        Y="{Binding Path=Command.Location.Y}">
                                    </TranslateTransform>
                                </TransformGroup>
                            </Border.RenderTransform>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="dxxaml:RadialMenuToggleItemCommandControl">
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxxaml:RadialMenuToggleItemCommandControl">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <DoubleAnimation 
                                            Duration="0:0:0.2" 
                                            To="0" 
                                            Storyboard.TargetProperty="Opacity" 
                                            Storyboard.TargetName="PART_Highlight"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation 
                                            Duration="0:0:0.0" 
                                            To="1" 
                                            Storyboard.TargetProperty="Opacity" 
                                            Storyboard.TargetName="PART_Highlight"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="AnimateStates">
                                <VisualState x:Name="Loading1">
                                    <Storyboard>
                                        <DoubleAnimation 
                                            BeginTime="0:0:0.3"
                                            Duration="0:0:0.3" 
                                            To="0" 
                                            Storyboard.TargetProperty="Y"
                                            Storyboard.TargetName="loadingAnimation">
                                        </DoubleAnimation>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unloading1"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <dxxaml:ArcSegmentControl
                            VerticalAlignment="Stretch"
                            HorizontalAlignment="Stretch"
                            Index="{Binding Path=Command.ActualIndex}"
                            Background="{ThemeResource RadialContextMenuItemThemeBrush}"
                            Offset="{Binding Path=Command.ViewInfo.CommandSegmentOffset}"
                            Thickness="{Binding Path=Command.ViewInfo.CommandSegmentBoundWidth}"
                            GapSize="{Binding Path=Command.ViewInfo.GapSize}"
                            Command="{Binding Path=DefaultActionCommand, RelativeSource={RelativeSource TemplatedParent}}">
                        </dxxaml:ArcSegmentControl>
                        <dxxaml:ArcSegmentControl
                            x:Name="PART_Highlight"
                            Opacity="0"
                            IsHitTestVisible="False"
                            Visibility="{Binding Path=Command.IsChecked, Converter={StaticResource BooleanToVisibilityConverterInverted}}"
                            VerticalAlignment="Stretch"
                            HorizontalAlignment="Stretch"
                            Index="{Binding Path=Command.ActualIndex}"
                            Background="{ThemeResource RadialContextMenuItemPointerOverThemeBrush}"
                            Offset="{Binding Path=Command.ViewInfo.AdditionalSegmentOffset}"
                            Thickness="{Binding Path=Command.ViewInfo.AdditionalSegmentWidth}"
                            GapSize="{Binding Path=Command.ViewInfo.GapSize}">
                        </dxxaml:ArcSegmentControl>
                        <dxxaml:ArcSegmentControl
                            Visibility="{Binding Path=Command.IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}"
                            VerticalAlignment="Stretch"
                            HorizontalAlignment="Stretch"
                            Index="{Binding Path=Command.ActualIndex}"
                            Background="{ThemeResource RadialContextMenuSelectedItemThemeBrush}"
                            Offset="{Binding Path=Command.ViewInfo.AdditionalSegmentOffset}"
                            Thickness="{Binding Path=Command.ViewInfo.AdditionalSegmentWidth}"
                            GapSize="{Binding Path=Command.ViewInfo.GapSize}">
                        </dxxaml:ArcSegmentControl>

                        <Border x:Name="clippingBorder"
                            dx:FrameworkElementHelper.IsClipped="True"
                            Width="{Binding Path=Command.ViewInfo.RenderSize.Width}"
                            Height="{Binding Path=Command.ViewInfo.RenderSize.Height}"
                            RenderTransformOrigin="0.0,0.0"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Top">
                            <Button 
                                Style="{StaticResource RadialMenuCommandControlButtonStyle}"
                                ContentTemplate="{Binding Path=Command.ActualContentTemplate}"
                                Content="{Binding}"
                                Command="{Binding Path=DefaultActionCommand, RelativeSource={RelativeSource TemplatedParent}}">
                                <Button.RenderTransform>
                                    <TransformGroup>
                                        <TranslateTransform x:Name="loadingAnimation" Y="30"/>
                                    </TransformGroup>
                                </Button.RenderTransform>
                            </Button>
                            <Border.RenderTransform>
                                <TransformGroup>
                                    <TranslateTransform 
                                        X="{Binding Path=Command.Location.X}" 
                                        Y="{Binding Path=Command.Location.Y}">
                                    </TranslateTransform>
                                </TransformGroup>
                            </Border.RenderTransform>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="dxxaml:RadialMenuItemContainerControl">
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxxaml:RadialMenuItemContainerControl">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <DoubleAnimation 
                                            Duration="0:0:0.2" 
                                            To="0" 
                                            Storyboard.TargetProperty="Opacity" 
                                            Storyboard.TargetName="PART_Highlight"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation 
                                            Duration="0:0:0.2" 
                                            To="1" 
                                            Storyboard.TargetProperty="Opacity" 
                                            Storyboard.TargetName="PART_Highlight"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="DrillDownStates">
                                <VisualState x:Name="DrillDownNormal">
                                    <Storyboard>
                                        <DoubleAnimation 
                                            Duration="0:0:0.1" 
                                            To="1" 
                                            Storyboard.TargetProperty="Opacity" 
                                            Storyboard.TargetName="PART_DrillDown"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="DrillDownMouseOver">
                                    <Storyboard>
                                        <DoubleAnimation 
                                            Duration="0:0:0.1" 
                                            To="0" 
                                            Storyboard.TargetProperty="Opacity" 
                                            Storyboard.TargetName="PART_DrillDown"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="AnimateStates">
                                <VisualState x:Name="Loading1">
                                    <Storyboard>
                                        <DoubleAnimation 
                                            BeginTime="0:0:0.3"
                                            Duration="0:0:0.3" 
                                            To="0" 
                                            Storyboard.TargetProperty="Y"
                                            Storyboard.TargetName="loadingAnimation">
                                        </DoubleAnimation>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unloading1"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <dxxaml:ArcSegmentControl
                            x:Name="PART_DrillDownHighlight"
                            VerticalAlignment="Stretch"
                            HorizontalAlignment="Stretch"
                            Index="{Binding Path=Command.ActualIndex}"
                            Background="{ThemeResource RadialContextMenuItemContainerThemeBrush}"
                            Offset="{Binding Path=Command.ViewInfo.CommandSegmentOffset}"
                            Thickness="{Binding Path=Command.ViewInfo.CommandSegmentBoundWidth}"
                            GapSize="{Binding Path=Command.ViewInfo.GapSize}">
                        </dxxaml:ArcSegmentControl>
                        <dxxaml:ArcSegmentControl
                            x:Name="PART_DrillDown"
                            VerticalAlignment="Stretch"
                            HorizontalAlignment="Stretch"
                            Index="{Binding Path=Command.ActualIndex}"
                            Background="{ThemeResource RadialContextMenuItemContainerPointerOverThemeBrush}"
                            Offset="{Binding Path=Command.ViewInfo.CommandSegmentOffset}"
                            Thickness="{Binding Path=Command.ViewInfo.CommandSegmentBoundWidth}"
                            GapSize="{Binding Path=Command.ViewInfo.GapSize}"
                            Command="{Binding Path=NavigateCommand, RelativeSource={RelativeSource TemplatedParent}}"
                            CommandParameter="Forward">
                        </dxxaml:ArcSegmentControl>
                        <dxxaml:ArcSegmentControl
                            x:Name="PART_Highlight"
                            Opacity="0"
                            IsHitTestVisible="False"
                            VerticalAlignment="Stretch"
                            HorizontalAlignment="Stretch"
                            Index="{Binding Path=Command.ActualIndex}"
                            Background="{ThemeResource RadialContextMenuItemPointerOverThemeBrush}"
                            Offset="{Binding Path=Command.ViewInfo.AdditionalSegmentOffset}"
                            Thickness="{Binding Path=Command.ViewInfo.AdditionalSegmentWidth}"
                            GapSize="{Binding Path=Command.ViewInfo.GapSize}">
                        </dxxaml:ArcSegmentControl>
                        <Border x:Name="clippingBorder"
                            dx:FrameworkElementHelper.IsClipped="True"
                            Width="{Binding Path=Command.ViewInfo.RenderSize.Width}"
                            Height="{Binding Path=Command.ViewInfo.RenderSize.Height}"
                            RenderTransformOrigin="0.0,0.0"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Top">
                            <Button 
                                Style="{StaticResource RadialMenuCommandControlButtonStyle}"
                                ContentTemplate="{Binding Path=Command.ActualContentTemplate}"
                                Content="{Binding}"
	                            Command="{Binding Path=NavigateCommand, RelativeSource={RelativeSource TemplatedParent}}"
	                            CommandParameter="Forward">
                                <Button.RenderTransform>
                                    <TransformGroup>
                                        <TranslateTransform x:Name="loadingAnimation" Y="30"/>
                                    </TransformGroup>
                                </Button.RenderTransform>
                            </Button>
                            <Border.RenderTransform>
                                <TransformGroup>
                                    <TranslateTransform 
                                        X="{Binding Path=Command.Location.X}" 
                                        Y="{Binding Path=Command.Location.Y}">
                                    </TranslateTransform>
                                </TransformGroup>
                            </Border.RenderTransform>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="dxxaml:RadialMenuSeparatorControl">
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxxaml:RadialMenuSeparatorControl">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <DoubleAnimation 
                                            Duration="0:0:0.2" 
                                            To="0" 
                                            Storyboard.TargetProperty="Opacity" 
                                            Storyboard.TargetName="PART_Highlight"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation 
                                            Duration="0:0:0.0" 
                                            To="1" 
                                            Storyboard.TargetProperty="Opacity" 
                                            Storyboard.TargetName="PART_Highlight"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="AnimateStates">
                                <VisualState x:Name="Loading1">
                                    <Storyboard>
                                        <DoubleAnimation 
                                            BeginTime="0:0:0.3"
                                            Duration="0:0:0.3" 
                                            To="0" 
                                            Storyboard.TargetProperty="Y"
                                            Storyboard.TargetName="loadingAnimation">
                                        </DoubleAnimation>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unloading1"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <dxxaml:ArcSegmentControl
                            VerticalAlignment="Stretch"
                            HorizontalAlignment="Stretch"
                            Index="{Binding Path=Command.ActualIndex}"
                            Background="{ThemeResource RadialContextMenuSeparatorThemeBrush}"
                            Offset="{Binding Path=Command.ViewInfo.CommandSegmentOffset}"
                            Thickness="{Binding Path=Command.ViewInfo.CommandSegmentBoundWidth}"
                            GapSize="{Binding Path=Command.ViewInfo.GapSize}"
                            Command="{Binding Path=DefaultActionCommand, RelativeSource={RelativeSource TemplatedParent}}">
                        </dxxaml:ArcSegmentControl>
                        <dxxaml:ArcSegmentControl
                            x:Name="PART_Highlight"
                            Opacity="0"
                            IsHitTestVisible="False"
                            VerticalAlignment="Stretch"
                            HorizontalAlignment="Stretch"
                            Index="{Binding Path=Command.ActualIndex}"
                            Background="{ThemeResource RadialContextMenuItemPointerOverThemeBrush}"
                            Offset="{Binding Path=Command.ViewInfo.AdditionalSegmentOffset}"
                            Thickness="{Binding Path=Command.ViewInfo.AdditionalSegmentWidth}"
                            GapSize="{Binding Path=Command.ViewInfo.GapSize}">
                        </dxxaml:ArcSegmentControl>
                        <Border x:Name="clippingBorder"
                            dx:FrameworkElementHelper.IsClipped="True"
                            Width="{Binding Path=Command.ViewInfo.RenderSize.Width}"
                            Height="{Binding Path=Command.ViewInfo.RenderSize.Height}"
                            RenderTransformOrigin="0.0,0.0"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Top">
                            <Button 
                                Style="{StaticResource RadialMenuCommandControlButtonStyle}"
                                ContentTemplate="{Binding Path=Command.ActualContentTemplate}"
                                Content="{Binding}">
                                <Button.RenderTransform>
                                    <TransformGroup>
                                        <TranslateTransform x:Name="loadingAnimation" Y="30"/>
                                    </TransformGroup>
                                </Button.RenderTransform>
                            </Button>
                            <Border.RenderTransform>
                                <TransformGroup>
                                    <TranslateTransform 
                                        X="{Binding Path=Command.Location.X}" 
                                        Y="{Binding Path=Command.Location.Y}">
                                    </TranslateTransform>
                                </TransformGroup>
                            </Border.RenderTransform>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="dxxaml:RadialMenuTemplatedContainerControl">
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxxaml:RadialMenuTemplatedContainerControl">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <DoubleAnimation 
                                            Duration="0:0:0.2" 
                                            To="0" 
                                            Storyboard.TargetProperty="Opacity" 
                                            Storyboard.TargetName="PART_Highlight"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation 
                                            Duration="0:0:0.2" 
                                            To="1" 
                                            Storyboard.TargetProperty="Opacity" 
                                            Storyboard.TargetName="PART_Highlight"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="DrillDownStates">
                                <VisualState x:Name="DrillDownNormal">
                                    <Storyboard>
                                        <DoubleAnimation 
                                            Duration="0:0:0.1" 
                                            To="1" 
                                            Storyboard.TargetProperty="Opacity" 
                                            Storyboard.TargetName="PART_DrillDown"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="DrillDownMouseOver">
                                    <Storyboard>
                                        <DoubleAnimation 
                                            Duration="0:0:0.1" 
                                            To="0" 
                                            Storyboard.TargetProperty="Opacity" 
                                            Storyboard.TargetName="PART_DrillDown"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="AnimateStates">
                                <VisualState x:Name="Loading1">
                                    <Storyboard>
                                        <DoubleAnimation 
                                            BeginTime="0:0:0.3"
                                            Duration="0:0:0.3" 
                                            To="0" 
                                            Storyboard.TargetProperty="Y"
                                            Storyboard.TargetName="loadingAnimation">
                                        </DoubleAnimation>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unloading1"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <dxxaml:ArcSegmentControl
                            x:Name="PART_DrillDownHighlight"
                            VerticalAlignment="Stretch"
                            HorizontalAlignment="Stretch"
                            Index="{Binding Path=Command.ActualIndex}"
                            Background="{ThemeResource RadialContextMenuItemContainerThemeBrush}"
                            Offset="{Binding Path=Command.ViewInfo.CommandSegmentOffset}"
                            Thickness="{Binding Path=Command.ViewInfo.CommandSegmentBoundWidth}"
                            GapSize="{Binding Path=Command.ViewInfo.GapSize}">
                        </dxxaml:ArcSegmentControl>
                        <dxxaml:ArcSegmentControl
                            x:Name="PART_DrillDown"
                            VerticalAlignment="Stretch"
                            HorizontalAlignment="Stretch"
                            Index="{Binding Path=Command.ActualIndex}"
                            Background="{ThemeResource RadialContextMenuItemContainerPointerOverThemeBrush}"
                            Offset="{Binding Path=Command.ViewInfo.CommandSegmentOffset}"
                            Thickness="{Binding Path=Command.ViewInfo.CommandSegmentBoundWidth}"
                            GapSize="{Binding Path=Command.ViewInfo.GapSize}"
                            Command="{Binding Path=NavigateCommand, RelativeSource={RelativeSource TemplatedParent}}"
                            CommandParameter="Forward">
                        </dxxaml:ArcSegmentControl>
                        <dxxaml:ArcSegmentControl
                            x:Name="PART_Highlight"
                            Opacity="0"
                            IsHitTestVisible="False"
                            VerticalAlignment="Stretch"
                            HorizontalAlignment="Stretch"
                            Index="{Binding Path=Command.ActualIndex}"
                            Background="{ThemeResource RadialContextMenuItemPointerOverThemeBrush}"
                            Offset="{Binding Path=Command.ViewInfo.AdditionalSegmentOffset}"
                            Thickness="{Binding Path=Command.ViewInfo.AdditionalSegmentWidth}"
                            GapSize="{Binding Path=Command.ViewInfo.GapSize}">
                        </dxxaml:ArcSegmentControl>
                        <Border x:Name="clippingBorder"
                            dx:FrameworkElementHelper.IsClipped="True"
                            Width="{Binding Path=Command.ViewInfo.RenderSize.Width}"
                            Height="{Binding Path=Command.ViewInfo.RenderSize.Height}"
                            RenderTransformOrigin="0.0,0.0"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Top">
                            <Button 
                                Style="{StaticResource RadialMenuCommandControlButtonStyle}"
                                ContentTemplate="{Binding Path=Command.ActualContentTemplate}"
                                Content="{Binding}"
	                            Command="{Binding Path=NavigateCommand, RelativeSource={RelativeSource TemplatedParent}}"
	                            CommandParameter="Forward">
                                <Button.RenderTransform>
                                    <TransformGroup>
                                        <TranslateTransform x:Name="loadingAnimation" Y="30"/>
                                    </TransformGroup>
                                </Button.RenderTransform>
                            </Button>
                            <Border.RenderTransform>
                                <TransformGroup>
                                    <TranslateTransform 
                                        X="{Binding Path=Command.Location.X}" 
                                        Y="{Binding Path=Command.Location.Y}">
                                    </TranslateTransform>
                                </TransformGroup>
                            </Border.RenderTransform>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="dxxaml:RadialContextMenuTemplatedContainer">
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxxaml:RadialContextMenuTemplatedContainer">
                    <ContentPresenter/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <dx:NullToVisibilityConverter x:Key="NullToVisibilityConverter"/>
    <DataTemplate x:Key="DefaultRadialContextMenuCommandItemTemplate">
        <StackPanel VerticalAlignment="Center" HorizontalAlignment="Center">
            <Image 
                Stretch="None"
                Source="{Binding Path=Command.Uri}" 
                Visibility="{Binding Path=Command.Uri, Converter={StaticResource NullToVisibilityConverter}}"
                HorizontalAlignment="Center">
            </Image>
            <TextBlock
                Foreground="{ThemeResource RadialContextMenuLabelForegroundBrush}"
                Text="{Binding Path=Command.Label}"
                HorizontalAlignment="Center">
            </TextBlock>
        </StackPanel>
    </DataTemplate>
    <DataTemplate x:Key="DefaultRadialContextMenuRootCommandButtonTemplate">
        <Grid Background="Transparent">
            <Path Margin="5" Fill="{ThemeResource RadialContextMenuCenterButtonThemeBrush}" Data="F1 M 0.000366211,0L 23.0004,0L 23.0001,28.0003L 0,28.0003L 0.000366211,0 Z M 2.00012,2.00031L 1.99976,26.0005L 20.9996,26.0005L 21,2.00031L 2.00012,2.00031 Z M 6.00012,6.00012L 17.0001,6.00012L 17.0001,8.00012L 6.00012,8.00012L 6.00012,6.00012 Z M 6.00024,10L 17.0002,10L 17.0002,12L 6.00024,12L 6.00024,10 Z M 6.00037,14L 17.0004,14L 17.0004,16L 6.00037,16L 6.00037,14 Z M 6.00037,17.9999L 17.0004,17.9999L 17.0004,19.9999L 6.00037,19.9999L 6.00037,17.9999 Z "/>
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="DefaultRadialContextMenuTemplatedCommandButtonTemplate">
        <Grid/>
    </DataTemplate>
    <DataTemplate x:Key="DefaultRadialContextMenuCommandContainerButtonTemplate">
        <Grid Background="Transparent">
            <Path Margin="5" Fill="{ThemeResource RadialContextMenuCenterButtonThemeBrush}" Data="F1 M 0.000366211,0L 23.0004,0L 23.0001,28.0003L 0,28.0003L 0.000366211,0 Z M 2.00012,2.00031L 1.99976,26.0005L 20.9996,26.0005L 21,2.00031L 2.00012,2.00031 Z M 6.00012,6.00012L 17.0001,6.00012L 17.0001,8.00012L 6.00012,8.00012L 6.00012,6.00012 Z M 6.00024,10L 17.0002,10L 17.0002,12L 6.00024,12L 6.00024,10 Z M 6.00037,14L 17.0004,14L 17.0004,16L 6.00037,16L 6.00037,14 Z M 6.00037,17.9999L 17.0004,17.9999L 17.0004,19.9999L 6.00037,19.9999L 6.00037,17.9999 Z "/>
        </Grid>
    </DataTemplate>
    <Style TargetType="dxxaml:ContextMenuContainer">
        <Setter Property="StaysOpen" Value="True"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxxaml:ContextMenuContainer">
                    <Popup x:Name="PART_Popup">
                        <Grid x:Name="PART_RenderGrid">
                            <Border x:Name="PART_Container">
                                <ContentPresenter/>
                            </Border>
                        </Grid>
                    </Popup>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="dxxaml:RadialContextMenuRootCommand">
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxxaml:RadialContextMenuRootCommand">
                    <ContentControl 
                        IsTabStop="False"
                        Content="{Binding Path=Child, RelativeSource={RelativeSource TemplatedParent}}">
                    </ContentControl>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="dxxaml:RadialContextMenuCommand">
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxxaml:RadialContextMenuCommand">
                    <ContentControl 
                        Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource commandWrapper}}"
                        ContentTemplate="{Binding Path=ActualContentTemplate, RelativeSource={RelativeSource TemplatedParent}}">
                    </ContentControl>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="dxxaml:RadialContextMenuCommandContainer">
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxxaml:RadialContextMenuCommandContainer">
                    <Grid>
                        <ItemsControl 
                            x:Name="PART_Generator"
                            ItemsSource="{Binding Path=ActualItemsSource, RelativeSource={RelativeSource TemplatedParent}}"
                            ItemTemplate="{Binding Path=ItemTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                            ItemTemplateSelector="{Binding Path=ItemTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <Grid/>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                        </ItemsControl>
                        <ContentControl 
                            Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource commandWrapper}}"
                            ContentTemplate="{Binding Path=ActualContentTemplate, RelativeSource={RelativeSource TemplatedParent}}">
                        </ContentControl>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>

