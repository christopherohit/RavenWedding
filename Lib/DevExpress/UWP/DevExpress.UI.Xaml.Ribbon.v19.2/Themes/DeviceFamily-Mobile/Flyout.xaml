<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Ribbon="using:DevExpress.UI.Xaml.Ribbon"
    xmlns:Xaml="using:DevExpress.UI.Xaml"
    xmlns:XamlInternal="using:DevExpress.UI.Xaml.Internal"
    xmlns:Core="using:DevExpress.Core"
    xmlns:Controls="using:DevExpress.UI.Xaml.Controls"
    xmlns:Internal="using:DevExpress.UI.Xaml.Ribbon.Internal">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="ms-appx:///DevExpress.UI.Xaml.Ribbon.v19.2/Themes/Flyout.Colors.xaml"/>
    </ResourceDictionary.MergedDictionaries>
    
    <Style TargetType="Internal:ToolbarStackedFlyoutControl">
        <Setter Property="Foreground" Value="{ThemeResource ToolbarStackedFlyoutControlMobileForegroundBrush}"/>
        <Setter Property="Background" Value="{ThemeResource ToolbarStackedFlyoutControlMobileBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{ThemeResource ToolbarStackedFlyoutControlMobileBorderBrush}"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="AnimationDuration" Value="0"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HeaderEnabledMode" Value="Never"/>
        <Setter Property="BackButtonEnabledMode" Value="Always"/>
        <Setter Property="StaysOpen" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Internal:ToolbarStackedFlyoutControl">
                    <Popup x:Name="PART_Popup"
                           IsLightDismissEnabled="{TemplateBinding IsLightDismissEnabled}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="OrientationStates">
                                <VisualState x:Name="Horizontal">
                                    <VisualState.Setters>
                                        <Setter Target="PART_Content.(Grid.ColumnSpan)" Value="1"/>
                                        <Setter Target="PART_Content.(Grid.Row)" Value="0"/>
                                        <Setter Target="PART_Content.(Grid.Column)" Value="1"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Vertical"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <XamlInternal:MenuClippedGrid x:Name="PART_Container"
                                                      VerticalContentRectShift="0"
                                                      Background="{x:Null}"
                                                      HorizontalAlignment="Stretch">
                            <ContentPresenter Margin="{TemplateBinding Padding}"
                                              Background="{TemplateBinding Background}"
                                              x:Name="PART_Content"
                                              BorderBrush="{TemplateBinding BorderBrush}"
                                              BorderThickness="{TemplateBinding BorderThickness}"
                                              Grid.Row="1"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Style="{TemplateBinding ContainerStyle}"/>
                        </XamlInternal:MenuClippedGrid>
                    </Popup>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
