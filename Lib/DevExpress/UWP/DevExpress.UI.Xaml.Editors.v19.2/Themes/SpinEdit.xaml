<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:dxe="using:DevExpress.UI.Xaml.Editors"
    xmlns:dxi="using:DevExpress.UI.Xaml.Editors.Native"
    xmlns:dx="using:DevExpress.Core"
    xmlns:dxxaml="using:DevExpress.UI.Xaml">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="ms-appx:///DevExpress.UI.Xaml.Editors.v20.2/Themes/SpinEdit.Colors.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <ControlTemplate x:Key="SpinEdit_BorderTemplate" TargetType="ContentControl">
        <Grid x:Name="PART_Root" Background="Transparent" BorderThickness="2" BorderBrush="Transparent">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Target="BackgroundElement.Background" Value="{ThemeResource SpinEditBackgroundDisabledBrush}" />
                            <Setter Target="BorderElement.BorderBrush" Value="{ThemeResource SpinEditBorderDisabledBrush}" />
                            <Setter Target="ContentElement.Foreground" Value="{ThemeResource SpinEditForegroundDisabledBrush}" />
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Invalid">
                        <VisualState.Setters>
                            <Setter Target="BorderElement.BorderBrush" Value="{ThemeResource SpinEditInvalidBorderThemeBrush}" />
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="PointerOver">
                        <VisualState.Setters>
                            <Setter Target="BorderElement.BorderBrush" Value="{ThemeResource SpinEditBorderHoverThemeBrush}" />
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Focused">
                        <VisualState.Setters>
                            <Setter Target="BorderElement.BorderBrush" Value="{ThemeResource SpinEditBorderFocusedThemeBrush}" />
                            <Setter Target="PART_Root.BorderBrush" Value="{ThemeResource SpinEditOuterBorderFocusedThemeBrush}" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="BackgroundElement" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" Margin="1" />
            <Border x:Name="BorderElement" HorizontalAlignment="Stretch" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" />
            <ContentPresenter x:Name="ContentElement" Margin="{TemplateBinding BorderThickness}" />
            <dxe:EditorPopupContainer>
                <dxe:EditorPopup />
                <dxxaml:ValidationFlyout />
            </dxe:EditorPopupContainer>
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="SpinEdit_ButtonsTemplate" TargetType="dxe:TextEdit">
        <ContentControl VerticalAlignment="Stretch"
            VerticalContentAlignment="Center"
            Template="{StaticResource SpinEdit_BorderTemplate}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            Background="{TemplateBinding Background}"
            dxi:VisualStateHelper.Manager="{Binding Path=(dxe:PropertyProvider.Properties).BaseEditViewModel.StateManager, RelativeSource={RelativeSource TemplatedParent}}">
            <dxe:ButtonsControl x:Name="PART_Buttons"
                dxe:PropertyProvider.Properties="{TemplateBinding dxe:PropertyProvider.Properties}"
                ItemsSource="{Binding Path=(dxe:PropertyProvider.Properties).ButtonEditViewModel.Buttons, RelativeSource={RelativeSource Self}}">
                <dxe:ButtonsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <dxe:ButtonsPanel />
                    </ItemsPanelTemplate>
                </dxe:ButtonsControl.ItemsPanel>
            </dxe:ButtonsControl>
        </ContentControl>
    </ControlTemplate>
    <ControlTemplate x:Key="SpinEdit_Template" TargetType="dxe:TextEdit">
        <ContentControl VerticalAlignment="Stretch"
            IsTabStop="False"
            Template="{StaticResource SpinEdit_BorderTemplate}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            Background="{TemplateBinding Background}"
            dxi:VisualStateHelper.Manager="{Binding Path=(dxe:PropertyProvider.Properties).BaseEditViewModel.StateManager, RelativeSource={RelativeSource TemplatedParent}}">
            <Grid x:Name="ContentElement" UseLayoutRounding="True">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <dxe:ButtonsControl x:Name="PART_LeftButtons"
                    dxe:PropertyProvider.Properties="{TemplateBinding dxe:PropertyProvider.Properties}"
                    ItemsSource="{Binding Path=(dxe:PropertyProvider.Properties).ButtonEditViewModel.LeftButtons, RelativeSource={RelativeSource Self}}" />
                <dxe:EditorControl x:Name="PART_Content"
                    VerticalAlignment="Stretch"
                    HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                    VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                    Grid.Column="1"
                    dxe:PropertyProvider.Properties="{TemplateBinding dxe:PropertyProvider.Properties}"
                    ContentTemplate="{Binding Path=ActualEditTemplate, RelativeSource={RelativeSource TemplatedParent}}" />
                <dxe:ButtonsControl x:Name="PART_RightButtons"
                    dxe:PropertyProvider.Properties="{TemplateBinding dxe:PropertyProvider.Properties}"
                    Grid.Column="2"
                    ItemsSource="{Binding Path=(dxe:PropertyProvider.Properties).ButtonEditViewModel.RightButtons, RelativeSource={RelativeSource Self}}" />
            </Grid>
        </ContentControl>
    </ControlTemplate>
    <DataTemplate x:Key="SpinEdit_EditTemplate">
        <dxi:EditorTextBox x:Name="PART_Editor"
            OwnerEdit="{Binding Path=(dxe:PropertyProvider.Properties).Editor, RelativeSource={RelativeSource TemplatedParent}}"
            TextAlignment="{Binding Path=OwnerEdit.TextAlignment, RelativeSource={RelativeSource Mode=Self}}"
            IsTabStop="{Binding Path=OwnerEdit.IsTabStop, RelativeSource={RelativeSource Mode=Self}}"
            SelectionHighlightColor="{Binding Path=OwnerEdit.SelectionHighlightBrush, RelativeSource={RelativeSource Mode=Self}}"
            MaxLength="{Binding Path=OwnerEdit.MaxLength, RelativeSource={RelativeSource Mode=Self}}"
            TextWrapping="{Binding Path=OwnerEdit.TextWrapping, RelativeSource={RelativeSource Mode=Self}}"
            AcceptsReturn="{Binding Path=OwnerEdit.AcceptsReturn, RelativeSource={RelativeSource Mode=Self}}"
            IsTextPredictionEnabled="{Binding Path=OwnerEdit.IsTextPredictionEnabled, RelativeSource={RelativeSource Mode=Self}}"
            IsReadOnly="{Binding Path=OwnerEdit.IsReadOnly, RelativeSource={RelativeSource Mode=Self}}"
            VerticalContentAlignment="{Binding Path=OwnerEdit.VerticalContentAlignment, RelativeSource={RelativeSource Mode=Self}}"
            NullTextForeground="{Binding Path=OwnerEdit.NullTextForeground, RelativeSource={RelativeSource Mode=Self}}"
            InputScope="{Binding Path=OwnerEdit.InputScope, RelativeSource={RelativeSource Mode=Self}}"
            IsSpellCheckEnabled="{Binding Path=OwnerEdit.IsSpellCheckEnabled, RelativeSource={RelativeSource Mode=Self}}"
            Padding="{Binding Path=OwnerEdit.Padding, RelativeSource={RelativeSource Mode=Self}}" />
    </DataTemplate>
    <DataTemplate x:Key="SpinEdit_EditNonEditableTemplate">
        <TextBlock x:Name="PART_Editor"
            HorizontalAlignment="{Binding Path=(dxe:PropertyProvider.Properties).Editor.HorizontalContentAlignment, RelativeSource={RelativeSource TemplatedParent}}"
            VerticalAlignment="{Binding Path=(dxe:PropertyProvider.Properties).Editor.VerticalContentAlignment, RelativeSource={RelativeSource TemplatedParent}}"
            Padding="{Binding Path=(dxe:PropertyProvider.Properties).Editor.Padding, RelativeSource={RelativeSource Self}}" />
    </DataTemplate>
    <Style x:Key="ButtonsThemeKey_ButtonContainerStyle" TargetType="ContentControl">
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="dx:FocusHelper2.Focusable" Value="False" />
        <Setter Property="dx:StyleHelper.BindableSetters">
            <Setter.Value>
                <dx:BindableSetterCollection>
                    <dx:BindableSetter Property="ContentTemplate" Binding="{Binding Path=ActualTemplate}" />
                    <dx:BindableSetter Property="HorizontalAlignment" Binding="{Binding Path=HorizontalAlignment}" />
                    <dx:BindableSetter Property="VerticalAlignment" Binding="{Binding Path=VerticalAlignment}" />
                </dx:BindableSetterCollection>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="dxe:SpinEdit">
        <Setter Property="IsTabStop" Value="True" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="IsTextEditable" Value="True" />
        <Setter Property="MinWidth" Value="{ThemeResource TextControlThemeMinWidth}" />
        <Setter Property="MinHeight" Value="{ThemeResource TextControlThemeMinHeight}" />
        <Setter Property="Foreground" Value="{ThemeResource SpinEditForegroundBrush}" />
        <Setter Property="Background" Value="{ThemeResource SpinEditBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{ThemeResource SpinEditBorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
        <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
        <Setter Property="Padding" Value="{ThemeResource TextControlThemePadding}" />
        <Setter Property="NullTextForeground" Value="{ThemeResource SpinEditForegroundDisabledBrush}" />
        <Setter Property="SelectionHighlightBrush" Value="{ThemeResource SpinEditSelectionHighlightBrush}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="TextTemplate" Value="{StaticResource SpinEdit_Template}" />
        <Setter Property="EditTemplate" Value="{StaticResource SpinEdit_EditTemplate}" />
        <Setter Property="EditNonEditableTemplate" Value="{StaticResource SpinEdit_EditNonEditableTemplate}" />
        <Setter Property="ButtonsTemplate" Value="{StaticResource SpinEdit_ButtonsTemplate}" />
        <Setter Property="InputScope">
            <Setter.Value>
                <InputScope>
                    <InputScope.Names>
                        <InputScopeName NameValue="Number" />
                    </InputScope.Names>
                </InputScope>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxe:TextEdit">
                    <Grid x:Name="PART_Root">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Disabled">
                                    <VisualState.Setters>
                                        <Setter Target="BorderElement.Background" Value="{ThemeResource SpinEditBackgroundDisabledBrush}" />
                                        <Setter Target="BorderElement.BorderBrush" Value="{ThemeResource SpinEditBorderDisabledBrush}" />
                                        <Setter Target="EditableContentElement.Foreground" Value="{ThemeResource SpinEditForegroundDisabledBrush}" />
                                        <Setter Target="NonEditableContentElement.Foreground" Value="{ThemeResource SpinEditForegroundDisabledBrush}" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Invalid">
                                    <VisualState.Setters>
                                        <Setter Target="BorderElement.BorderBrush" Value="{ThemeResource SpinEditInvalidBorderThemeBrush}" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="PointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="BorderElement.BorderBrush" Value="{ThemeResource SpinEditBorderHoverThemeBrush}" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Focused">
                                    <VisualState.Setters>
                                        <Setter Target="BorderElement.BorderBrush" Value="{ThemeResource SpinEditBorderFocusedThemeBrush}" />
                                        <Setter Target="PART_OuterBorder.BorderBrush" Value="{ThemeResource SpinEditOuterBorderFocusedThemeBrush}" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <ContentPresenter x:Name="PART_Header"
                                          x:DeferLoadStrategy="Lazy"
                                          Visibility="Collapsed"
                                          Margin="0,0,0,4"
                                          FontWeight="Normal"
                                          Foreground="{ThemeResource SpinEditHeaderForegroundBrush}"
                                          Content="{TemplateBinding Header}"
                                          ContentTemplate="{TemplateBinding HeaderTemplate}" />
                        <Border x:Name="PART_OuterBorder"
                                Grid.Row="1"
                                Background="Transparent" 
                                BorderThickness="2"
                                BorderBrush="Transparent">
                            <dxi:EditorLayoutPanel x:Name="BorderElement"
                                                   Padding="{TemplateBinding BorderThickness}"
                                                   HorizontalAlignment="Stretch" 
                                                   BorderBrush="{TemplateBinding BorderBrush}" 
                                                   BorderThickness="{TemplateBinding BorderThickness}"
                                                   Background="{TemplateBinding Background}"
                                                   ButtonsSource="{Binding Path=(dxe:PropertyProvider.Properties).ButtonEditViewModel.Buttons, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                   ShowContent="{Binding Path=(dxe:PropertyProvider.Properties).Editor.ShowText, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                   OwnerEdit="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                   IsTextEditable="{TemplateBinding IsTextEditable}"
                                                   ButtonContainerStyle="{StaticResource ButtonsThemeKey_ButtonContainerStyle}">
                                <dxi:EditorTextBox Foreground="{TemplateBinding Foreground}"
                                                   x:Name="EditableContentElement"
                                                   TextAlignment="{TemplateBinding TextAlignment}"
                                                   Padding="{TemplateBinding Padding}"
                                                   IsTabStop="{TemplateBinding EditCoreIsTabStop}"
                                                   SelectionHighlightColor="{TemplateBinding SelectionHighlightBrush}"
                                                   MaxLength="{TemplateBinding MaxLength}"
                                                   TextWrapping="{TemplateBinding TextWrapping}"
                                                   AcceptsReturn="{TemplateBinding AcceptsReturn}"
                                                   IsTextPredictionEnabled="{TemplateBinding IsTextPredictionEnabled}"
                                                   IsReadOnly="{TemplateBinding IsReadOnly}"
                                                   VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                   NullTextForeground="{TemplateBinding NullTextForeground}"
                                                   InputScope="{TemplateBinding InputScope}"
                                                   IsSpellCheckEnabled="{TemplateBinding IsSpellCheckEnabled}"
                                                   HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" />
                                <dxi:EditorLayoutPanel.NonEditableContent>
                                <TextBlock x:Name="NonEditableContentElement"
                                           Padding="{TemplateBinding Padding}"
                                           FontFamily="{TemplateBinding FontFamily}"
                                           FontSize="{TemplateBinding FontSize}"
                                           FontStyle="{TemplateBinding FontStyle}"
                                           FontStretch="{TemplateBinding FontStretch}"
                                           FontWeight="{TemplateBinding FontWeight}"
                                           Foreground="{TemplateBinding Foreground}"
                                           HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                           VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </dxi:EditorLayoutPanel.NonEditableContent>
                        </dxi:EditorLayoutPanel>
                        </Border>
                        <dxe:EditorPopupContainer x:Name="PART_PopupContainer" 
                                                      x:DeferLoadStrategy="Lazy">
                            <dxe:EditorPopup />
                            <dxxaml:ValidationFlyout />
                        </dxe:EditorPopupContainer>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>

