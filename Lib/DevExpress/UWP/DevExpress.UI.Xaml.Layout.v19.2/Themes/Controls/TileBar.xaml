<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Core="using:DevExpress.Core"
                    xmlns:Layout="using:DevExpress.UI.Xaml.Layout"
                    xmlns:LayoutInternal="using:DevExpress.UI.Xaml.Layout.Internal"
                    xmlns:Xaml="using:DevExpress.UI.Xaml"
                    xmlns:XamlInternal="using:DevExpress.UI.Xaml.Internal"
                    >

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="ms-appx:///DevExpress.UI.Xaml.Layout.v19.2/Themes/Colors.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <!--#region TileBar-->
    <Core:BooleanToVisibilityConverter x:Key="boolToVisibilityConverter" />

    <ControlTemplate TargetType="LayoutInternal:TileBarItemArrowControl" x:Key="TileBarArrowTemplate">
        <Grid Background="{TemplateBinding Background}">
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Border Background="{ThemeResource TileItemHoverBackground}" x:Name="hoverBorder" Opacity="0" />
            <Rectangle Fill="{ThemeResource TileItemBackgroundBrush}" Width="1" HorizontalAlignment="Left" />
            <Path x:Name="Glyph" Stretch="Fill" Fill="{TemplateBinding Foreground}" HorizontalAlignment="Center" VerticalAlignment="Center"
                                      Data="F1 M 384,282L 391,282L 388,287L 387,287L 384,282 Z " RenderTransformOrigin="0.5,0.5"
                                      Width="7" Height="5">
                <Path.RenderTransform>
                    <RotateTransform x:Name="rotateTransform"/>
                </Path.RenderTransform>
            </Path>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal"/>
                    <VisualState x:Name="PointerOver">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="hoverBorder" Storyboard.TargetProperty="Opacity" Duration="0" To="1" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="hoverBorder" Storyboard.TargetProperty="Opacity" Duration="0" To="1" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="CheckedStates">
                    <VisualState x:Name="EmptyCheckedState" />
                    <VisualState x:Name="Checked">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="hoverBorder" Storyboard.TargetProperty="Opacity" Duration="0" To="1" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Unchecked" />
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
    </ControlTemplate>

    <ControlTemplate TargetType="LayoutInternal:TileButtonControl" x:Key="TileButtonControlTemplate">
        <Grid x:Name="PART_Root"
              Background="{TemplateBinding Background}"
              BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}"
              Padding="{TemplateBinding Padding}">

            <XamlInternal:NativeIconContentPresenter Owner="{TemplateBinding IconProvider}"
                                                     UseLayoutRounding="True" 
                                                     HorizontalAlignment="{TemplateBinding HorizontalGlyphAlignment}" 
                                                     VerticalAlignment="{TemplateBinding VerticalGlyphAlignment}"
                                                     LayoutInternal:ImageColorizer.Color="{Binding Path=(LayoutInternal:ImageColorizer.Color), RelativeSource={RelativeSource TemplatedParent}}"
                                                     LayoutInternal:ImageColorizer.IsEnabled="{TemplateBinding AllowGlyphTheming}"/>
            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              ContentTemplate="{TemplateBinding ContentTemplate}"/>


            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="PointerOver">
                        <VisualState.Setters>
                            <Setter Target="PART_Root.Background" Value="{ThemeResource TileItemHoverBackground}"/>
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <VisualState.Setters>
                            <Setter Target="PART_Root.Background" Value="{ThemeResource TileItemHoverBackground}"/>
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Disabled" />
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
    </ControlTemplate>

    <Style TargetType="Layout:TileBar">
        <Setter Property="LayoutInternal:ScrollableControl.ScrollButtonMode" Value="Default" />
        <Setter Property="Padding" Value="20,20,20,20" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Layout:TileBar">
                    <Grid BorderBrush="{TemplateBinding BorderBrush}"
                          BorderThickness="{TemplateBinding BorderThickness}"
                          Background="{TemplateBinding Background}"
                          Padding="{TemplateBinding Padding}">
                        <Xaml:FlyoutControl x:Name="PART_FlyoutControl" 
                                            Padding="0" 
                                            BorderThickness="0" 
                                            Foreground="{TemplateBinding Foreground}">
                            <Xaml:FlyoutControl.Settings>
                                <LayoutInternal:TileBarFlyoutSettings />
                            </Xaml:FlyoutControl.Settings>
                        </Xaml:FlyoutControl>
                        <LayoutInternal:ScrollableControl Orientation="{TemplateBinding Orientation}"
                                                          ScrollButtonMode="{TemplateBinding LayoutInternal:ScrollableControl.ScrollButtonMode}">
                            <ItemsPresenter x:Name="PART_ItemsPresenter" />
                        </LayoutInternal:ScrollableControl>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <LayoutInternal:TileBarItemsPanel Background="Transparent"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate TargetType="LayoutInternal:TileSelectorItem" x:Key="TileSelectorItemTemplate">
        <Grid>
            <Grid x:Name="Border"
                  Margin="{TemplateBinding SelectionPadding}"
                  Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <LayoutInternal:TileButtonControl x:Name="PART_Button" Content="{TemplateBinding ActualTileContent}"
                                            LayoutInternal:ImageColorizer.Color="{Binding Path=(LayoutInternal:ImageColorizer.Color), RelativeSource={RelativeSource TemplatedParent}}"
                                            Padding="{TemplateBinding Padding}"
                                            ContentTemplate="{TemplateBinding ActualTileContentTemplate}"
                                            ContentTemplateSelector="{TemplateBinding ActualTileContentTemplateSelector}"
                                            IconProvider="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                            HorizontalGlyphAlignment="{TemplateBinding HorizontalTileGlyphAlignment}"
                                            VerticalGlyphAlignment="{TemplateBinding VerticalTileGlyphAlignment}"
                                            AllowGlyphTheming="{TemplateBinding AllowGlyphTheming}"
                                            Background="{TemplateBinding CalculatedBackground}"
                                            Foreground="{TemplateBinding CalculatedForeground}"
                                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
                </LayoutInternal:TileButtonControl>
                <LayoutInternal:TileBarItemArrowControl x:Name="PART_ArrowButton" Grid.Column="1" Width="31"
                    Visibility="{Binding Path=IsFlyoutButtonVisible, RelativeSource={RelativeSource TemplatedParent}, Converter={ThemeResource boolToVisibilityConverter}}"
                    Background="{TemplateBinding CalculatedBackground}"
                    Foreground="{TemplateBinding CalculatedForeground}"/>
            </Grid>

            <Border BorderThickness="2" Opacity="0" x:Name="selection" IsHitTestVisible="False" BorderBrush="{TemplateBinding Background}"/>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="PointerOver"/>
                    <VisualState x:Name="Pressed"/>
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="Border" Storyboard.TargetProperty="Opacity" Duration="0" To="0.35"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Normal" />
                </VisualStateGroup>
                <VisualStateGroup x:Name="SelectionStates">
                    <VisualState x:Name="Unselected" />
                    <VisualState x:Name="Selected">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="selection" Storyboard.TargetProperty="Opacity" Duration="0" To="1" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
    </ControlTemplate>

    <Style TargetType="LayoutInternal:TileSelectorItem" x:Key="TileSelectorItemStyle">
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Bottom" />
        <Setter Property="Padding" Value="8" />
        <Setter Property="Template" Value="{ThemeResource TileSelectorItemTemplate}" />
        <Setter Property="Background" Value="{ThemeResource TileSelectorItemBackground}" />
        <Setter Property="Foreground" Value="{ThemeResource TileSelectorItemForeground}" />
    </Style>

    <Style TargetType="LayoutInternal:TileBarItemArrowControl">
        <Setter Property="Template" Value="{ThemeResource TileBarArrowTemplate}"/>
        <Setter Property="Background" Value="Transparent" />
    </Style>

    <Style TargetType="Layout:TileBarItem" BasedOn="{StaticResource TileSelectorItemStyle}">
    </Style>

    <Style TargetType="LayoutInternal:TileButtonControl">
        <Setter Property="Template" Value="{ThemeResource TileButtonControlTemplate}"/>
        <Setter Property="Background" Value="Transparent" />
    </Style>
    <!--#endregion-->

    <!--#region ScrollableControl-->
    <ControlTemplate x:Key="ScrollableControlButtonTemplate" TargetType="LayoutInternal:ScrollableControlButton">
        <Grid x:Name="Root" Background="{TemplateBinding Background}">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal"/>
                    <VisualState x:Name="PointerOver">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="State">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ItemBackgroundHover}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="State">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource pathFillHover}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="PathLeft">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource pathFillHover}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="PathRight">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource pathFillHover}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="PathUp">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource pathFillHover}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="PathDown">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource pathFillHover}"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="State">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ItemBackgroundPressed}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="State">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ItemBackgroundPressed}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="PathLeft">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource pathFillPressed}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="PathRight">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource pathFillPressed}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="PathUp">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource pathFillPressed}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="PathDown">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource pathFillPressed}"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="Visibility" LayoutInternal:ValueSetter.Visibility="Collapsed" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="Rotations">
                    <VisualState x:Name="Left">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="PathLeft" Storyboard.TargetProperty="Opacity" Duration="0" To="1" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Right">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="PathRight" Storyboard.TargetProperty="Opacity" Duration="0" To="1" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Up">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="PathUp" Storyboard.TargetProperty="Opacity" Duration="0" To="1" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Down">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="PathDown" Storyboard.TargetProperty="Opacity" Duration="0" To="1" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="State" CornerRadius="2" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" />
            <Path x:Name="PathLeft"  Stretch="Fill" Fill="{ThemeResource pathFillDefault}" Data="M 0 0 L 0 8 L 4 4 Z"  Width="6" Height="12" Margin="1,0,-1,0" Opacity="0" />
            <Path x:Name="PathRight" Stretch="Fill" Fill="{ThemeResource pathFillDefault}" Data="M 0 4 L 4 8 L 4 0 Z"  Width="6" Height="12" Margin="-1,0,1,0" Opacity="0" />
            <Path x:Name="PathUp"    Stretch="Fill" Fill="{ThemeResource pathFillDefault}" Data="M 0 4 L 7 4 L 3.5 0 Z" Width="12" Height="6" Margin="0,-1,0,1" Opacity="0" />
            <Path x:Name="PathDown"  Stretch="Fill" Fill="{ThemeResource pathFillDefault}" Data="M 0 0 L 3.5 4 L 7 0 Z" Width="12" Height="6" Margin="0,1,0,-1" Opacity="0" />
        </Grid>
    </ControlTemplate>

    <Style TargetType="LayoutInternal:ScrollableControlButton">
        <Setter Property="Background" Value="{ThemeResource ScrollableControlButtonBackgroundBrush}"/>
        <Setter Property="Template" Value="{StaticResource ScrollableControlButtonTemplate}"/>
    </Style>

    <Style TargetType="LayoutInternal:ScrollableControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="LayoutInternal:ScrollableControl">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <ContentPresenter Grid.Column="1" Grid.Row="1"/>
                        <LayoutInternal:ScrollableControlButton Visibility="Collapsed" Direction="Up" Command="{TemplateBinding ScrollPrev}" x:Name="PART_TopButton" Height="20" VerticalAlignment="Top" Grid.Column="1"/>
                        <LayoutInternal:ScrollableControlButton Visibility="Collapsed" Direction="Down" Command="{TemplateBinding ScrollNext}" x:Name="PART_BottomButton" Height="20" VerticalAlignment="Bottom" Grid.Column="1" Grid.Row="2"/>
                        <LayoutInternal:ScrollableControlButton Direction="Right" Command="{TemplateBinding ScrollPrev}" x:Name="PART_LeftButton" Width="20" HorizontalAlignment="Left" Grid.Row="1"/>
                        <LayoutInternal:ScrollableControlButton Direction="Left" Command="{TemplateBinding ScrollNext}" x:Name="PART_RightButton" Width="20" HorizontalAlignment="Right" Grid.Row="1" Grid.Column="2"/>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="OrientationStates">
                                <VisualState x:Name="EmptyOrientationState"/>
                                <VisualState x:Name="Horizontal"/>
                                <VisualState x:Name="Vertical">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_RightButton" Storyboard.TargetProperty="Visibility" LayoutInternal:ValueSetter.Visibility="Collapsed"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_LeftButton" Storyboard.TargetProperty="Visibility" LayoutInternal:ValueSetter.Visibility="Collapsed"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_TopButton" Storyboard.TargetProperty="Visibility" LayoutInternal:ValueSetter.Visibility="Visible"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_BottomButton" Storyboard.TargetProperty="Visibility" LayoutInternal:ValueSetter.Visibility="Visible"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ScrollStates">
                                <VisualState x:Name="DefaultScroll"/>
                                <VisualState x:Name="OverlappedScroll">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_RightButton" Storyboard.TargetProperty="(Grid.Column)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <x:Int32>1</x:Int32>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_LeftButton" Storyboard.TargetProperty="(Grid.Column)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <x:Int32>1</x:Int32>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_TopButton" Storyboard.TargetProperty="(Grid.Row)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <x:Int32>1</x:Int32>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_BottomButton" Storyboard.TargetProperty="(Grid.Row)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <x:Int32>1</x:Int32>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="DisabledScroll">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_RightButton" Storyboard.TargetProperty="Visibility" LayoutInternal:ValueSetter.Visibility="Collapsed"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_LeftButton" Storyboard.TargetProperty="Visibility" LayoutInternal:ValueSetter.Visibility="Collapsed"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_TopButton" Storyboard.TargetProperty="Visibility" LayoutInternal:ValueSetter.Visibility="Collapsed"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_BottomButton" Storyboard.TargetProperty="Visibility" LayoutInternal:ValueSetter.Visibility="Collapsed"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->
</ResourceDictionary>

