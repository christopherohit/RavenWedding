<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <assembly>
    <name>DevExpress.EasyTest.v19.2</name>
  </assembly>
  <members>
    <member name="N:DevExpress.EasyTest.Framework">
      <summary>
        <para>Contains interfaces and classes that implement EasyTest functionality.</para>
      </summary>
    </member>
    <member name="T:DevExpress.EasyTest.Framework.Command">
      <summary>
        <para>An abstract base class for classes that implement EasyTest commands.</para>
      </summary>
    </member>
    <member name="M:DevExpress.EasyTest.Framework.Command.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.EasyTest.Framework.Command"/> class.</para>
      </summary>
    </member>
    <member name="M:DevExpress.EasyTest.Framework.Command.CheckControlEnabled(DevExpress.EasyTest.Framework.ITestControl)">
      <summary>
        <para>Throws an exception if the specified test control is disabled.</para>
      </summary>
      <param name="testControl">An ITestContol object that specifies the test control.</param>
    </member>
    <member name="P:DevExpress.EasyTest.Framework.Command.EndLineIndex">
      <summary>
        <para>Gets the line number where the previous command is finished.</para>
      </summary>
      <value>An integer value that is the line number where the previous command is finished.</value>
    </member>
    <member name="P:DevExpress.EasyTest.Framework.Command.EndPosition">
      <summary>
        <para>Gets the position in the script where the current command starts.</para>
      </summary>
      <value>The PositionInScript object specifying the position in the script where the current command ends.</value>
    </member>
    <member name="M:DevExpress.EasyTest.Framework.Command.Execute(DevExpress.EasyTest.Framework.ICommandAdapter)">
      <summary>
        <para>Executes an Functional Testing command implemented by the <see cref="T:DevExpress.EasyTest.Framework.Command"/> class.</para>
      </summary>
      <param name="adapter">An ICommandAdapter object that is the EasyTest command adapter.</param>
    </member>
    <member name="P:DevExpress.EasyTest.Framework.Command.ExpectException">
      <summary>
        <para>Gets if the current Functional Testing command is expected to fail.</para>
      </summary>
      <value>true, it the command is expected to fail, otherwise - false.</value>
    </member>
    <member name="P:DevExpress.EasyTest.Framework.Command.Parameters">
      <summary>
        <para>Gets parameters, passed to the EasyTest command.</para>
      </summary>
      <value>A <see cref="T:DevExpress.EasyTest.Framework.ParameterList"/> object that exposes parameters of the EasyTest command.</value>
    </member>
    <member name="M:DevExpress.EasyTest.Framework.Command.ParseCommand(DevExpress.EasyTest.Framework.CommandCreationParam)">
      <summary>
        <para>Parses the current command.</para>
      </summary>
      <param name="commandCreationParam">The CommandCreationParam object .</param>
    </member>
    <member name="P:DevExpress.EasyTest.Framework.Command.StartPosition">
      <summary>
        <para>Gets the position in the script where the current command starts.</para>
      </summary>
      <value>The PositionInScript object specifying the position in the script where the current command starts.</value>
    </member>
    <member name="P:DevExpress.EasyTest.Framework.Command.Text">
      <summary>
        <para>Gets the command text, including all command parameters.</para>
      </summary>
      <value>A string containing the command text.</value>
    </member>
    <member name="T:DevExpress.EasyTest.Framework.CommandException">
      <summary>
        <para>Specifies an exception that occurs when executing an EasyTest command.</para>
      </summary>
    </member>
    <member name="M:DevExpress.EasyTest.Framework.CommandException.#ctor(System.String,DevExpress.EasyTest.Framework.PositionInScript)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.EasyTest.Framework.CommandException"/> class.</para>
      </summary>
      <param name="errorMessage">A string that describes an error that has occured.</param>
      <param name="startPosition">The PositionInScript object that specifies the position of the command that is being executed.</param>
    </member>
    <member name="T:DevExpress.EasyTest.Framework.ICommandAdapter">
      <summary>
        <para>Declares members exposed by EasyTest command adapters.</para>
      </summary>
    </member>
    <member name="M:DevExpress.EasyTest.Framework.ICommandAdapter.CreateTestControl(System.String,System.String)">
      <summary>
        <para>Finds the specific control and creates the test control for it.</para>
      </summary>
      <param name="controlType">A string that specifies the test control types. Valid types can be obtained from the <see cref="T:DevExpress.EasyTest.Framework.TestControlType"/> class&#39; constants.</param>
      <param name="name">A sting that is the control caption.</param>
      <returns>An <see cref="T:DevExpress.EasyTest.Framework.ITestControl"/> object that is the created test control.</returns>
    </member>
    <member name="M:DevExpress.EasyTest.Framework.ICommandAdapter.IsControlExist(System.String,System.String)">
      <summary>
        <para>Checks if the specified control exists.</para>
      </summary>
      <param name="controlType">A string that specifies the test control types. Valid types can be obtained from the <see cref="T:DevExpress.EasyTest.Framework.TestControlType"/> class&#39; constants.</param>
      <param name="name">A sting that is the control name.</param>
      <returns>true, is the control exists; otherwise - false.</returns>
    </member>
    <member name="T:DevExpress.EasyTest.Framework.IControlAct">
      <summary>
        <para>Declares members of test controls that can be &quot;executed&quot; (e.g. Action, button, etc.).</para>
      </summary>
    </member>
    <member name="M:DevExpress.EasyTest.Framework.IControlAct.Act(System.String)">
      <summary>
        <para>Executes an Action.</para>
      </summary>
      <param name="value">A string that is the Action item&#39;s caption.</param>
    </member>
    <member name="T:DevExpress.EasyTest.Framework.IControlActionItems">
      <summary>
        <para>Declares members of test controls that have choice items.</para>
      </summary>
    </member>
    <member name="M:DevExpress.EasyTest.Framework.IControlActionItems.IsEnabled(System.String)">
      <summary>
        <para>Checks if an Action&#39;s item is enabled.</para>
      </summary>
      <param name="item">A string that is an item&#39;s caption.</param>
      <returns>true, if an item is enabled; otherwise - false.</returns>
    </member>
    <member name="M:DevExpress.EasyTest.Framework.IControlActionItems.IsVisible(System.String)">
      <summary>
        <para>Checks if an Action&#39;s item is visible.</para>
      </summary>
      <param name="item">A string that is an item&#39;s caption.</param>
      <returns>true, if an item is visible; otherwise - false.</returns>
    </member>
    <member name="T:DevExpress.EasyTest.Framework.IControlEnabled">
      <summary>
        <para>Declares members of test controls that can be in an enabled or disabled state.</para>
      </summary>
    </member>
    <member name="P:DevExpress.EasyTest.Framework.IControlEnabled.Enabled">
      <summary>
        <para>Checks if the test control is enabled.</para>
      </summary>
      <value>true, if the control is enabled; otherwise - false.</value>
    </member>
    <member name="T:DevExpress.EasyTest.Framework.IControlHint">
      <summary>
        <para>Declares members of test controls that have a hint.</para>
      </summary>
    </member>
    <member name="P:DevExpress.EasyTest.Framework.IControlHint.Hint">
      <summary>
        <para>Gets the test control&#39;s hint.</para>
      </summary>
      <value>A string that is the test control&#39;s hint.</value>
    </member>
    <member name="T:DevExpress.EasyTest.Framework.IControlReadOnlyText">
      <summary>
        <para>Declares members of test controls providing a readonly text.</para>
      </summary>
    </member>
    <member name="P:DevExpress.EasyTest.Framework.IControlReadOnlyText.Text">
      <summary>
        <para>Gets the text from the current test control.</para>
      </summary>
      <value>A string that is the text from the current test control.</value>
    </member>
    <member name="T:DevExpress.EasyTest.Framework.IControlText">
      <summary>
        <para>Declares members of test controls that provides an editable text.</para>
      </summary>
    </member>
    <member name="P:DevExpress.EasyTest.Framework.IControlText.Text">
      <summary>
        <para>Specifies the text of the current test control.</para>
      </summary>
      <value>A string that is the text from the current test control.</value>
    </member>
    <member name="T:DevExpress.EasyTest.Framework.IGridAct">
      <summary>
        <para>Declares members of test controls that is a grid with actions in cells.</para>
      </summary>
    </member>
    <member name="M:DevExpress.EasyTest.Framework.IGridAct.CheckGridAct(System.String,System.Int32,DevExpress.EasyTest.Framework.IGridColumn,System.Boolean)">
      <summary>
        <para>Throws an exception if a specified action located within a cell is disabled.</para>
      </summary>
      <param name="actionName">A string that is the Action&#39;s name.</param>
      <param name="rowIndex">An integer value that is the row number.</param>
      <param name="column">An <see cref="T:DevExpress.EasyTest.Framework.IGridColumn"/> test control that specifies the column.</param>
      <param name="isInlineOnly">true, to check only inline actions; otherwise, false.</param>
    </member>
    <member name="M:DevExpress.EasyTest.Framework.IGridAct.GridAct(System.String,System.Int32,DevExpress.EasyTest.Framework.IGridColumn)">
      <summary>
        <para>Executes an action located within a cell.</para>
      </summary>
      <param name="actionName">A string that is the Action&#39;s name.</param>
      <param name="rowIndex">An integer value that is the row number.</param>
      <param name="column">An <see cref="T:DevExpress.EasyTest.Framework.IGridColumn"/> test control that specifies the column.</param>
    </member>
    <member name="T:DevExpress.EasyTest.Framework.IGridBase">
      <summary>
        <para>Declares members of a test controls that are grids.</para>
      </summary>
    </member>
    <member name="P:DevExpress.EasyTest.Framework.IGridBase.Columns">
      <summary>
        <para>Gets a list of columns.</para>
      </summary>
      <value>An IEnumerable&lt;<see cref="T:DevExpress.EasyTest.Framework.IGridColumn"/>&gt; object specifying a list of columns.</value>
    </member>
    <member name="M:DevExpress.EasyTest.Framework.IGridBase.GetCellValue(System.Int32,DevExpress.EasyTest.Framework.IGridColumn)">
      <summary>
        <para>Returns a value from the specified cell.</para>
      </summary>
      <param name="row">An integer that is the row number.</param>
      <param name="column">An <see cref="T:DevExpress.EasyTest.Framework.IGridColumn"/> object that specifies the column.</param>
      <returns>A string that is a value from the specified cell.</returns>
    </member>
    <member name="M:DevExpress.EasyTest.Framework.IGridBase.GetRowCount">
      <summary>
        <para>Returns the number of rows in the current grid.</para>
      </summary>
      <returns>An integer that is the number of rows in the current grid.</returns>
    </member>
    <member name="T:DevExpress.EasyTest.Framework.IGridCellControlCreation">
      <summary>
        <para>Declares members of test controls that are grids with the inline editing feature.</para>
      </summary>
    </member>
    <member name="M:DevExpress.EasyTest.Framework.IGridCellControlCreation.BeginEdit(System.Int32)">
      <summary>
        <para>Indicates that row editing has begun.</para>
      </summary>
      <param name="row">An integer value that is the row number.</param>
    </member>
    <member name="M:DevExpress.EasyTest.Framework.IGridCellControlCreation.CreateCellControl(System.Int32,DevExpress.EasyTest.Framework.IGridColumn)">
      <summary>
        <para>Returns the test control for the specified cell in the editable grid.</para>
      </summary>
      <param name="row">An integer that is the row number.</param>
      <param name="column">An <see cref="T:DevExpress.EasyTest.Framework.IGridColumn"/> object that specifies the column.</param>
      <returns>An <see cref="T:DevExpress.EasyTest.Framework.ITestControl"/> object that is the test control for the specified cell in the editable grid.</returns>
    </member>
    <member name="M:DevExpress.EasyTest.Framework.IGridCellControlCreation.EndEdit">
      <summary>
        <para>Indicates that row editing has finished.</para>
      </summary>
    </member>
    <member name="T:DevExpress.EasyTest.Framework.IGridColumn">
      <summary>
        <para>Declares members of test controls that are grid columns.</para>
      </summary>
    </member>
    <member name="P:DevExpress.EasyTest.Framework.IGridColumn.Caption">
      <summary>
        <para>Gets the column caption.</para>
      </summary>
      <value>A string that is the column caption.</value>
    </member>
    <member name="P:DevExpress.EasyTest.Framework.IGridColumn.Visible">
      <summary>
        <para>Indicates the current column&#39;s visibility.</para>
      </summary>
      <value>true, if the column is visible; otherwise - false.</value>
    </member>
    <member name="T:DevExpress.EasyTest.Framework.IGridRowsSelection">
      <summary>
        <para>Declares members of test controls that are grids with row selection capability.</para>
      </summary>
    </member>
    <member name="M:DevExpress.EasyTest.Framework.IGridRowsSelection.ClearSelection">
      <summary>
        <para>Clears the selection from the grid.</para>
      </summary>
    </member>
    <member name="M:DevExpress.EasyTest.Framework.IGridRowsSelection.IsRowSelected(System.Int32)">
      <summary>
        <para>Checks if the row is selected.</para>
      </summary>
      <param name="rowIndex">An integer that is a row number.</param>
      <returns>true, if the row is selected; otherwise - false.</returns>
    </member>
    <member name="M:DevExpress.EasyTest.Framework.IGridRowsSelection.SelectRow(System.Int32)">
      <summary>
        <para>Selects the specified row.</para>
      </summary>
      <param name="rowIndex">An integer that is a row number.</param>
    </member>
    <member name="M:DevExpress.EasyTest.Framework.IGridRowsSelection.UnselectRow(System.Int32)">
      <summary>
        <para>Removes selection from the specified row.</para>
      </summary>
      <param name="rowIndex">An integer that is a row number.</param>
    </member>
    <member name="T:DevExpress.EasyTest.Framework.ITestControl">
      <summary>
        <para>Declares members of test controls.</para>
      </summary>
    </member>
    <member name="P:DevExpress.EasyTest.Framework.ITestControl.ControlType">
      <summary>
        <para>For internal use.</para>
      </summary>
      <value></value>
    </member>
    <member name="M:DevExpress.EasyTest.Framework.ITestControl.FindInterface``1">
      <summary>
        <para>Returns the specified test control, or null when a test control is not found.</para>
      </summary>
      <returns>A test control of the specified type.</returns>
    </member>
    <member name="M:DevExpress.EasyTest.Framework.ITestControl.GetInterface``1">
      <summary>
        <para>Returns the specified test control, or throws an exception when test control is not found.</para>
      </summary>
      <returns>A test control of the specified type.</returns>
    </member>
    <member name="P:DevExpress.EasyTest.Framework.ITestControl.Name">
      <summary>
        <para>Specifies the name of the test control.</para>
      </summary>
      <value>A string that is the name of the test control.</value>
    </member>
    <member name="T:DevExpress.EasyTest.Framework.ITestControlContainer">
      <summary>
        <para>Declares members of test controls that are containers for another control.</para>
      </summary>
    </member>
    <member name="P:DevExpress.EasyTest.Framework.ITestControlContainer.TestControl">
      <summary>
        <para>Specifies the test control that is located inside the current container.</para>
      </summary>
      <value>An ITestControl object that is the test control.</value>
    </member>
    <member name="T:DevExpress.EasyTest.Framework.ITestWindow">
      <summary>
        <para>Declares members of test controls that are resizable windows with captions.</para>
      </summary>
    </member>
    <member name="P:DevExpress.EasyTest.Framework.ITestWindow.Caption">
      <summary>
        <para>Gets the window caption.</para>
      </summary>
      <value>A string that is the window caption.</value>
    </member>
    <member name="M:DevExpress.EasyTest.Framework.ITestWindow.Close">
      <summary>
        <para>Closes the window.</para>
      </summary>
    </member>
    <member name="M:DevExpress.EasyTest.Framework.ITestWindow.GetActiveWindowHandle">
      <summary>
        <para>Returns a handle of the active window.</para>
      </summary>
      <returns>A System.IntPtr object that is the active window&#39;s handle.</returns>
    </member>
    <member name="M:DevExpress.EasyTest.Framework.ITestWindow.SetWindowSize(System.Int32,System.Int32)">
      <summary>
        <para>Resizes the window to the specified width and height.</para>
      </summary>
      <param name="width">An integer, that is the window width.</param>
      <param name="height">An integer, that is the window height.</param>
    </member>
    <member name="T:DevExpress.EasyTest.Framework.ParameterList">
      <summary>
        <para>Specifies the EasyTest command&#39;s parameters.</para>
      </summary>
    </member>
    <member name="M:DevExpress.EasyTest.Framework.ParameterList.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.EasyTest.Framework.ParameterList"/> class.</para>
      </summary>
    </member>
    <member name="P:DevExpress.EasyTest.Framework.ParameterList.ExtraParameter">
      <summary>
        <para>Specifies an argument passed to the Functional Testing command&#39;s primary parameter.</para>
      </summary>
      <value>A MainParameter object that specifies an argument passed to the Functional Testing command&#39;s primary parameter.</value>
    </member>
    <member name="P:DevExpress.EasyTest.Framework.ParameterList.Item(System.String)">
      <summary>
        <para>Specifies the list of secondary parameters.</para>
      </summary>
      <param name="name">A string that is the parameter&#39;s name.</param>
      <value>The Parameter object that specifies the secondary parameter.</value>
    </member>
    <member name="P:DevExpress.EasyTest.Framework.ParameterList.MainParameter">
      <summary>
        <para>Specifies the command&#39;s primary parameter.</para>
      </summary>
      <value>A MainParameter object that is the command&#39;s primary parameter.</value>
    </member>
    <member name="M:DevExpress.EasyTest.Framework.ParameterList.ToString">
      <summary>
        <para>Returns a string representation of the <see cref="T:DevExpress.EasyTest.Framework.ParameterList"/> object.</para>
      </summary>
      <returns>A string representation of the <see cref="T:DevExpress.EasyTest.Framework.ParameterList"/> object.</returns>
    </member>
    <member name="T:DevExpress.EasyTest.Framework.TestControlType">
      <summary>
        <para>Contains string constants that specify types of test controls.</para>
      </summary>
    </member>
    <member name="M:DevExpress.EasyTest.Framework.TestControlType.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.EasyTest.Framework.TestControlType"/> class.</para>
      </summary>
    </member>
    <member name="F:DevExpress.EasyTest.Framework.TestControlType.Action">
      <summary>
        <para>Specifies that the test control is an Action.</para>
      </summary>
      <value></value>
    </member>
    <member name="F:DevExpress.EasyTest.Framework.TestControlType.Dialog">
      <summary>
        <para>Specifies that the test control is a Dialog.</para>
      </summary>
      <value></value>
    </member>
    <member name="F:DevExpress.EasyTest.Framework.TestControlType.Field">
      <summary>
        <para>Specifies that the test control is a text input.</para>
      </summary>
      <value></value>
    </member>
    <member name="F:DevExpress.EasyTest.Framework.TestControlType.Table">
      <summary>
        <para>Specifies that the test control is a grid.</para>
      </summary>
      <value></value>
    </member>
  </members>
</doc>