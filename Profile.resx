<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Profile.IconOptions.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        9/wD8O2R5VEURVoAAAAASUVORK5CYII=
</value>
  </data>
</root>